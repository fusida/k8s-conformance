  I0722 18:39:45.080142      21 e2e.go:109] Starting e2e run "fefde6c2-c539-4f8e-a452-a58c2541b59c" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1753209584 - will randomize all specs

Will run 411 of 6625 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0722 18:39:45.307275 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 18:39:45.309165 21 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0722 18:39:45.332843 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0722 18:39:45.337302 21 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0722 18:39:45.337527 21 e2e.go:245] e2e test version: v1.32.7
  I0722 18:39:45.338864 21 e2e.go:254] kube-apiserver version: v1.32.7
  I0722 18:39:45.338936 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 18:39:45.343184 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.036 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/22/25 18:39:45.551
  I0722 18:39:45.551763 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 18:39:45.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:39:45.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:39:45.573
  I0722 18:39:45.608338 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9863" for this suite. @ 07/22/25 18:39:45.612
• [0.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/22/25 18:39:45.621
  I0722 18:39:45.621446 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 18:39:45.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:39:45.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:39:45.637
  I0722 18:39:47.692818 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3885" for this suite. @ 07/22/25 18:39:47.698
• [2.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/22/25 18:39:47.706
  I0722 18:39:47.706665 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 18:39:47.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:39:47.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:39:47.725
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 18:39:47.728
  STEP: Saw pod success @ 07/22/25 18:39:55.763
  I0722 18:39:55.767549 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod downwardapi-volume-af3b5db4-3134-4bcf-8ca6-ae96d86213ea container client-container: <nil>
  STEP: delete the pod @ 07/22/25 18:39:55.783
  I0722 18:39:55.798967 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5918" for this suite. @ 07/22/25 18:39:55.803
• [8.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/22/25 18:39:55.811
  I0722 18:39:55.811137 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename csinodes @ 07/22/25 18:39:55.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:39:55.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:39:55.827
  STEP: Creating initial csiNode "e2e-csinode-5bnxx" @ 07/22/25 18:39:55.83
  STEP: Getting initial csiNode "e2e-csinode-5bnxx" @ 07/22/25 18:39:55.838
  STEP: Patching initial csiNode: "e2e-csinode-5bnxx" @ 07/22/25 18:39:55.841
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-5bnxx=patched" @ 07/22/25 18:39:55.846
  STEP: Delete initial csiNode: "e2e-csinode-5bnxx" @ 07/22/25 18:39:55.85
  STEP: Confirm deletion of csiNode "e2e-csinode-5bnxx" @ 07/22/25 18:39:55.856
  STEP: Creating replacement csiNode "e2e-csinode-vfhl4" @ 07/22/25 18:39:55.86
  STEP: Getting replacement csiNode "e2e-csinode-vfhl4" @ 07/22/25 18:39:55.864
  STEP: Updating replacement csiNode "e2e-csinode-vfhl4" @ 07/22/25 18:39:55.869
  STEP: DeleteCollection of CSINodes with "e2e-csinode-vfhl4=updated" label @ 07/22/25 18:39:55.876
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-vfhl4=updated" @ 07/22/25 18:39:55.884
  I0722 18:39:55.888251 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-6099" for this suite. @ 07/22/25 18:39:55.904
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/22/25 18:39:55.911
  I0722 18:39:55.911581 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename subpath @ 07/22/25 18:39:55.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:39:55.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:39:55.929
  STEP: Setting up data @ 07/22/25 18:39:55.932
  STEP: Creating pod pod-subpath-test-configmap-fdvd @ 07/22/25 18:39:55.941
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 18:39:55.941
  STEP: Saw pod success @ 07/22/25 18:40:20.024
  I0722 18:40:20.028490 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-subpath-test-configmap-fdvd container test-container-subpath-configmap-fdvd: <nil>
  STEP: delete the pod @ 07/22/25 18:40:20.045
  STEP: Deleting pod pod-subpath-test-configmap-fdvd @ 07/22/25 18:40:20.062
  I0722 18:40:20.062731 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-fdvd" in namespace "subpath-2821"
  I0722 18:40:20.066249 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2821" for this suite. @ 07/22/25 18:40:20.07
• [24.167 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 07/22/25 18:40:20.078
  I0722 18:40:20.078516 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 18:40:20.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:40:20.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:40:20.095
  I0722 18:40:24.129150 21 security_context.go:538] Got logs for pod "busybox-privileged-false-d93a01bf-3d82-41e5-a70d-ea87f2d61148": "ip: RTNETLINK answers: Operation not permitted\n"
  I0722 18:40:24.129277 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-143" for this suite. @ 07/22/25 18:40:24.133
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 07/22/25 18:40:24.142
  I0722 18:40:24.142517 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 18:40:24.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:40:24.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:40:24.158
  STEP: Creating a job @ 07/22/25 18:40:24.162
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/22/25 18:40:24.168
  STEP: patching /status @ 07/22/25 18:40:26.179
  STEP: updating /status @ 07/22/25 18:40:26.186
  STEP: get /status @ 07/22/25 18:40:26.195
  I0722 18:40:26.199167 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1492" for this suite. @ 07/22/25 18:40:26.204
• [2.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 07/22/25 18:40:26.213
  I0722 18:40:26.213550 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 18:40:26.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:40:26.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:40:26.23
  STEP: Creating a job @ 07/22/25 18:40:26.233
  STEP: Ensuring job reaches completions @ 07/22/25 18:40:26.239
  I0722 18:40:36.273535 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2227" for this suite. @ 07/22/25 18:40:36.278
• [10.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/22/25 18:40:36.286
  I0722 18:40:36.286553 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 18:40:36.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:40:36.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:40:36.299
  STEP: Creating configMap with name configmap-test-upd-d3d7ba52-b1d0-4650-9bbd-5eefe1ad33ca @ 07/22/25 18:40:36.379
  STEP: Creating the pod @ 07/22/25 18:40:36.384
  STEP: Waiting for pod with text data @ 07/22/25 18:40:38.409
  STEP: Waiting for pod with binary data @ 07/22/25 18:40:38.417
  I0722 18:40:38.423307 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8112" for this suite. @ 07/22/25 18:40:38.427
• [2.149 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 07/22/25 18:40:38.435
  I0722 18:40:38.435409 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 18:40:38.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:40:38.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:40:38.454
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/22/25 18:40:38.458
  I0722 18:40:38.458693 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 18:40:39.885238 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 18:40:44.885136 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8659" for this suite. @ 07/22/25 18:40:44.892
• [6.464 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 07/22/25 18:40:44.899
  I0722 18:40:44.899121 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 18:40:44.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:40:44.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:40:44.916
  STEP: Creating pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623 @ 07/22/25 18:40:44.919
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 18:40:46.942
  I0722 18:40:46.945165 21 container_probe.go:1749] Initial restart count of pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca is 0
  I0722 18:40:46.948421 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:40:48.954447 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:40:50.959196 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:40:52.965291 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:40:54.971061 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:40:56.976434 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:40:58.982427 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:00.988877 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:02.995089 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:04.999675 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:07.005430 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:09.011446 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:11.016116 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:13.021424 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:15.026704 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:17.033309 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:19.039338 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:21.043730 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:23.049183 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:25.054324 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:27.059655 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:29.064777 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:31.070217 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:33.075780 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:35.082163 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:37.087207 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:39.093243 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:41.099682 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:43.105523 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:45.111171 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:47.117687 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:49.121849 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:51.127107 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:53.132222 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:55.137203 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:57.143287 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:41:59.148725 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:01.153707 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:03.158590 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:05.163938 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:07.168566 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:09.173865 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:11.179179 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:13.183733 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:15.189530 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:17.194649 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:19.200114 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:21.206069 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:23.210925 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:25.215554 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:27.220737 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:29.226714 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:31.231734 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:33.236287 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:35.241390 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:37.248132 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:39.254349 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:41.259412 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:43.265791 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:45.271535 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:47.276728 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:49.282414 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:51.288451 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:53.293604 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:55.299606 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:57.304348 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:42:59.309815 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:01.314954 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:03.320861 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:05.326719 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:07.332102 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:09.337259 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:11.341928 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:13.347987 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:15.352941 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:17.358951 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:19.364246 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:21.369482 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:23.374756 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:25.380185 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:27.386304 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:29.391361 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:31.395732 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:33.401934 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:35.406982 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:37.413365 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:39.418528 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:41.424314 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:43.429772 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:45.435557 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:47.440625 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:49.446610 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:51.451470 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:53.456495 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:55.461663 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:57.467278 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:43:59.472227 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:01.479738 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:03.485196 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:05.490257 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:07.496032 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:09.502042 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:11.506923 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:13.512896 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:15.519201 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:17.525689 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:19.530022 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:21.534996 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:23.539725 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:25.544280 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:27.549450 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:29.555564 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:31.560663 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:33.564820 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:35.570553 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:37.575378 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:39.581848 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:41.587433 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:43.593307 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  I0722 18:44:45.598849 21 container_probe.go:1759] Get pod test-webserver-04057f66-8b45-4f4f-ba7f-65ddcefd9fca in namespace container-probe-3623
  STEP: deleting the pod @ 07/22/25 18:44:47.599
  I0722 18:44:47.613821 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3623" for this suite. @ 07/22/25 18:44:47.619
• [242.728 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/22/25 18:44:47.626
  I0722 18:44:47.626834 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pv @ 07/22/25 18:44:47.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:44:47.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:44:47.648
  STEP: Creating initial PV and PVC @ 07/22/25 18:44:47.651
  I0722 18:44:47.652033 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1404" @ 07/22/25 18:44:47.666
  STEP: Listing PVCs in namespace "pv-1404" @ 07/22/25 18:44:47.672
  STEP: Patching the PV "pv-1404-l4msd" @ 07/22/25 18:44:47.676
  STEP: Patching the PVC "pvc-8pnhm" @ 07/22/25 18:44:47.685
  STEP: Getting PV "pv-1404-l4msd" @ 07/22/25 18:44:47.691
  STEP: Getting PVC "pvc-8pnhm" @ 07/22/25 18:44:47.698
  STEP: Deleting PVC "pvc-8pnhm" @ 07/22/25 18:44:47.705
  STEP: Confirm deletion of PVC "pvc-8pnhm" @ 07/22/25 18:44:47.715
  STEP: Deleting PV "pv-1404-l4msd" @ 07/22/25 18:44:49.724
  STEP: Confirm deletion of PV "pv-1404-l4msd" @ 07/22/25 18:44:49.731
  STEP: Recreating another PV & PVC @ 07/22/25 18:44:51.74
  I0722 18:44:51.740349 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1404-qrdb2" @ 07/22/25 18:44:51.752
  STEP: Updating the PVC "pvc-x75k8" @ 07/22/25 18:44:51.761
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-x75k8=updated" @ 07/22/25 18:44:51.769
  STEP: Deleting PVC "pvc-x75k8" via DeleteCollection @ 07/22/25 18:44:51.775
  STEP: Confirm deletion of PVC "pvc-x75k8" @ 07/22/25 18:44:51.784
  STEP: Deleting PV "pv-1404-qrdb2" via DeleteCollection @ 07/22/25 18:44:53.793
  STEP: Confirm deletion of PV "pv-1404-qrdb2" @ 07/22/25 18:44:53.805
  I0722 18:44:55.815939 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0722 18:44:55.815967 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-x75k8"
  I0722 18:44:55.819939 21 pv.go:193] Deleting PersistentVolume "pv-1404-qrdb2"
  I0722 18:44:55.823284 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1404" for this suite. @ 07/22/25 18:44:55.827
• [8.206 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/22/25 18:44:55.833
  I0722 18:44:55.833431 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename fake-node @ 07/22/25 18:44:55.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:44:55.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:44:55.85
  STEP: Create "e2e-fake-node-mb49w" @ 07/22/25 18:44:55.853
  STEP: Getting "e2e-fake-node-mb49w" @ 07/22/25 18:44:55.859
  STEP: Patching "e2e-fake-node-mb49w" @ 07/22/25 18:44:55.863
  STEP: Listing nodes with LabelSelector "e2e-fake-node-mb49w=patched" @ 07/22/25 18:44:55.868
  STEP: Updating "e2e-fake-node-mb49w" @ 07/22/25 18:44:55.871
  STEP: Delete "e2e-fake-node-mb49w" @ 07/22/25 18:44:55.88
  STEP: Confirm deletion of "e2e-fake-node-mb49w" @ 07/22/25 18:44:55.887
  I0722 18:44:55.890571 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-7222" for this suite. @ 07/22/25 18:44:55.893
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/22/25 18:44:55.901
  I0722 18:44:55.901171 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 18:44:55.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:44:55.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:44:55.921
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 18:44:55.928
  STEP: Saw pod success @ 07/22/25 18:44:59.963
  I0722 18:44:59.967807 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-4809f686-37b8-4665-97d5-a97fe063c1ff container client-container: <nil>
  STEP: delete the pod @ 07/22/25 18:44:59.978
  I0722 18:44:59.994378 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2132" for this suite. @ 07/22/25 18:44:59.998
• [4.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/22/25 18:45:00.006
  I0722 18:45:00.006153 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 18:45:00.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:45:00.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:45:00.022
  I0722 18:45:00.024898 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 18:45:06.231840 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6531" for this suite. @ 07/22/25 18:45:06.236
• [6.237 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/22/25 18:45:06.243
  I0722 18:45:06.243316 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 18:45:06.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:45:06.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:45:06.259
  I0722 18:45:10.294685 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-580" for this suite. @ 07/22/25 18:45:10.299
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 07/22/25 18:45:10.309
  I0722 18:45:10.309370 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 18:45:10.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:45:10.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:45:10.327
  STEP: creating Agnhost RC @ 07/22/25 18:45:10.331
  I0722 18:45:10.331129 21 kubectl.go:1544] namespace kubectl-5792
  I0722 18:45:10.331218 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5792 create -f -'
  I0722 18:45:10.432310 21 builder.go:146] stderr: ""
  I0722 18:45:10.432347 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/22/25 18:45:10.432
  I0722 18:45:11.437100 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 18:45:11.437142 21 framework.go:733] Found 1 / 1
  I0722 18:45:11.437156 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0722 18:45:11.440575 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 18:45:11.440592 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 18:45:11.440598 21 kubectl.go:1551] wait on agnhost-primary startup in kubectl-5792 
  I0722 18:45:11.440654 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5792 logs agnhost-primary-69gwk agnhost-primary'
  I0722 18:45:11.493814 21 builder.go:146] stderr: ""
  I0722 18:45:11.493855 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/22/25 18:45:11.493
  I0722 18:45:11.493949 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5792 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0722 18:45:11.552620 21 builder.go:146] stderr: ""
  I0722 18:45:11.552674 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0722 18:45:11.559734 21 utils.go:1203] Service rm2 in namespace kubectl-5792 found.
  STEP: exposing service @ 07/22/25 18:45:13.568
  I0722 18:45:13.568472 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5792 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0722 18:45:13.624136 21 builder.go:146] stderr: ""
  I0722 18:45:13.624219 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0722 18:45:13.631575 21 utils.go:1203] Service rm3 in namespace kubectl-5792 found.
  I0722 18:45:15.640003 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5792" for this suite. @ 07/22/25 18:45:15.644
• [5.342 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 07/22/25 18:45:15.651
  I0722 18:45:15.651568 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 18:45:15.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:45:15.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:45:15.68
  STEP: Creating pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787 @ 07/22/25 18:45:15.686
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 18:45:17.719
  I0722 18:45:17.723590 21 container_probe.go:1749] Initial restart count of pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 is 0
  I0722 18:45:17.726561 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:19.732263 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:21.738179 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:23.743534 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:25.749252 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:27.754643 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:29.760508 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:31.765180 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:33.770710 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:35.775265 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:37.781276 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:37.781312 21 container_probe.go:1763] Restart count of pod container-probe-8787/liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 is now 1 (20.057696404s elapsed)
  I0722 18:45:39.786750 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:41.792305 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:43.797575 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:45.803292 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:47.809206 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:49.815438 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:51.820823 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:53.826737 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:55.830792 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:57.835194 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:45:57.835233 21 container_probe.go:1763] Restart count of pod container-probe-8787/liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 is now 2 (40.111617337s elapsed)
  I0722 18:45:59.840522 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:01.846505 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:03.851473 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:05.856319 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:07.861383 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:09.866819 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:11.871100 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:13.875688 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:15.881536 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:17.887263 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:17.887297 21 container_probe.go:1763] Restart count of pod container-probe-8787/liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 is now 3 (1m0.163682087s elapsed)
  I0722 18:46:19.893675 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:21.898875 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:23.904201 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:25.908617 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:27.914039 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:29.920184 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:31.926293 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:33.932158 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:35.937080 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:37.941798 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:37.941831 21 container_probe.go:1763] Restart count of pod container-probe-8787/liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 is now 4 (1m20.2182162s elapsed)
  I0722 18:46:39.948545 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:41.954285 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:43.959169 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:45.963916 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:47.969630 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:49.973994 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:51.980013 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:53.986698 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:55.992694 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:46:57.999086 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:00.004855 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:02.010246 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:04.016323 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:06.022607 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:08.028416 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:10.034691 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:12.040655 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:14.044978 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:16.050753 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:18.055686 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:20.060661 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:22.066537 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:24.071299 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:26.076635 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:28.081150 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:30.087172 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:32.092685 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:34.098771 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:36.103779 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:38.110115 21 container_probe.go:1759] Get pod liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 in namespace container-probe-8787
  I0722 18:47:38.110148 21 container_probe.go:1763] Restart count of pod container-probe-8787/liveness-0d40d7c4-dca5-473e-86a8-aefef89b7579 is now 5 (2m20.3865327s elapsed)
  STEP: deleting the pod @ 07/22/25 18:47:38.11
  I0722 18:47:38.124369 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8787" for this suite. @ 07/22/25 18:47:38.129
• [142.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/22/25 18:47:38.139
  I0722 18:47:38.139511 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 18:47:38.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:38.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:38.159
  STEP: Setting up server cert @ 07/22/25 18:47:38.179
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 18:47:38.311
  STEP: Deploying the webhook pod @ 07/22/25 18:47:38.319
  STEP: Wait for the deployment to be ready @ 07/22/25 18:47:38.331
  I0722 18:47:38.339612 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 18:47:40.354
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 18:47:40.366
  I0722 18:47:41.366520 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/22/25 18:47:41.375
  STEP: create a namespace for the webhook @ 07/22/25 18:47:41.388
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/22/25 18:47:41.399
  I0722 18:47:41.514294 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3064" for this suite. @ 07/22/25 18:47:41.519
  STEP: Destroying namespace "webhook-markers-1582" for this suite. @ 07/22/25 18:47:41.526
  STEP: Destroying namespace "fail-closed-namespace-5192" for this suite. @ 07/22/25 18:47:41.532
• [3.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/22/25 18:47:41.539
  I0722 18:47:41.539749 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 18:47:41.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:41.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:41.556
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 18:47:41.558
  STEP: Saw pod success @ 07/22/25 18:47:43.582
  I0722 18:47:43.586259 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-c15066f9-8e5b-4dc4-9ac8-5d1153b4ea09 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 18:47:43.601
  I0722 18:47:43.616429 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4336" for this suite. @ 07/22/25 18:47:43.621
• [2.091 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/22/25 18:47:43.63
  I0722 18:47:43.630328 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 18:47:43.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:43.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:43.646
  STEP: Read namespace status @ 07/22/25 18:47:43.648
  I0722 18:47:43.652014 21 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/22/25 18:47:43.652
  I0722 18:47:43.657553 21 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/22/25 18:47:43.657
  I0722 18:47:43.666235 21 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0722 18:47:43.666348 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1580" for this suite. @ 07/22/25 18:47:43.722
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/22/25 18:47:43.731
  I0722 18:47:43.731704 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 18:47:43.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:43.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:43.747
  I0722 18:47:43.750619 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0722 18:47:43.755518 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0722 18:47:43.763846 21 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0722 18:47:45.773465 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0722 18:47:45.776447 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0722 18:47:45.785797 21 deployment.go:314] Updating deployment test-recreate-deployment
  I0722 18:47:45.785820 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0722 18:47:45.878621 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-174",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c6629a3-527e-4864-8581-b77dd21dec5e",
      ResourceVersion: (string) (len=4) "5888",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888806863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 18:47:45.883092 21 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-174",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "333ce7c3-b5c6-46aa-bb4c-ade10a8e117b",
      ResourceVersion: (string) (len=4) "5885",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888806865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1c6629a3-527e-4864-8581-b77dd21dec5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 63 36 36 32 39  61 33 2d 35 32 37 65 2d  |\"1c6629a3-527e-|
              00000120  34 38 36 34 2d 38 35 38  31 2d 62 37 37 64 64 32  |4864-8581-b77dd2|
              00000130  31 64 65 63 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1dec5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 18:47:45.883609 21 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0722 18:47:45.883865 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-174",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e110687-2734-41ae-8df8-3728f63e44c9",
      ResourceVersion: (string) (len=4) "5876",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888806863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1c6629a3-527e-4864-8581-b77dd21dec5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 63 36 36 32 39  61 33 2d 35 32 37 65 2d  |\"1c6629a3-527e-|
              00000120  34 38 36 34 2d 38 35 38  31 2d 62 37 37 64 64 32  |4864-8581-b77dd2|
              00000130  31 64 65 63 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1dec5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 18:47:45.888936 21 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-67nmr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-67nmr",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=14) "deployment-174",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19e01b32-d993-4642-9c0f-9ebccfd356cf",
      ResourceVersion: (string) (len=4) "5887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888806865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "333ce7c3-b5c6-46aa-bb4c-ade10a8e117b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  33 63 65 37 63 33 2d 62  |d\":\"333ce7c3-b|
              00000090  35 63 36 2d 34 36 61 61  2d 62 62 34 63 2d 61 64  |5c6-46aa-bb4c-ad|
              000000a0  65 31 30 61 38 65 31 31  37 62 5c 22 7d 22 3a 7b  |e10a8e117b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prwkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prwkg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888806865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888806865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-prwkg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 18:47:45.890013 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-174" for this suite. @ 07/22/25 18:47:45.894
• [2.170 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/22/25 18:47:45.902
  I0722 18:47:45.902180 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename ingressclass @ 07/22/25 18:47:45.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:45.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:45.918
  STEP: getting /apis @ 07/22/25 18:47:45.921
  STEP: getting /apis/networking.k8s.io @ 07/22/25 18:47:45.924
  STEP: getting /apis/networking.k8s.iov1 @ 07/22/25 18:47:45.925
  STEP: creating @ 07/22/25 18:47:45.926
  STEP: getting @ 07/22/25 18:47:45.94
  STEP: listing @ 07/22/25 18:47:45.943
  STEP: watching @ 07/22/25 18:47:45.947
  I0722 18:47:45.947384 21 ingressclass.go:348] starting watch
  STEP: patching @ 07/22/25 18:47:45.948
  STEP: updating @ 07/22/25 18:47:45.953
  I0722 18:47:45.959599 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0722 18:47:45.959625 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/22/25 18:47:45.959
  STEP: deleting a collection @ 07/22/25 18:47:45.972
  I0722 18:47:45.988283 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2452" for this suite. @ 07/22/25 18:47:45.995
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/22/25 18:47:46.003
  I0722 18:47:46.003991 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 18:47:46.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:46.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:46.022
  STEP: Setting up server cert @ 07/22/25 18:47:46.043
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 18:47:46.259
  STEP: Deploying the webhook pod @ 07/22/25 18:47:46.265
  STEP: Wait for the deployment to be ready @ 07/22/25 18:47:46.28
  I0722 18:47:46.295966 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 18:47:48.31
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 18:47:48.325
  I0722 18:47:49.325587 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/22/25 18:47:49.334
  STEP: create a pod that should be denied by the webhook @ 07/22/25 18:47:49.347
  STEP: create a pod that causes the webhook to hang @ 07/22/25 18:47:49.354
  STEP: create a configmap that should be denied by the webhook @ 07/22/25 18:47:59.361
  STEP: create a configmap that should be admitted by the webhook @ 07/22/25 18:47:59.369
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/22/25 18:47:59.377
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/22/25 18:47:59.386
  STEP: create a namespace that bypass the webhook @ 07/22/25 18:47:59.391
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/22/25 18:47:59.405
  I0722 18:47:59.462962 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9991" for this suite. @ 07/22/25 18:47:59.468
  STEP: Destroying namespace "webhook-markers-3301" for this suite. @ 07/22/25 18:47:59.475
  STEP: Destroying namespace "exempted-namespace-2271" for this suite. @ 07/22/25 18:47:59.481
• [13.484 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/22/25 18:47:59.487
  I0722 18:47:59.487971 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 18:47:59.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:47:59.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:47:59.502
  STEP: referencing a single matching pod @ 07/22/25 18:48:01.575
  STEP: referencing matching pods with named port @ 07/22/25 18:48:01.583
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/22/25 18:48:01.589
  STEP: recreating EndpointSlices after they've been deleted @ 07/22/25 18:48:01.595
  I0722 18:48:01.614912 21 endpointslice.go:938] EndpointSlice for Service endpointslice-4479/example-named-port not found
  I0722 18:48:03.624405 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4479" for this suite. @ 07/22/25 18:48:03.629
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/22/25 18:48:03.635
  I0722 18:48:03.635781 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 18:48:03.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:03.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:03.648
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 18:48:03.651
  STEP: Saw pod success @ 07/22/25 18:48:07.676
  I0722 18:48:07.680282 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-84f60459-a6de-41a4-98c6-ce846e88365b container client-container: <nil>
  STEP: delete the pod @ 07/22/25 18:48:07.687
  I0722 18:48:07.705012 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1497" for this suite. @ 07/22/25 18:48:07.709
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 07/22/25 18:48:07.716
  I0722 18:48:07.716918 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 18:48:07.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:07.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:07.733
  I0722 18:48:07.736499 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/22/25 18:48:09.079
  I0722 18:48:09.079232 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 create -f -'
  I0722 18:48:09.171277 21 builder.go:146] stderr: ""
  I0722 18:48:09.171324 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7031-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0722 18:48:09.171365 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 delete e2e-test-crd-publish-openapi-7031-crds test-foo'
  I0722 18:48:09.273152 21 builder.go:146] stderr: ""
  I0722 18:48:09.273198 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7031-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0722 18:48:09.273241 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 apply -f -'
  I0722 18:48:09.347788 21 builder.go:146] stderr: ""
  I0722 18:48:09.347830 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7031-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0722 18:48:09.347873 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 delete e2e-test-crd-publish-openapi-7031-crds test-foo'
  I0722 18:48:09.399974 21 builder.go:146] stderr: ""
  I0722 18:48:09.400010 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7031-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/22/25 18:48:09.4
  I0722 18:48:09.400153 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 create -f -'
  I0722 18:48:09.446431 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/22/25 18:48:09.446
  I0722 18:48:09.446646 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 create -f -'
  I0722 18:48:09.488295 21 builder.go:135] rc: 1
  I0722 18:48:09.488391 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 apply -f -'
  I0722 18:48:09.539946 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/22/25 18:48:09.54
  I0722 18:48:09.540081 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 create -f -'
  I0722 18:48:09.583143 21 builder.go:135] rc: 1
  I0722 18:48:09.583217 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 --namespace=crd-publish-openapi-6629 apply -f -'
  I0722 18:48:09.633959 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/22/25 18:48:09.634
  I0722 18:48:09.634088 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 explain e2e-test-crd-publish-openapi-7031-crds'
  I0722 18:48:09.675563 21 builder.go:146] stderr: ""
  I0722 18:48:09.675620 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7031-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/22/25 18:48:09.675
  I0722 18:48:09.675895 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 explain e2e-test-crd-publish-openapi-7031-crds.metadata'
  I0722 18:48:09.718890 21 builder.go:146] stderr: ""
  I0722 18:48:09.719081 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7031-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0722 18:48:09.719341 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 explain e2e-test-crd-publish-openapi-7031-crds.spec'
  I0722 18:48:09.761894 21 builder.go:146] stderr: ""
  I0722 18:48:09.761931 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7031-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0722 18:48:09.762067 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 explain e2e-test-crd-publish-openapi-7031-crds.spec.bars'
  I0722 18:48:09.804540 21 builder.go:146] stderr: ""
  I0722 18:48:09.804603 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7031-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/22/25 18:48:09.804
  I0722 18:48:09.804772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6629 explain e2e-test-crd-publish-openapi-7031-crds.spec.bars2'
  I0722 18:48:09.846170 21 builder.go:135] rc: 1
  I0722 18:48:11.065032 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6629" for this suite. @ 07/22/25 18:48:11.074
• [3.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/22/25 18:48:11.081
  I0722 18:48:11.081960 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 18:48:11.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:11.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:11.098
  STEP: Updating Namespace "namespaces-1617" @ 07/22/25 18:48:11.101
  I0722 18:48:11.110090 21 namespace.go:390] Namespace "namespaces-1617" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"fefde6c2-c539-4f8e-a452-a58c2541b59c", "kubernetes.io/metadata.name":"namespaces-1617", "namespaces-1617":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0722 18:48:11.110169 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1617" for this suite. @ 07/22/25 18:48:11.174
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/22/25 18:48:11.182
  I0722 18:48:11.182481 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 18:48:11.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:11.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:11.251
  STEP: Creating a pod to test downward api env vars @ 07/22/25 18:48:11.254
  STEP: Saw pod success @ 07/22/25 18:48:15.277
  I0722 18:48:15.281707 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downward-api-8acdcb1b-5a1e-44de-90e0-5e464ccdbef3 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 18:48:15.288
  I0722 18:48:15.305715 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6510" for this suite. @ 07/22/25 18:48:15.31
• [4.137 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 07/22/25 18:48:15.319
  I0722 18:48:15.319230 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 18:48:15.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:15.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:15.335
  STEP: creating service nodeport-test with type=NodePort in namespace services-3912 @ 07/22/25 18:48:15.338
  STEP: creating replication controller nodeport-test in namespace services-3912 @ 07/22/25 18:48:15.351
  I0722 18:48:15.359466      21 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3912, replica count: 2
  I0722 18:48:18.411704      21 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 18:48:18.411754 21 resource.go:361] Creating new exec pod
  I0722 18:48:21.433279 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-3912 exec execpodncgmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0722 18:48:21.524868 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.248) 80 port [tcp/http] succeeded!\n"
  I0722 18:48:21.524907 21 builder.go:147] stdout: "nodeport-test-l6sp4"
  I0722 18:48:21.524994 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-3912 exec execpodncgmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.248 80'
  I0722 18:48:21.610188 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.248 80\nConnection to 10.152.183.248 80 port [tcp/http] succeeded!\n"
  I0722 18:48:21.610226 21 builder.go:147] stdout: "nodeport-test-l6sp4"
  I0722 18:48:21.610299 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-3912 exec execpodncgmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.234 32338'
  I0722 18:48:21.684254 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.7.234 32338\nConnection to 172.31.7.234 32338 port [tcp/*] succeeded!\n"
  I0722 18:48:21.684300 21 builder.go:147] stdout: "nodeport-test-l6sp4"
  I0722 18:48:21.684369 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-3912 exec execpodncgmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.73 32338'
  I0722 18:48:21.762102 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.73 32338\nConnection to 172.31.68.73 32338 port [tcp/*] succeeded!\n"
  I0722 18:48:21.762139 21 builder.go:147] stdout: "nodeport-test-mkdgp"
  I0722 18:48:21.762317 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3912" for this suite. @ 07/22/25 18:48:21.767
• [6.458 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/22/25 18:48:21.777
  I0722 18:48:21.777219 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 18:48:21.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:21.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:21.796
  I0722 18:48:21.799909 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 18:48:24.850117 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4903" for this suite. @ 07/22/25 18:48:24.855
• [3.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/22/25 18:48:24.863
  I0722 18:48:24.863680 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 18:48:24.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:24.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:24.883
  I0722 18:48:24.972358 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0722 18:48:24.979435 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0722 18:48:25.056821 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:25.056864 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:25.060192 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:48:25.060217 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 18:48:25.986352 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:25.986384 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:25.991234 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:48:25.991265 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 18:48:26.984614 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:26.984675 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:26.988159 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:48:26.988189 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 18:48:27.984303 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:27.984405 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:27.988966 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:48:27.989019 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 18:48:28.985491 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:28.985535 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:28.988962 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 18:48:28.988982 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0722 18:48:28.988996 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0722 18:48:28.999760 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0722 18:48:31.013247 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0722 18:48:31.024095 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0722 18:48:31.024128 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0722 18:48:31.114883 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:31.114914 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:32.034849 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:32.034886 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:33.030284 21 daemon_set.go:1198] Pod daemon-set-rrx44 is not available
  I0722 18:48:33.035077 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:48:33.035104 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 18:48:33.041
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3239, will wait for the garbage collector to delete the pods @ 07/22/25 18:48:33.041
  I0722 18:48:33.103254 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.209593ms
  I0722 18:48:33.204353 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.091811ms
  I0722 18:48:34.509667 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:48:34.509704 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 18:48:34.515441 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6620"},"items":null}

  I0722 18:48:34.519373 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6620"},"items":null}

  I0722 18:48:34.534745 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3239" for this suite. @ 07/22/25 18:48:34.538
• [9.682 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 07/22/25 18:48:34.545
  I0722 18:48:34.545349 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 18:48:34.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:34.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:34.564
  STEP: Creating a test externalName service @ 07/22/25 18:48:34.566
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7603.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-7603.svc.cluster.local; sleep 1; done
   @ 07/22/25 18:48:34.572
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7603.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7603.svc.cluster.local; sleep 1; done
   @ 07/22/25 18:48:34.572
  STEP: creating a pod to probe DNS @ 07/22/25 18:48:34.572
  STEP: submitting the pod to kubernetes @ 07/22/25 18:48:34.572
  STEP: retrieving the pod @ 07/22/25 18:48:40.606
  STEP: looking for the results for each expected name from probers @ 07/22/25 18:48:40.61
  I0722 18:48:40.619785 21 dns_common.go:571] DNS probes using dns-test-294f73d2-3a8d-4ab6-911e-582bc1089f25 succeeded

  STEP: changing the externalName to bar.example.com @ 07/22/25 18:48:40.619
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7603.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-7603.svc.cluster.local; sleep 1; done
   @ 07/22/25 18:48:40.628
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7603.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7603.svc.cluster.local; sleep 1; done
   @ 07/22/25 18:48:40.628
  STEP: creating a second pod to probe DNS @ 07/22/25 18:48:40.628
  STEP: submitting the pod to kubernetes @ 07/22/25 18:48:40.628
  STEP: retrieving the pod @ 07/22/25 18:48:46.658
  STEP: looking for the results for each expected name from probers @ 07/22/25 18:48:46.662
  I0722 18:48:46.672572 21 dns_common.go:571] DNS probes using dns-test-ac78b26a-1e7b-4725-942b-8f6720204e9b succeeded

  STEP: changing the service to type=ClusterIP @ 07/22/25 18:48:46.672
  W0722 18:48:46.687784      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7603.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-7603.svc.cluster.local; sleep 1; done
   @ 07/22/25 18:48:46.687
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7603.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7603.svc.cluster.local; sleep 1; done
   @ 07/22/25 18:48:46.687
  STEP: creating a third pod to probe DNS @ 07/22/25 18:48:46.687
  STEP: submitting the pod to kubernetes @ 07/22/25 18:48:46.691
  STEP: retrieving the pod @ 07/22/25 18:48:48.712
  STEP: looking for the results for each expected name from probers @ 07/22/25 18:48:48.716
  I0722 18:48:48.728568 21 dns_common.go:571] DNS probes using dns-test-506ee517-fbdb-4d5c-8b69-aab8a231ad19 succeeded

  STEP: deleting the pod @ 07/22/25 18:48:48.728
  STEP: deleting the pod @ 07/22/25 18:48:48.753
  STEP: deleting the pod @ 07/22/25 18:48:48.766
  STEP: deleting the test externalName service @ 07/22/25 18:48:48.792
  I0722 18:48:48.813681 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7603" for this suite. @ 07/22/25 18:48:48.819
• [14.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 07/22/25 18:48:48.825
  I0722 18:48:48.825615 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 18:48:48.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:48.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:48.84
  I0722 18:48:48.844008 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 18:48:48.923096 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0722 18:48:48.927763 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-31-147 before test
  I0722 18:48:48.932368 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-ddw9g from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:21 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.932390 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 18:48:48.932397 21 predicates.go:957] calico-node-9tfhx from kube-system started at 2025-07-22 18:36:14 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.932403 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 18:48:48.932410 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-07-22 18:39:33 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.932415 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 18:48:48.932421 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-8ghhb from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 18:48:48.932427 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 18:48:48.932432 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 18:48:48.932497 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-73 before test
  I0722 18:48:48.936496 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-sz9hn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.936518 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 18:48:48.936527 21 predicates.go:957] calico-node-q2c6n from kube-system started at 2025-07-22 18:35:46 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.936533 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 18:48:48.936540 21 predicates.go:957] coredns-5d946bb58-zcb2f from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.936557 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0722 18:48:48.936564 21 predicates.go:957] kube-state-metrics-b84f44f45-l28nc from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.936571 21 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0722 18:48:48.936577 21 predicates.go:957] metrics-server-v0.7.2-7d878b47f8-gh9ww from kube-system started at 2025-07-22 18:32:29 +0000 UTC (2 container statuses recorded)
  I0722 18:48:48.936583 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0722 18:48:48.936588 21 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0722 18:48:48.936594 21 predicates.go:957] dashboard-metrics-scraper-5cf87bc988-t8js5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.936601 21 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0722 18:48:48.936607 21 predicates.go:957] kubernetes-dashboard-6858576c98-ckql5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.936613 21 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0722 18:48:48.936620 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-kdz76 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 18:48:48.936626 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 18:48:48.936632 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 18:48:48.936638 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-7-234 before test
  I0722 18:48:48.940258 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qgccn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:55 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.940275 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 18:48:48.940282 21 predicates.go:957] calico-node-hp9wd from kube-system started at 2025-07-22 18:35:32 +0000 UTC (1 container statuses recorded)
  I0722 18:48:48.940288 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 18:48:48.940295 21 predicates.go:957] sonobuoy-e2e-job-5e6356138b464fd4 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 18:48:48.940347 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0722 18:48:48.940357 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 18:48:48.940364 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-fprks from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 18:48:48.940370 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 18:48:48.940375 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/22/25 18:48:48.94
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1854a752c944ad58], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/22/25 18:48:48.964
  I0722 18:48:49.965824 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8243" for this suite. @ 07/22/25 18:48:49.97
• [1.152 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/22/25 18:48:49.977
  I0722 18:48:49.977687 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl-logs @ 07/22/25 18:48:49.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:49.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:49.994
  STEP: creating a pod @ 07/22/25 18:48:49.996
  I0722 18:48:49.997022 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0722 18:48:50.049078 21 builder.go:146] stderr: ""
  I0722 18:48:50.049100 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/22/25 18:48:50.049
  I0722 18:48:50.049205 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0722 18:48:52.059836 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/22/25 18:48:52.059
  I0722 18:48:52.059933 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 logs logs-generator logs-generator'
  I0722 18:48:52.114196 21 builder.go:146] stderr: ""
  I0722 18:48:52.114239 21 builder.go:147] stdout: "I0722 18:48:50.573721       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/6vtm 432\nI0722 18:48:50.773984       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/2z2 443\nI0722 18:48:50.974412       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/czmf 534\nI0722 18:48:51.173806       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/894 500\nI0722 18:48:51.374044       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/v25 378\nI0722 18:48:51.574345       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/d5xq 578\nI0722 18:48:51.774644       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/wmc2 483\nI0722 18:48:51.973879       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/rxl 430\n"
  STEP: limiting log lines @ 07/22/25 18:48:52.114
  I0722 18:48:52.114307 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 logs logs-generator logs-generator --tail=1'
  I0722 18:48:52.166861 21 builder.go:146] stderr: ""
  I0722 18:48:52.166895 21 builder.go:147] stdout: "I0722 18:48:51.973879       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/rxl 430\n"
  I0722 18:48:52.166904 21 logs.go:180] got output "I0722 18:48:51.973879       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/rxl 430\n"
  STEP: limiting log bytes @ 07/22/25 18:48:52.166
  I0722 18:48:52.167029 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 logs logs-generator logs-generator --limit-bytes=1'
  I0722 18:48:52.217097 21 builder.go:146] stderr: ""
  I0722 18:48:52.217127 21 builder.go:147] stdout: "I"
  I0722 18:48:52.217135 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/22/25 18:48:52.217
  I0722 18:48:52.217286 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 logs logs-generator logs-generator --tail=1 --timestamps'
  I0722 18:48:52.268781 21 builder.go:146] stderr: ""
  I0722 18:48:52.268813 21 builder.go:147] stdout: "2025-07-22T18:48:52.174100874Z I0722 18:48:52.174032       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/x5pm 232\n"
  I0722 18:48:52.268823 21 logs.go:192] got output "2025-07-22T18:48:52.174100874Z I0722 18:48:52.174032       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/x5pm 232\n"
  STEP: restricting to a time range @ 07/22/25 18:48:52.268
  I0722 18:48:54.770145 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 logs logs-generator logs-generator --since=1s'
  I0722 18:48:54.823771 21 builder.go:146] stderr: ""
  I0722 18:48:54.823812 21 builder.go:147] stdout: "I0722 18:48:53.974326       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/smm9 425\nI0722 18:48:54.174636       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/6mt 332\nI0722 18:48:54.373849       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/qbck 583\nI0722 18:48:54.574030       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/c5j 578\nI0722 18:48:54.774324       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/7gb 231\n"
  I0722 18:48:54.823863 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 logs logs-generator logs-generator --since=24h'
  I0722 18:48:54.877171 21 builder.go:146] stderr: ""
  I0722 18:48:54.877231 21 builder.go:147] stdout: "I0722 18:48:50.573721       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/6vtm 432\nI0722 18:48:50.773984       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/2z2 443\nI0722 18:48:50.974412       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/czmf 534\nI0722 18:48:51.173806       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/894 500\nI0722 18:48:51.374044       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/v25 378\nI0722 18:48:51.574345       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/d5xq 578\nI0722 18:48:51.774644       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/wmc2 483\nI0722 18:48:51.973879       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/rxl 430\nI0722 18:48:52.174032       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/x5pm 232\nI0722 18:48:52.374349       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/gnw 276\nI0722 18:48:52.574623       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/q5mx 260\nI0722 18:48:52.773859       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/wdb 574\nI0722 18:48:52.974032       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/lkzd 541\nI0722 18:48:53.174326       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/mqlh 572\nI0722 18:48:53.374614       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/6kh 589\nI0722 18:48:53.573843       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/skt 207\nI0722 18:48:53.774045       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/pvm 578\nI0722 18:48:53.974326       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/smm9 425\nI0722 18:48:54.174636       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/6mt 332\nI0722 18:48:54.373849       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/qbck 583\nI0722 18:48:54.574030       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/c5j 578\nI0722 18:48:54.774324       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/7gb 231\n"
  I0722 18:48:54.877338 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-logs-455 delete pod logs-generator'
  I0722 18:48:55.443946 21 builder.go:146] stderr: ""
  I0722 18:48:55.443984 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0722 18:48:55.444115 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-455" for this suite. @ 07/22/25 18:48:55.449
• [5.480 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/22/25 18:48:55.457
  I0722 18:48:55.457487 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 18:48:55.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:55.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:55.476
  STEP: Creating a pod to test substitution in container's args @ 07/22/25 18:48:55.479
  STEP: Saw pod success @ 07/22/25 18:48:59.503
  I0722 18:48:59.506738 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod var-expansion-f981a9fb-49cb-44e4-b359-ff926e537c85 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 18:48:59.514
  I0722 18:48:59.534582 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3302" for this suite. @ 07/22/25 18:48:59.538
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/22/25 18:48:59.545
  I0722 18:48:59.545702 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-webhook @ 07/22/25 18:48:59.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:48:59.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:48:59.565
  STEP: Setting up server cert @ 07/22/25 18:48:59.568
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/22/25 18:48:59.767
  STEP: Deploying the custom resource conversion webhook pod @ 07/22/25 18:48:59.773
  STEP: Wait for the deployment to be ready @ 07/22/25 18:48:59.789
  I0722 18:48:59.798358 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 18:49:01.812
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 18:49:01.823
  I0722 18:49:02.823464 21 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0722 18:49:02.832237 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Creating a v1 custom resource @ 07/22/25 18:49:05.384
  STEP: Create a v2 custom resource @ 07/22/25 18:49:05.402
  STEP: List CRs in v1 @ 07/22/25 18:49:05.427
  STEP: List CRs in v2 @ 07/22/25 18:49:05.431
  I0722 18:49:05.992227 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-798" for this suite. @ 07/22/25 18:49:05.996
• [6.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/22/25 18:49:06.007
  I0722 18:49:06.007395 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename disruption @ 07/22/25 18:49:06.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:49:06.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:49:06.024
  STEP: Waiting for the pdb to be processed @ 07/22/25 18:49:06.031
  STEP: Updating PodDisruptionBudget status @ 07/22/25 18:49:08.036
  STEP: Waiting for all pods to be running @ 07/22/25 18:49:08.045
  I0722 18:49:08.050365 21 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 07/22/25 18:49:10.051
  STEP: Waiting for the pdb to be processed @ 07/22/25 18:49:10.065
  STEP: Patching PodDisruptionBudget status @ 07/22/25 18:49:10.072
  STEP: Waiting for the pdb to be processed @ 07/22/25 18:49:10.081
  I0722 18:49:10.087262 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8150" for this suite. @ 07/22/25 18:49:10.09
• [4.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/22/25 18:49:10.098
  I0722 18:49:10.098316 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 18:49:10.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:49:10.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:49:10.115
  I0722 18:49:10.140296 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5314" for this suite. @ 07/22/25 18:49:10.192
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/22/25 18:49:10.201
  I0722 18:49:10.201487 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 18:49:10.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:49:10.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:49:10.217
  STEP: Creating a ForbidConcurrent cronjob @ 07/22/25 18:49:10.22
  STEP: Ensuring a job is scheduled @ 07/22/25 18:49:10.225
  STEP: Ensuring exactly one is scheduled @ 07/22/25 18:50:00.23
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/22/25 18:50:00.234
  STEP: Ensuring no more jobs are scheduled @ 07/22/25 18:50:00.238
  STEP: Removing cronjob @ 07/22/25 18:50:00.243
  I0722 18:50:00.249960 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9991" for this suite. @ 07/22/25 18:50:00.254
• [50.063 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/22/25 18:50:00.265
  I0722 18:50:00.265597 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 18:50:00.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:50:00.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:50:00.286
  STEP: Creating secret with name s-test-opt-del-5652f691-79bf-49e5-81d4-3d9dad7220c5 @ 07/22/25 18:50:00.355
  STEP: Creating secret with name s-test-opt-upd-e4b26c20-1dfc-406d-89dc-9934fdd34b0f @ 07/22/25 18:50:00.363
  STEP: Creating the pod @ 07/22/25 18:50:00.367
  STEP: Deleting secret s-test-opt-del-5652f691-79bf-49e5-81d4-3d9dad7220c5 @ 07/22/25 18:50:02.418
  STEP: Updating secret s-test-opt-upd-e4b26c20-1dfc-406d-89dc-9934fdd34b0f @ 07/22/25 18:50:02.426
  STEP: Creating secret with name s-test-opt-create-80a15206-18a7-4ed0-9e9c-1c7d7e01b086 @ 07/22/25 18:50:02.43
  STEP: waiting to observe update in volume @ 07/22/25 18:50:02.435
  I0722 18:51:14.775411 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1568" for this suite. @ 07/22/25 18:51:14.779
• [74.521 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/22/25 18:51:14.786
  I0722 18:51:14.786316 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 18:51:14.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:51:14.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:51:14.803
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/22/25 18:51:14.807
  STEP: When a replicaset with a matching selector is created @ 07/22/25 18:51:16.835
  STEP: Then the orphan pod is adopted @ 07/22/25 18:51:16.843
  STEP: When the matched label of one of its pods change @ 07/22/25 18:51:17.852
  I0722 18:51:17.856796 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/22/25 18:51:17.871
  I0722 18:51:18.880677 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7359" for this suite. @ 07/22/25 18:51:18.885
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/22/25 18:51:18.892
  I0722 18:51:18.892304 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 18:51:18.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:51:18.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:51:18.913
  STEP: Creating a pod to test downward api env vars @ 07/22/25 18:51:18.917
  STEP: Saw pod success @ 07/22/25 18:51:20.936
  I0722 18:51:20.940681 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downward-api-016407b5-91a9-4516-a1b5-b182e950c406 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 18:51:20.947
  I0722 18:51:20.963136 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5239" for this suite. @ 07/22/25 18:51:20.967
• [2.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 07/22/25 18:51:20.975
  I0722 18:51:20.975294 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 18:51:20.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:51:20.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:51:20.991
  STEP: Creating service test in namespace statefulset-2046 @ 07/22/25 18:51:20.994
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/22/25 18:51:21
  STEP: Creating stateful set ss in namespace statefulset-2046 @ 07/22/25 18:51:21.007
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2046 @ 07/22/25 18:51:21.012
  I0722 18:51:21.032162 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0722 18:51:31.019512 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/22/25 18:51:31.019
  I0722 18:51:31.023074 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 18:51:31.109722 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 18:51:31.109763 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 18:51:31.109774 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 18:51:31.113806 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0722 18:51:41.116147 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 18:51:41.116185 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0722 18:51:41.216653 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999806s
  I0722 18:51:42.222350 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.914787642s
  I0722 18:51:43.229603 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.908363151s
  I0722 18:51:44.234923 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.901375446s
  I0722 18:51:45.240784 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.896088569s
  I0722 18:51:46.247857 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.890043491s
  I0722 18:51:47.253340 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.883055154s
  I0722 18:51:48.259352 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.878054846s
  I0722 18:51:49.265638 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.871335515s
  I0722 18:51:50.271437 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 865.060368ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2046 @ 07/22/25 18:51:51.272
  I0722 18:51:51.278851 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 18:51:51.355114 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 18:51:51.355152 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 18:51:51.355161 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 18:51:51.359679 21 wait.go:40] Found 1 stateful pods, waiting for 3
  I0722 18:52:01.363022 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 18:52:01.363080 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 18:52:01.363092 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/22/25 18:52:01.363
  STEP: Scale down will halt with unhealthy stateful pod @ 07/22/25 18:52:01.363
  I0722 18:52:01.373781 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 18:52:01.455649 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 18:52:01.455683 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 18:52:01.455693 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 18:52:01.455736 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 18:52:01.552746 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 18:52:01.552801 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 18:52:01.552810 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 18:52:01.552850 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 18:52:01.644913 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 18:52:01.644952 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 18:52:01.644961 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 18:52:01.644970 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0722 18:52:01.648435 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0722 18:52:11.654976 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 18:52:11.655008 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0722 18:52:11.655015 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0722 18:52:11.755922 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999624s
  I0722 18:52:12.761314 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.909668643s
  I0722 18:52:13.766038 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.904147085s
  I0722 18:52:14.771942 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.899543523s
  I0722 18:52:15.777357 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.893180077s
  I0722 18:52:16.784342 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.887405083s
  I0722 18:52:17.790269 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.88120423s
  I0722 18:52:18.795422 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.875269938s
  I0722 18:52:19.801438 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.870167281s
  I0722 18:52:20.808319 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 863.241279ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2046 @ 07/22/25 18:52:21.809
  I0722 18:52:21.817413 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 18:52:21.899331 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 18:52:21.899371 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 18:52:21.899381 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 18:52:21.899427 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 18:52:21.975823 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 18:52:21.975870 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 18:52:21.975881 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 18:52:21.975923 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-2046 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 18:52:22.047096 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 18:52:22.047137 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 18:52:22.047147 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 18:52:22.047157 21 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/22/25 18:52:32.061
  I0722 18:52:32.061525 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2046
  I0722 18:52:32.069659 21 rest.go:152] Scaling statefulset ss to 0
  I0722 18:52:32.081760 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 18:52:32.086253 21 rest.go:90] Deleting statefulset ss
  I0722 18:52:32.112824 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2046" for this suite. @ 07/22/25 18:52:32.118
• [71.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 07/22/25 18:52:32.127
  I0722 18:52:32.127732 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 18:52:32.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:32.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:32.149
  STEP: Creating a test headless service @ 07/22/25 18:52:32.152
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-6511.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-6511.svc.cluster.local;sleep 1; done
   @ 07/22/25 18:52:32.156
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6511.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6511.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6511.svc.cluster.local;sleep 1; done
   @ 07/22/25 18:52:32.156
  STEP: creating a pod to probe DNS @ 07/22/25 18:52:32.156
  STEP: submitting the pod to kubernetes @ 07/22/25 18:52:32.156
  STEP: retrieving the pod @ 07/22/25 18:52:34.18
  STEP: looking for the results for each expected name from probers @ 07/22/25 18:52:34.184
  I0722 18:52:34.190133 21 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.194708 21 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.198704 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.203189 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.207532 21 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.211379 21 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.215647 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.220071 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-6511.svc.cluster.local from pod dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc: the server could not find the requested resource (get pods dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc)
  I0722 18:52:34.220096 21 dns_common.go:506] Lookups using dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local agnhost_udp@dns-test-service-2.dns-6511.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-6511.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6511.svc.cluster.local jessie_udp@dns-test-service-2.dns-6511.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6511.svc.cluster.local]

  I0722 18:52:34.225811 21 dns_common.go:514] Pod client logs for webserver: 
  I0722 18:52:34.231710 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 18:52:34.238058 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0722 18:52:39.221980 21 dns_common.go:546] DNS probes using dns-6511/dns-test-e21f24c6-e5c8-4f63-9330-c3d9dd64afcc succeeded

  STEP: deleting the pod @ 07/22/25 18:52:39.222
  STEP: deleting the test headless service @ 07/22/25 18:52:39.243
  I0722 18:52:39.257849 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6511" for this suite. @ 07/22/25 18:52:39.262
• [7.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/22/25 18:52:39.268
  I0722 18:52:39.268612 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 18:52:39.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:39.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:39.285
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/22/25 18:52:39.288
  STEP: When a replication controller with a matching selector is created @ 07/22/25 18:52:41.31
  STEP: Then the orphan pod is adopted @ 07/22/25 18:52:41.318
  I0722 18:52:42.328780 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-749" for this suite. @ 07/22/25 18:52:42.333
• [3.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 07/22/25 18:52:42.341
  I0722 18:52:42.341381 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 18:52:42.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:42.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:42.359
  STEP: creating service in namespace services-437 @ 07/22/25 18:52:42.362
  STEP: creating service affinity-clusterip in namespace services-437 @ 07/22/25 18:52:42.362
  STEP: creating replication controller affinity-clusterip in namespace services-437 @ 07/22/25 18:52:42.377
  I0722 18:52:42.386027      21 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-437, replica count: 3
  I0722 18:52:45.437176      21 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 18:52:45.445314 21 resource.go:361] Creating new exec pod
  I0722 18:52:48.464343 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-437 exec execpod-affinityqjc7n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0722 18:52:48.548411 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.198) 80 port [tcp/http] succeeded!\n"
  I0722 18:52:48.548453 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 18:52:48.548531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-437 exec execpod-affinityqjc7n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.198 80'
  I0722 18:52:48.625970 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.198 80\nConnection to 10.152.183.198 80 port [tcp/http] succeeded!\n"
  I0722 18:52:48.626039 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 18:52:48.626119 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-437 exec execpod-affinityqjc7n -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.198:80/ ; done'
  I0722 18:52:48.757476 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.198:80/\n"
  I0722 18:52:48.757552 21 builder.go:147] stdout: "\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k\naffinity-clusterip-6p27k"
  I0722 18:52:48.757564 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757574 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757581 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757587 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757593 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757597 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757603 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757608 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757616 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757622 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757627 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757659 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757665 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757671 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757682 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757687 21 service.go:242] Received response from host: affinity-clusterip-6p27k
  I0722 18:52:48.757767 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-437, will wait for the garbage collector to delete the pods @ 07/22/25 18:52:48.772
  I0722 18:52:48.834409 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 7.432289ms
  I0722 18:52:48.934801 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.387606ms
  I0722 18:52:51.956259 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-437" for this suite. @ 07/22/25 18:52:51.959
• [9.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 07/22/25 18:52:51.968
  I0722 18:52:51.968629 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 18:52:51.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:51.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:51.986
  STEP: starting the proxy server @ 07/22/25 18:52:51.989
  I0722 18:52:51.989822 21 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4505 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/22/25 18:52:52.021
  I0722 18:52:52.027091 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0722 18:52:52.028104 21 kubectl.go:2236] kubectl proxy stderr: W0722 18:52:52.020871     246 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0722 18:52:52.028088 21 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:39021

  STEP: Destroying namespace "kubectl-4505" for this suite. @ 07/22/25 18:52:52.061
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 07/22/25 18:52:52.07
  I0722 18:52:52.070962 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 18:52:52.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:52.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:52.096
  STEP: Creating a job @ 07/22/25 18:52:52.1
  STEP: Ensuring active pods == parallelism @ 07/22/25 18:52:52.11
  STEP: Orphaning one of the Job's Pods @ 07/22/25 18:52:54.122
  I0722 18:52:54.639760 21 pod_client.go:173] Successfully updated pod "adopt-release-8pzzq"
  STEP: Checking that the Job readopts the Pod @ 07/22/25 18:52:54.639
  STEP: Removing the labels from the Job's Pod @ 07/22/25 18:52:56.654
  I0722 18:52:57.176891 21 pod_client.go:173] Successfully updated pod "adopt-release-8pzzq"
  STEP: Checking that the Job releases the Pod @ 07/22/25 18:52:57.176
  I0722 18:52:59.189770 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8497" for this suite. @ 07/22/25 18:52:59.194
• [7.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 07/22/25 18:52:59.201
  I0722 18:52:59.201424 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 18:52:59.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:59.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:59.216
  STEP: creating an Endpoint @ 07/22/25 18:52:59.224
  STEP: waiting for available Endpoint @ 07/22/25 18:52:59.23
  STEP: listing all Endpoints @ 07/22/25 18:52:59.231
  STEP: updating the Endpoint @ 07/22/25 18:52:59.234
  STEP: fetching the Endpoint @ 07/22/25 18:52:59.242
  STEP: patching the Endpoint @ 07/22/25 18:52:59.246
  STEP: fetching the Endpoint @ 07/22/25 18:52:59.253
  STEP: deleting the Endpoint by Collection @ 07/22/25 18:52:59.257
  STEP: waiting for Endpoint deletion @ 07/22/25 18:52:59.265
  STEP: fetching the Endpoint @ 07/22/25 18:52:59.266
  I0722 18:52:59.268997 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8458" for this suite. @ 07/22/25 18:52:59.295
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/22/25 18:52:59.302
  I0722 18:52:59.302678 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 18:52:59.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:52:59.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:52:59.319
  STEP: creating a Deployment @ 07/22/25 18:52:59.428
  I0722 18:52:59.428360 21 deployment.go:507] Creating simple deployment test-deployment-rfsc2
  I0722 18:52:59.442456 21 deployment.go:223] deployment "test-deployment-rfsc2" doesn't have the required revision set
  STEP: Getting /status @ 07/22/25 18:53:01.46
  I0722 18:53:01.464667 21 deployment.go:532] Deployment test-deployment-rfsc2 has Conditions: [{Available True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:53:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rfsc2-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/22/25 18:53:01.464
  I0722 18:53:01.476440 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 18, 53, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 18, 53, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 18, 53, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 18, 52, 59, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-rfsc2-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/22/25 18:53:01.476
  I0722 18:53:01.478403 21 deployment.go:579] Observed &Deployment event: ADDED
  I0722 18:53:01.478427 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rfsc2-6fb4c74686"}
  I0722 18:53:01.478540 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0722 18:53:01.478556 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rfsc2-6fb4c74686"}
  I0722 18:53:01.478684 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 18:53:01.478821 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0722 18:53:01.478837 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 18:53:01.478896 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-rfsc2-6fb4c74686" is progressing.}
  I0722 18:53:01.479018 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0722 18:53:01.479032 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:53:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 18:53:01.479040 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rfsc2-6fb4c74686" has successfully progressed.}
  I0722 18:53:01.479173 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0722 18:53:01.479193 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:53:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 18:53:01.479232 21 deployment.go:575] Observed Deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rfsc2-6fb4c74686" has successfully progressed.}
  I0722 18:53:01.479242 21 deployment.go:572] Found Deployment test-deployment-rfsc2 in namespace deployment-1046 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 18:53:01.479259 21 deployment.go:583] Deployment test-deployment-rfsc2 has an updated status
  STEP: patching the Statefulset Status @ 07/22/25 18:53:01.479
  I0722 18:53:01.479335 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0722 18:53:01.487377 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/22/25 18:53:01.487
  I0722 18:53:01.489174 21 deployment.go:616] Observed &Deployment event: ADDED
  I0722 18:53:01.489196 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rfsc2-6fb4c74686"}
  I0722 18:53:01.489293 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0722 18:53:01.489308 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rfsc2-6fb4c74686"}
  I0722 18:53:01.489317 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 18:53:01.489469 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0722 18:53:01.489529 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0722 18:53:01.489558 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:52:59 +0000 UTC 2025-07-22 18:52:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-rfsc2-6fb4c74686" is progressing.}
  I0722 18:53:01.489700 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0722 18:53:01.489731 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:53:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 18:53:01.489746 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rfsc2-6fb4c74686" has successfully progressed.}
  I0722 18:53:01.489844 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0722 18:53:01.489885 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:53:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0722 18:53:01.489895 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-22 18:53:00 +0000 UTC 2025-07-22 18:52:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rfsc2-6fb4c74686" has successfully progressed.}
  I0722 18:53:01.489906 21 deployment.go:612] Observed deployment test-deployment-rfsc2 in namespace deployment-1046 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 18:53:01.490006 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0722 18:53:01.490069 21 deployment.go:609] Found deployment test-deployment-rfsc2 in namespace deployment-1046 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0722 18:53:01.490082 21 deployment.go:620] Deployment test-deployment-rfsc2 has a patched status
  I0722 18:53:01.494479 21 deployment.go:633] Deployment "test-deployment-rfsc2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-rfsc2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1046",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05b06f7e-7f0f-4496-a4c9-e56d52c07208",
      ResourceVersion: (string) (len=4) "8369",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888807179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-rfsc2-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 18:53:01.555216 21 deployment.go:40] New ReplicaSet "test-deployment-rfsc2-6fb4c74686" of Deployment "test-deployment-rfsc2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-rfsc2-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1046",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7744d44c-0f1c-4df1-9ce1-9a1bd87636f1",
      ResourceVersion: (string) (len=4) "8363",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888807179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-rfsc2",
          UID: (types.UID) (len=36) "05b06f7e-7f0f-4496-a4c9-e56d52c07208",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 35 62  |k:{\"uid\":\"05b|
              00000120  30 36 66 37 65 2d 37 66  30 66 2d 34 34 39 36 2d  |06f7e-7f0f-4496-|
              00000130  61 34 63 39 2d 65 35 36  64 35 32 63 30 37 32 30  |a4c9-e56d52c0720|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 18:53:01.561579 21 deployment.go:68] Pod "test-deployment-rfsc2-6fb4c74686-q65cf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-rfsc2-6fb4c74686-q65cf",
      GenerateName: (string) (len=33) "test-deployment-rfsc2-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-1046",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e588861e-78a2-448f-86fd-e111e9177bb8",
      ResourceVersion: (string) (len=4) "8362",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888807179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-rfsc2-6fb4c74686",
          UID: (types.UID) (len=36) "7744d44c-0f1c-4df1-9ce1-9a1bd87636f1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 37 34 34 64 34 34  63 2d 30 66 31 63 2d 34  |"7744d44c-0f1c-4|
              000000a0  64 66 31 2d 39 63 65 31  2d 39 61 31 62 64 38 37  |df1-9ce1-9a1bd87|
              000000b0  36 33 36 66 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |636f1\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 31 35 5c 22 7d 22 3a  |2.168.12.15\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zhbgt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zhbgt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888807179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888807179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888807179,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://566335242b0f2f152b34c373f7a73d139866005cdd50aa93ff2cefd86dd1e720",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zhbgt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 18:53:01.562803 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1046" for this suite. @ 07/22/25 18:53:01.567
• [2.274 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 07/22/25 18:53:01.576
  I0722 18:53:01.576930 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 18:53:01.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:53:01.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:53:01.595
  STEP: creating a collection of services @ 07/22/25 18:53:01.598
  I0722 18:53:01.598355 21 service.go:3635] Creating e2e-svc-a-zsqvl
  I0722 18:53:01.609919 21 service.go:3635] Creating e2e-svc-b-gcvzw
  I0722 18:53:01.620453 21 service.go:3635] Creating e2e-svc-c-6jbdx
  STEP: deleting service collection @ 07/22/25 18:53:01.635
  I0722 18:53:01.670063 21 service.go:3670] Collection of services has been deleted
  I0722 18:53:01.670244 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7370" for this suite. @ 07/22/25 18:53:01.675
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/22/25 18:53:01.681
  I0722 18:53:01.681524 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 18:53:01.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:53:01.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:53:01.698
  STEP: Setting up server cert @ 07/22/25 18:53:01.724
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 18:53:01.979
  STEP: Deploying the webhook pod @ 07/22/25 18:53:01.987
  STEP: Wait for the deployment to be ready @ 07/22/25 18:53:02.002
  I0722 18:53:02.021561 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 18:53:04.036
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 18:53:04.049
  I0722 18:53:05.049581 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/22/25 18:53:05.06
  STEP: create a configmap that should be updated by the webhook @ 07/22/25 18:53:05.074
  I0722 18:53:05.132407 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-154" for this suite. @ 07/22/25 18:53:05.137
  STEP: Destroying namespace "webhook-markers-7861" for this suite. @ 07/22/25 18:53:05.146
• [3.471 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/22/25 18:53:05.152
  I0722 18:53:05.152451 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename init-container @ 07/22/25 18:53:05.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:53:05.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:53:05.169
  STEP: creating the pod @ 07/22/25 18:53:05.173
  I0722 18:53:05.173360 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0722 18:53:07.851544 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-466" for this suite. @ 07/22/25 18:53:07.858
• [2.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/22/25 18:53:07.867
  I0722 18:53:07.867217 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename taint-single-pod @ 07/22/25 18:53:07.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:53:07.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:53:07.88
  I0722 18:53:07.883612 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 18:54:07.883984 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0722 18:54:07.889956 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/22/25 18:54:07.889
  I0722 18:54:08.104184 21 taints.go:294] Pod is running on ip-172-31-31-147. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/22/25 18:54:08.104
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 18:54:08.114
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/22/25 18:54:08.12
  I0722 18:54:08.120453 21 taints.go:313] Pod wasn't evicted. Proceeding
  I0722 18:54:08.120463 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 18:54:08.132
  STEP: Waiting some time to make sure that toleration time passed. @ 07/22/25 18:54:08.15
  I0722 18:55:23.152520 21 taints.go:329] Pod wasn't evicted. Test successful
  I0722 18:55:23.152702 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4036" for this suite. @ 07/22/25 18:55:23.158
• [135.300 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 07/22/25 18:55:23.167
  I0722 18:55:23.167397 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 18:55:23.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:55:23.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:55:23.183
  STEP: Creating resourceQuota "e2e-rq-status-bsf8f" @ 07/22/25 18:55:23.19
  I0722 18:55:23.199079 21 resource_quota.go:1102] Resource quota "e2e-rq-status-bsf8f" reports spec: hard cpu limit of 500m
  I0722 18:55:23.199101 21 resource_quota.go:1104] Resource quota "e2e-rq-status-bsf8f" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-bsf8f" /status @ 07/22/25 18:55:23.199
  STEP: Confirm /status for "e2e-rq-status-bsf8f" resourceQuota via watch @ 07/22/25 18:55:23.206
  I0722 18:55:23.208139 21 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-bsf8f" in namespace "resourcequota-8109" with hard status: v1.ResourceList(nil)
  I0722 18:55:23.208199 21 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-bsf8f" in namespace "resourcequota-8109" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0722 18:55:23.208213 21 resource_quota.go:1141] ResourceQuota "e2e-rq-status-bsf8f" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/22/25 18:55:23.212
  I0722 18:55:23.218640 21 resource_quota.go:1152] Resource quota "e2e-rq-status-bsf8f" reports spec: hard cpu limit of 1
  I0722 18:55:23.218658 21 resource_quota.go:1153] Resource quota "e2e-rq-status-bsf8f" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-bsf8f" /status @ 07/22/25 18:55:23.218
  STEP: Confirm /status for "e2e-rq-status-bsf8f" resourceQuota via watch @ 07/22/25 18:55:23.226
  I0722 18:55:23.228066 21 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-bsf8f" in namespace "resourcequota-8109" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0722 18:55:23.228093 21 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-bsf8f" in namespace "resourcequota-8109" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0722 18:55:23.228101 21 resource_quota.go:1185] ResourceQuota "e2e-rq-status-bsf8f" /status was patched
  STEP: Get "e2e-rq-status-bsf8f" /status @ 07/22/25 18:55:23.228
  I0722 18:55:23.232371 21 resource_quota.go:1196] Resourcequota "e2e-rq-status-bsf8f" reports status: hard cpu of 1
  I0722 18:55:23.232394 21 resource_quota.go:1198] Resourcequota "e2e-rq-status-bsf8f" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-bsf8f" /status before checking Spec is unchanged @ 07/22/25 18:55:23.235
  I0722 18:55:23.240817 21 resource_quota.go:1218] Resourcequota "e2e-rq-status-bsf8f" reports status: hard cpu of 2
  I0722 18:55:23.240839 21 resource_quota.go:1220] Resourcequota "e2e-rq-status-bsf8f" reports status: hard memory of 2Gi
  I0722 18:55:23.242380 21 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-bsf8f" in namespace "resourcequota-8109" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0722 18:55:23.246120 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a1f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:28.248559 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189a28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189a70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189ad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:33.250287 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:38.250151 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189c08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189c68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:43.247990 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a6d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:48.249672 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189d70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189da0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004189dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:53.250753 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:55:58.249595 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a9d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408aa08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:03.247739 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:08.249197 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:13.247551 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041880a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041880d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:18.250098 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041881e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:23.247329 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a4f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:28.250297 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041883a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041883d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:33.247130 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a6d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:38.247627 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:43.247688 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041885b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041885e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:48.248749 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041886f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:53.249751 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408a9f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408aa20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408aa50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:56:58.250181 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041888a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:57:03.249599 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041889d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:57:08.250680 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408abe8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408ac30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408ac60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:57:13.250585 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408ade0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408ae10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00408ae58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:57:18.248879 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-bsf8f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bsf8f", GenerateName:"", Namespace:"resourcequota-8109", SelfLink:"", UID:"f1c67e2d-4f4e-45bf-a1f0-a16ddea15cdb", ResourceVersion:"8942", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bsf8f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188ac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 55, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004188b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0722 18:57:23.248296 21 resource_quota.go:1260] ResourceQuota "e2e-rq-status-bsf8f" Spec was unchanged and /status reset
  I0722 18:57:23.248418 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8109" for this suite. @ 07/22/25 18:57:23.253
• [120.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/22/25 18:57:23.263
  I0722 18:57:23.263022 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename limitrange @ 07/22/25 18:57:23.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:23.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:23.278
  STEP: Creating LimitRange "e2e-limitrange-8tdcn" in namespace "limitrange-1587" @ 07/22/25 18:57:23.281
  STEP: Creating another limitRange in another namespace @ 07/22/25 18:57:23.286
  I0722 18:57:23.301680 21 limit_range.go:299] Namespace "e2e-limitrange-8tdcn-1064" created
  I0722 18:57:23.301696 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-8tdcn" in namespace "e2e-limitrange-8tdcn-1064"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-8tdcn" @ 07/22/25 18:57:23.306
  I0722 18:57:23.310750 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-8tdcn" in "limitrange-1587" namespace @ 07/22/25 18:57:23.31
  I0722 18:57:23.318629 21 limit_range.go:335] LimitRange "e2e-limitrange-8tdcn" has been patched
  STEP: Delete LimitRange "e2e-limitrange-8tdcn" by Collection with labelSelector: "e2e-limitrange-8tdcn=patched" @ 07/22/25 18:57:23.318
  STEP: Confirm that the limitRange "e2e-limitrange-8tdcn" has been deleted @ 07/22/25 18:57:23.326
  I0722 18:57:23.326536 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0722 18:57:23.329649 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-8tdcn=patched"
  I0722 18:57:23.329671 21 limit_range.go:344] LimitRange "e2e-limitrange-8tdcn" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-8tdcn" @ 07/22/25 18:57:23.329
  I0722 18:57:23.333385 21 limit_range.go:350] Found 1 limitRange
  I0722 18:57:23.333469 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1587" for this suite. @ 07/22/25 18:57:23.354
  STEP: Destroying namespace "e2e-limitrange-8tdcn-1064" for this suite. @ 07/22/25 18:57:23.362
• [0.107 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/22/25 18:57:23.369
  I0722 18:57:23.369621 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 18:57:23.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:23.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:23.39
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 18:57:23.455
  STEP: create the pod with lifecycle hook @ 07/22/25 18:57:25.481
  STEP: check poststart hook @ 07/22/25 18:57:27.503
  STEP: delete the pod with lifecycle hook @ 07/22/25 18:57:27.521
  I0722 18:57:29.539760 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2889" for this suite. @ 07/22/25 18:57:29.543
• [6.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/22/25 18:57:29.552
  I0722 18:57:29.552420 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 18:57:29.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:29.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:29.57
  STEP: creating a policy with variables @ 07/22/25 18:57:29.579
  STEP: waiting until the marker is denied @ 07/22/25 18:57:29.602
  STEP: testing a replicated Deployment to be allowed @ 07/22/25 18:57:29.713
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/22/25 18:57:29.735
  I0722 18:57:29.790590 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6891" for this suite. @ 07/22/25 18:57:29.797
• [0.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/22/25 18:57:29.813
  I0722 18:57:29.813898 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 18:57:29.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:29.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:29.832
  I0722 18:57:29.835959 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: creating the pod @ 07/22/25 18:57:29.836
  STEP: submitting the pod to kubernetes @ 07/22/25 18:57:29.836
  I0722 18:57:31.906418 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3147" for this suite. @ 07/22/25 18:57:31.912
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/22/25 18:57:31.921
  I0722 18:57:31.921855 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename disruption @ 07/22/25 18:57:31.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:31.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:31.937
  STEP: Creating a kubernetes client @ 07/22/25 18:57:31.942
  I0722 18:57:31.942142 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename disruption-2 @ 07/22/25 18:57:31.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:31.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:31.96
  STEP: Waiting for the pdb to be processed @ 07/22/25 18:57:31.967
  STEP: Waiting for the pdb to be processed @ 07/22/25 18:57:33.982
  STEP: Waiting for the pdb to be processed @ 07/22/25 18:57:35.992
  STEP: listing a collection of PDBs across all namespaces @ 07/22/25 18:57:37.998
  STEP: listing a collection of PDBs in namespace disruption-1541 @ 07/22/25 18:57:38.002
  STEP: deleting a collection of PDBs @ 07/22/25 18:57:38.006
  STEP: Waiting for the PDB collection to be deleted @ 07/22/25 18:57:38.02
  I0722 18:57:38.024623 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6848" for this suite. @ 07/22/25 18:57:38.028
  I0722 18:57:38.034665 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1541" for this suite. @ 07/22/25 18:57:38.13
• [6.217 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 07/22/25 18:57:38.139
  I0722 18:57:38.139171 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 18:57:38.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:38.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:38.157
  STEP: Setting up server cert @ 07/22/25 18:57:38.179
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 18:57:38.596
  STEP: Deploying the webhook pod @ 07/22/25 18:57:38.603
  STEP: Wait for the deployment to be ready @ 07/22/25 18:57:38.616
  I0722 18:57:38.627212 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 18:57:40.641
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 18:57:40.656
  I0722 18:57:41.656515 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/22/25 18:57:41.74
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 18:57:41.771
  STEP: Deleting the collection of validation webhooks @ 07/22/25 18:57:41.795
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 18:57:41.846
  I0722 18:57:41.898416 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6456" for this suite. @ 07/22/25 18:57:41.906
  STEP: Destroying namespace "webhook-markers-3494" for this suite. @ 07/22/25 18:57:41.913
• [3.783 seconds]
------------------------------
SSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/22/25 18:57:41.922
  I0722 18:57:41.922366 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename volumeattachment @ 07/22/25 18:57:41.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:41.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:41.941
  STEP: Create VolumeAttachment "va-e2e-kt7pp" on node "ip-172-31-7-234" @ 07/22/25 18:57:42.007
  STEP: Patch VolumeAttachment "va-e2e-kt7pp" on node "ip-172-31-7-234" @ 07/22/25 18:57:42.013
  STEP: Reading "va-e2e-kt7pp" Status @ 07/22/25 18:57:42.019
  STEP: Patching "va-e2e-kt7pp" Status @ 07/22/25 18:57:42.023
  I0722 18:57:42.029177 21 volume_attachment.go:224] "va-e2e-kt7pp" Status.Attached: true
  STEP: Updating "va-e2e-kt7pp" Status @ 07/22/25 18:57:42.029
  I0722 18:57:42.037635 21 volume_attachment.go:240] "va-e2e-kt7pp" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-kt7pp" on node "ip-172-31-7-234" @ 07/22/25 18:57:42.037
  STEP: Confirm deletion of VolumeAttachment "va-e2e-kt7pp" on node "ip-172-31-7-234" @ 07/22/25 18:57:42.044
  I0722 18:57:42.047948 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6096" for this suite. @ 07/22/25 18:57:42.107
• [0.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/22/25 18:57:42.116
  I0722 18:57:42.116775 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename apf @ 07/22/25 18:57:42.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:42.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:42.132
  STEP: getting /apis @ 07/22/25 18:57:42.135
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/22/25 18:57:42.141
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/22/25 18:57:42.142
  STEP: creating @ 07/22/25 18:57:42.143
  STEP: getting @ 07/22/25 18:57:42.161
  STEP: listing @ 07/22/25 18:57:42.164
  STEP: watching @ 07/22/25 18:57:42.167
  I0722 18:57:42.167934 21 flowcontrol.go:620] starting watch
  STEP: patching @ 07/22/25 18:57:42.169
  STEP: updating @ 07/22/25 18:57:42.176
  I0722 18:57:42.185968 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/22/25 18:57:42.186
  STEP: patching /status @ 07/22/25 18:57:42.189
  STEP: updating /status @ 07/22/25 18:57:42.194
  STEP: deleting @ 07/22/25 18:57:42.206
  STEP: deleting a collection @ 07/22/25 18:57:42.219
  I0722 18:57:42.245109 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6845" for this suite. @ 07/22/25 18:57:42.252
• [0.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/22/25 18:57:42.264
  I0722 18:57:42.264212 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 18:57:42.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:42.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:42.291
  STEP: Creating simple DaemonSet "daemon-set" @ 07/22/25 18:57:42.363
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 18:57:42.37
  I0722 18:57:42.451125 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:57:42.451159 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:57:42.455222 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:57:42.455238 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 18:57:43.375672 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:57:43.375714 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:57:43.380848 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 18:57:43.380869 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/22/25 18:57:43.384
  STEP: DeleteCollection of the DaemonSets @ 07/22/25 18:57:43.387
  STEP: Verify that ReplicaSets have been deleted @ 07/22/25 18:57:43.394
  I0722 18:57:43.510306 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9651"},"items":null}

  I0722 18:57:43.515188 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9651"},"items":[{"metadata":{"name":"daemon-set-bcm82","generateName":"daemon-set-","namespace":"daemonsets-8932","uid":"58f8ee4a-f221-4c54-a4f9-ab52f73ad57e","resourceVersion":"9648","creationTimestamp":"2025-07-22T18:57:42Z","deletionTimestamp":"2025-07-22T18:58:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d605771c-01c9-4825-9ffa-b2106e391276","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-22T18:57:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d605771c-01c9-4825-9ffa-b2106e391276\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-22T18:57:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.12.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g4tfb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g4tfb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-7-234","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-7-234"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:42Z"}],"hostIP":"172.31.7.234","hostIPs":[{"ip":"172.31.7.234"}],"podIP":"192.168.12.17","podIPs":[{"ip":"192.168.12.17"}],"startTime":"2025-07-22T18:57:42Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-22T18:57:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://76979538aa0566a844224508862de23ac17665c1e0eea06f8525bf2b59cd62dd","started":true,"volumeMounts":[{"name":"kube-api-access-g4tfb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fn6bm","generateName":"daemon-set-","namespace":"daemonsets-8932","uid":"97cec17e-89f8-4462-91b7-9de5ae59dab2","resourceVersion":"9646","creationTimestamp":"2025-07-22T18:57:42Z","deletionTimestamp":"2025-07-22T18:58:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d605771c-01c9-4825-9ffa-b2106e391276","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-22T18:57:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d605771c-01c9-4825-9ffa-b2106e391276\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-22T18:57:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.231.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vxxsf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vxxsf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-68-73","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-68-73"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:42Z"}],"hostIP":"172.31.68.73","hostIPs":[{"ip":"172.31.68.73"}],"podIP":"192.168.231.9","podIPs":[{"ip":"192.168.231.9"}],"startTime":"2025-07-22T18:57:42Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-22T18:57:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://71495fb71d208f3ded668e51b4cbd1d62e1cef6a90a75c466b302379746cd87f","started":true,"volumeMounts":[{"name":"kube-api-access-vxxsf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zvq2d","generateName":"daemon-set-","namespace":"daemonsets-8932","uid":"925c7308-f445-468d-bc54-22924e36d91d","resourceVersion":"9647","creationTimestamp":"2025-07-22T18:57:42Z","deletionTimestamp":"2025-07-22T18:58:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d605771c-01c9-4825-9ffa-b2106e391276","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-22T18:57:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d605771c-01c9-4825-9ffa-b2106e391276\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-22T18:57:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.183.174\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6lzdl","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6lzdl","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-31-147","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-31-147"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-22T18:57:42Z"}],"hostIP":"172.31.31.147","hostIPs":[{"ip":"172.31.31.147"}],"podIP":"192.168.183.174","podIPs":[{"ip":"192.168.183.174"}],"startTime":"2025-07-22T18:57:42Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-22T18:57:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://51b3333e3ad2aa621525cb9e648d0891f42933cbed9195f55b9a0505b083da81","started":true,"volumeMounts":[{"name":"kube-api-access-6lzdl","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0722 18:57:43.529541 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8932" for this suite. @ 07/22/25 18:57:43.533
• [1.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/22/25 18:57:43.54
  I0722 18:57:43.540402 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 18:57:43.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:43.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:43.556
  STEP: getting /apis @ 07/22/25 18:57:43.57
  STEP: getting /apis/admissionregistration.k8s.io @ 07/22/25 18:57:43.573
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/22/25 18:57:43.574
  STEP: creating @ 07/22/25 18:57:43.576
  STEP: getting @ 07/22/25 18:57:43.593
  STEP: listing @ 07/22/25 18:57:43.596
  STEP: watching @ 07/22/25 18:57:43.599
  I0722 18:57:43.599553 21 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/22/25 18:57:43.601
  STEP: updating @ 07/22/25 18:57:43.606
  I0722 18:57:43.614151 21 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/22/25 18:57:43.614
  STEP: deleting a collection @ 07/22/25 18:57:43.627
  I0722 18:57:43.647754 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7758" for this suite. @ 07/22/25 18:57:43.652
• [0.122 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/22/25 18:57:43.662
  I0722 18:57:43.662322 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 18:57:43.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:43.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:43.68
  STEP: Create set of pods @ 07/22/25 18:57:43.682
  I0722 18:57:43.693079 21 pods.go:871] created test-pod-1
  I0722 18:57:43.702191 21 pods.go:871] created test-pod-2
  I0722 18:57:43.711721 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/22/25 18:57:43.711
  STEP: waiting for all pods to be deleted @ 07/22/25 18:57:45.754
  I0722 18:57:45.757906 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0722 18:57:46.759432 21 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  I0722 18:57:47.762381 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9343" for this suite. @ 07/22/25 18:57:47.769
• [4.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 07/22/25 18:57:47.779
  I0722 18:57:47.779905 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 18:57:47.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:57:47.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:57:47.799
  STEP: Creating service test in namespace statefulset-604 @ 07/22/25 18:57:47.802
  STEP: Looking for a node to schedule stateful set and pod @ 07/22/25 18:57:47.807
  STEP: Creating pod with conflicting port in namespace statefulset-604 @ 07/22/25 18:57:47.867
  STEP: Waiting until pod test-pod will start running in namespace statefulset-604 @ 07/22/25 18:57:47.879
  STEP: Creating statefulset with conflicting port in namespace statefulset-604 @ 07/22/25 18:57:49.89
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-604 @ 07/22/25 18:57:49.896
  I0722 18:57:49.910292 21 statefulset.go:872] Observed stateful pod in namespace: statefulset-604, name: ss-0, uid: 806e3020-66f5-425d-8978-69dafcbe4188, status phase: Pending. Waiting for statefulset controller to delete.
  I0722 18:57:49.931307 21 statefulset.go:872] Observed stateful pod in namespace: statefulset-604, name: ss-0, uid: 806e3020-66f5-425d-8978-69dafcbe4188, status phase: Failed. Waiting for statefulset controller to delete.
  I0722 18:57:49.938711 21 statefulset.go:872] Observed stateful pod in namespace: statefulset-604, name: ss-0, uid: 806e3020-66f5-425d-8978-69dafcbe4188, status phase: Failed. Waiting for statefulset controller to delete.
  I0722 18:57:49.942517 21 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-604
  STEP: Removing pod with conflicting port in namespace statefulset-604 @ 07/22/25 18:57:49.942
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-604 and will be in running state @ 07/22/25 18:57:49.958
  I0722 18:57:51.970356 21 statefulset.go:138] Deleting all statefulset in ns statefulset-604
  I0722 18:57:51.974688 21 rest.go:152] Scaling statefulset ss to 0
  I0722 18:58:01.992476 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 18:58:01.996659 21 rest.go:90] Deleting statefulset ss
  I0722 18:58:02.011852 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-604" for this suite. @ 07/22/25 18:58:02.019
• [14.247 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 07/22/25 18:58:02.026
  I0722 18:58:02.026791 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename security-context @ 07/22/25 18:58:02.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:02.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:02.047
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/22/25 18:58:02.05
  STEP: Saw pod success @ 07/22/25 18:58:06.072
  I0722 18:58:06.076475 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod security-context-d1fd9bb9-3b40-409e-acb0-7165df0566b4 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 18:58:06.092
  I0722 18:58:06.108373 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1776" for this suite. @ 07/22/25 18:58:06.113
• [4.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/22/25 18:58:06.121
  I0722 18:58:06.121535 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 18:58:06.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:06.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:06.138
  I0722 18:58:06.144922 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-768" for this suite. @ 07/22/25 18:58:06.215
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/22/25 18:58:06.226
  I0722 18:58:06.226535 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 18:58:06.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:06.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:06.244
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 18:58:06.247
  STEP: Saw pod success @ 07/22/25 18:58:10.273
  I0722 18:58:10.276877 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-f6d915ba-3103-4ba6-a4e4-a0144d19b42c container client-container: <nil>
  STEP: delete the pod @ 07/22/25 18:58:10.282
  I0722 18:58:10.302441 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2438" for this suite. @ 07/22/25 18:58:10.307
• [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/22/25 18:58:10.314
  I0722 18:58:10.315010 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 18:58:10.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:10.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:10.334
  STEP: Creating Indexed job @ 07/22/25 18:58:10.337
  STEP: Ensuring job reaches completions @ 07/22/25 18:58:10.345
  STEP: Ensuring pods with index for job exist @ 07/22/25 18:58:18.378
  I0722 18:58:18.383390 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3337" for this suite. @ 07/22/25 18:58:18.388
• [8.080 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/22/25 18:58:18.395
  I0722 18:58:18.395447 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 18:58:18.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:18.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:18.412
  STEP: Creating configMap with name configmap-test-volume-0be560f8-b240-4377-840b-1f19f99edb30 @ 07/22/25 18:58:18.415
  STEP: Creating a pod to test consume configMaps @ 07/22/25 18:58:18.42
  STEP: Saw pod success @ 07/22/25 18:58:22.447
  I0722 18:58:22.451433 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-4ce1f5a6-dcb0-45c8-a28f-6c898ec91af7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 18:58:22.459
  I0722 18:58:22.476321 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-696" for this suite. @ 07/22/25 18:58:22.481
• [4.093 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 07/22/25 18:58:22.488
  I0722 18:58:22.488507 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 18:58:22.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:22.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:22.506
  STEP: Creating a pod to test service account token:  @ 07/22/25 18:58:22.509
  STEP: Saw pod success @ 07/22/25 18:58:24.53
  I0722 18:58:24.534194 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod test-pod-ce0b25b5-1a33-434d-9a83-b2bcec915d22 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 18:58:24.543
  I0722 18:58:24.559143 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1598" for this suite. @ 07/22/25 18:58:24.563
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/22/25 18:58:24.57
  I0722 18:58:24.570215 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 18:58:24.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:24.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:24.586
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/22/25 18:58:24.675
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 18:58:24.681
  I0722 18:58:24.763781 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:24.763809 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:24.767479 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:58:24.767496 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 18:58:25.686613 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:25.686653 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:25.690741 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 18:58:25.690763 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/22/25 18:58:25.694
  I0722 18:58:25.788115 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:25.788156 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:25.792494 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 18:58:25.792518 21 fixtures.go:131] Node ip-172-31-7-234 is running 0 daemon pod, expected 1
  I0722 18:58:26.715873 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:26.715916 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:26.720734 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 18:58:26.720751 21 fixtures.go:131] Node ip-172-31-7-234 is running 0 daemon pod, expected 1
  I0722 18:58:27.713579 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:27.713618 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 18:58:27.762926 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 18:58:27.762959 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/22/25 18:58:27.762
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 18:58:27.775
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4719, will wait for the garbage collector to delete the pods @ 07/22/25 18:58:27.775
  I0722 18:58:27.838247 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.985474ms
  I0722 18:58:27.939342 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.091788ms
  I0722 18:58:30.444512 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 18:58:30.444558 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 18:58:30.448683 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10402"},"items":null}

  I0722 18:58:30.452592 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10402"},"items":null}

  I0722 18:58:30.467067 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4719" for this suite. @ 07/22/25 18:58:30.471
• [5.911 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/22/25 18:58:30.48
  I0722 18:58:30.480865 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 18:58:30.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:30.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:30.498
  I0722 18:58:32.524997 21 delete.go:62] Deleting pod "var-expansion-5c7a4049-6ee4-42cf-bba8-031c41ef4f0c" in namespace "var-expansion-2713"
  I0722 18:58:32.534186 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-5c7a4049-6ee4-42cf-bba8-031c41ef4f0c" to be fully deleted
  I0722 18:58:34.544335 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2713" for this suite. @ 07/22/25 18:58:34.548
• [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/22/25 18:58:34.555
  I0722 18:58:34.555501 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 18:58:34.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:34.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:34.573
  STEP: Create a Replicaset @ 07/22/25 18:58:34.58
  STEP: Verify that the required pods have come up. @ 07/22/25 18:58:34.588
  I0722 18:58:34.592604 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0722 18:58:39.601609 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 18:58:39.601
  STEP: Getting /status @ 07/22/25 18:58:39.601
  I0722 18:58:39.605130 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/22/25 18:58:39.605
  I0722 18:58:39.615241 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/22/25 18:58:39.615
  I0722 18:58:39.617320 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0722 18:58:39.617378 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.617438 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.617483 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.617500 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-816 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 18:58:39.617509 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/22/25 18:58:39.617
  I0722 18:58:39.617594 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0722 18:58:39.625659 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/22/25 18:58:39.625
  I0722 18:58:39.627364 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0722 18:58:39.627422 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.627470 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.627644 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.627660 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-816 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 18:58:39.627762 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0722 18:58:39.627808 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-816 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0722 18:58:39.627826 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0722 18:58:39.627973 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-816" for this suite. @ 07/22/25 18:58:39.632
• [5.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/22/25 18:58:39.639
  I0722 18:58:39.639198 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 18:58:39.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:39.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:39.656
  I0722 18:58:39.701345 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3964" for this suite. @ 07/22/25 18:58:39.734
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/22/25 18:58:39.741
  I0722 18:58:39.741383 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 18:58:39.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:39.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:39.754
  I0722 18:58:39.766670 21 endpointslice.go:1045] Endpoints addresses: [172.31.11.165 172.31.29.40] , ports: [6443]
  I0722 18:58:39.766698 21 endpointslice.go:1075] EndpointSlices addresses: [172.31.11.165 172.31.29.40] , ports: [6443]
  I0722 18:58:39.766769 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9830" for this suite. @ 07/22/25 18:58:39.835
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/22/25 18:58:39.844
  I0722 18:58:39.844262 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename init-container @ 07/22/25 18:58:39.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:58:39.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:58:39.865
  STEP: creating the pod @ 07/22/25 18:58:39.869
  I0722 18:58:39.869320 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0722 18:59:27.501646 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bc255d3f-91b7-4451-aada-3b47ae3b7dda", GenerateName:"", Namespace:"init-container-8537", SelfLink:"", UID:"7f44460f-5ade-47c9-93ab-a78560b1d2b5", ResourceVersion:"10691", Generation:0, CreationTimestamp:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"869312478"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d581e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 22, 18, 59, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d58210), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-2j5bl", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001358bc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2j5bl", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2j5bl", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2j5bl", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003d50310), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-31-147", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002d4f560), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003d503a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003d503c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003d503c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003d503cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0043aea30), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 18, 58, 41, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.31.147", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.31.147"}}, PodIP:"192.168.183.186", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.183.186"}}, StartTime:time.Date(2025, time.July, 22, 18, 58, 39, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000024700)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000024770)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://936567253d3d257e83e20a28355df6c8e1af337cc37fd0e82d305f3a8a5928dd", Started:(*bool)(0xc003d5048a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2j5bl", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0043aea50)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001358c20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003d5049d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2j5bl", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0043aea60)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001358c00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003d50454), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2j5bl", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0043aea40)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0722 18:59:27.501787 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8537" for this suite. @ 07/22/25 18:59:27.507
• [47.670 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/22/25 18:59:27.514
  I0722 18:59:27.514394 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 18:59:27.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 18:59:27.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 18:59:27.534
  STEP: Looking for a node to schedule job pods @ 07/22/25 18:59:27.537
  STEP: Creating a job @ 07/22/25 18:59:27.608
  STEP: Waiting for all the pods to be ready @ 07/22/25 18:59:27.616
  STEP: Fetch all running pods @ 07/22/25 18:59:31.631
  STEP: Evict all the Pods @ 07/22/25 18:59:31.636
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-kchq9/job-6222 @ 07/22/25 18:59:31.636
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-9lmgl/job-6222 @ 07/22/25 18:59:31.636
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-qkmjg/job-6222 @ 07/22/25 18:59:31.636
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-kchq9/job-6222 to be deleted @ 07/22/25 18:59:31.659
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-qkmjg/job-6222 to be deleted @ 07/22/25 18:59:31.665
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-9lmgl/job-6222 to be deleted @ 07/22/25 18:59:31.667
  STEP: Ensuring job reaches completions @ 07/22/25 18:59:37.684
  I0722 19:00:19.812896 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6222" for this suite. @ 07/22/25 19:00:19.816
• [52.309 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 07/22/25 19:00:19.823
  I0722 19:00:19.823669 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:00:19.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:00:19.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:00:19.838
  STEP: Creating pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560 @ 07/22/25 19:00:19.842
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 19:00:21.858
  I0722 19:00:21.862529 21 container_probe.go:1749] Initial restart count of pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c is 0
  I0722 19:00:21.866492 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:23.871481 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:25.878248 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:27.884465 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:29.890619 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:31.895319 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:33.900688 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:35.905873 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:37.912024 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:39.917616 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:41.922694 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:43.929177 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:45.935671 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:47.940350 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:49.946288 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:51.952122 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:53.958407 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:55.962929 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:57.968451 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:00:59.973310 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:01.980573 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:03.985922 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:05.991615 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:07.997321 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:10.003276 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:12.008437 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:14.013543 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:16.019975 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:18.024624 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:20.030078 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:22.035694 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:24.040824 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:26.046001 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:28.051988 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:30.057957 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:32.064358 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:34.069453 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:36.074758 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:38.079778 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:40.085911 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:42.091914 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:44.096745 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:46.102660 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:48.108661 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:50.113512 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:52.119370 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:54.125484 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:56.130104 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:01:58.136579 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:00.142739 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:02.148084 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:04.153816 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:06.159338 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:08.164903 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:10.170697 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:12.178236 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:14.184659 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:16.190634 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:18.196563 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:20.202345 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:22.208669 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:24.213630 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:26.219889 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:28.226001 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:30.232230 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:32.238901 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:34.245516 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:36.251525 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:38.257709 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:40.264217 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:42.269672 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:44.274573 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:46.279974 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:48.286487 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:50.291800 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:52.298869 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:54.304478 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:56.309641 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:02:58.315499 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:00.320254 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:02.325548 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:04.331416 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:06.336744 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:08.342389 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:10.348202 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:12.353750 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:14.359799 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:16.365523 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:18.372114 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:20.377863 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:22.382926 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:24.390161 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:26.395996 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:28.401905 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:30.406863 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:32.412837 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:34.418419 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:36.424245 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:38.431028 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:40.435359 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:42.441230 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:44.446603 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:46.451631 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:48.457939 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:50.465104 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:52.470412 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:54.475131 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:56.481244 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:03:58.485888 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:00.492218 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:02.499297 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:04.504026 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:06.509891 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:08.517233 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:10.522306 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:12.528209 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:14.533327 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:16.539412 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:18.545890 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  I0722 19:04:20.551280 21 container_probe.go:1759] Get pod test-grpc-71ae76f4-448d-4714-9339-1c305684f60c in namespace container-probe-5560
  STEP: deleting the pod @ 07/22/25 19:04:22.552
  I0722 19:04:22.567332 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5560" for this suite. @ 07/22/25 19:04:22.574
• [242.759 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/22/25 19:04:22.582
  I0722 19:04:22.582823 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename watch @ 07/22/25 19:04:22.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:04:22.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:04:22.601
  STEP: creating a watch on configmaps with a certain label @ 07/22/25 19:04:22.604
  STEP: creating a new configmap @ 07/22/25 19:04:22.607
  STEP: modifying the configmap once @ 07/22/25 19:04:22.612
  STEP: changing the label value of the configmap @ 07/22/25 19:04:22.621
  STEP: Expecting to observe a delete notification for the watched object @ 07/22/25 19:04:22.632
  I0722 19:04:22.632385 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2386  4ff603f0-7901-499d-a6f2-e850363b3d57 11527 0 2025-07-22 19:04:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 19:04:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:04:22.632503 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2386  4ff603f0-7901-499d-a6f2-e850363b3d57 11528 0 2025-07-22 19:04:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 19:04:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:04:22.632558 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2386  4ff603f0-7901-499d-a6f2-e850363b3d57 11529 0 2025-07-22 19:04:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 19:04:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/22/25 19:04:22.632
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/22/25 19:04:22.644
  STEP: changing the label value of the configmap back @ 07/22/25 19:04:32.646
  STEP: modifying the configmap a third time @ 07/22/25 19:04:32.656
  STEP: deleting the configmap @ 07/22/25 19:04:32.665
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/22/25 19:04:32.671
  I0722 19:04:32.671634 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2386  4ff603f0-7901-499d-a6f2-e850363b3d57 11567 0 2025-07-22 19:04:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 19:04:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:04:32.671744 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2386  4ff603f0-7901-499d-a6f2-e850363b3d57 11568 0 2025-07-22 19:04:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 19:04:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:04:32.671798 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2386  4ff603f0-7901-499d-a6f2-e850363b3d57 11569 0 2025-07-22 19:04:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-22 19:04:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:04:32.671887 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2386" for this suite. @ 07/22/25 19:04:32.676
• [10.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/22/25 19:04:32.686
  I0722 19:04:32.686207 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:04:32.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:04:32.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:04:32.704
  STEP: Creating configMap with name configmap-test-volume-map-f4666557-9f3b-4323-b4f2-59bba5ae75c7 @ 07/22/25 19:04:32.707
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:04:32.712
  STEP: Saw pod success @ 07/22/25 19:04:36.741
  I0722 19:04:36.745213 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-ea67d97c-fd71-4ad1-bd2c-0e44e1a2674a container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:04:36.758
  I0722 19:04:36.774835 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2311" for this suite. @ 07/22/25 19:04:36.78
• [4.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/22/25 19:04:36.787
  I0722 19:04:36.787142 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:04:36.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:04:36.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:04:36.805
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-54dc6333-0a36-4b8c-9f77-59f37be2229b @ 07/22/25 19:04:36.881
  STEP: Creating the pod @ 07/22/25 19:04:36.888
  STEP: Updating configmap projected-configmap-test-upd-54dc6333-0a36-4b8c-9f77-59f37be2229b @ 07/22/25 19:04:38.925
  STEP: waiting to observe update in volume @ 07/22/25 19:04:38.931
  I0722 19:06:07.318803 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1789" for this suite. @ 07/22/25 19:06:07.323
• [90.544 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/22/25 19:06:07.33
  I0722 19:06:07.330915 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:06:07.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:06:07.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:06:07.349
  STEP: Setting up server cert @ 07/22/25 19:06:07.371
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:06:07.52
  STEP: Deploying the webhook pod @ 07/22/25 19:06:07.526
  STEP: Wait for the deployment to be ready @ 07/22/25 19:06:07.542
  I0722 19:06:07.551487 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:06:09.564
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:06:09.575
  I0722 19:06:10.575936 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/22/25 19:06:10.585
  STEP: create a pod @ 07/22/25 19:06:10.599
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/22/25 19:06:12.617
  I0722 19:06:12.617220 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=webhook-1077 attach --namespace=webhook-1077 to-be-attached-pod -i -c=container1'
  I0722 19:06:12.698208 21 builder.go:135] rc: 1
  I0722 19:06:12.755171 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1077" for this suite. @ 07/22/25 19:06:12.761
  STEP: Destroying namespace "webhook-markers-1824" for this suite. @ 07/22/25 19:06:12.769
• [5.445 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/22/25 19:06:12.776
  I0722 19:06:12.776555 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/22/25 19:06:12.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:06:12.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:06:12.793
  STEP: Creating two CSIDrivers @ 07/22/25 19:06:12.797
  STEP: Getting "inline-driver-24eb3a71-ccfe-4d8a-b1fa-f204bb0c8e0d" & "inline-driver-3b23ba24-a22b-40d1-bd1c-c18f3477a5aa" @ 07/22/25 19:06:12.815
  STEP: Patching the CSIDriver "inline-driver-3b23ba24-a22b-40d1-bd1c-c18f3477a5aa" @ 07/22/25 19:06:12.822
  STEP: Updating the CSIDriver "inline-driver-3b23ba24-a22b-40d1-bd1c-c18f3477a5aa" @ 07/22/25 19:06:12.829
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7929" @ 07/22/25 19:06:12.837
  STEP: Deleting CSIDriver "inline-driver-24eb3a71-ccfe-4d8a-b1fa-f204bb0c8e0d" @ 07/22/25 19:06:12.84
  STEP: Confirm deletion of CSIDriver "inline-driver-24eb3a71-ccfe-4d8a-b1fa-f204bb0c8e0d" @ 07/22/25 19:06:12.847
  STEP: Deleting CSIDriver "inline-driver-3b23ba24-a22b-40d1-bd1c-c18f3477a5aa" via DeleteCollection @ 07/22/25 19:06:12.851
  STEP: Confirm deletion of CSIDriver "inline-driver-3b23ba24-a22b-40d1-bd1c-c18f3477a5aa" @ 07/22/25 19:06:12.858
  I0722 19:06:12.862008 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7929" for this suite. @ 07/22/25 19:06:12.88
• [0.116 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/22/25 19:06:12.892
  I0722 19:06:12.892744 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 19:06:12.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:06:12.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:06:12.918
  STEP: create the rc1 @ 07/22/25 19:06:12.967
  STEP: create the rc2 @ 07/22/25 19:06:12.974
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/22/25 19:06:18.983
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/22/25 19:06:19.479
  STEP: wait for the rc to be deleted @ 07/22/25 19:06:19.488
  I0722 19:06:24.502601 21 garbage_collector.go:762] 69 pods remaining
  I0722 19:06:24.502630 21 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0722 19:06:24.502636 21 garbage_collector.go:770] 
  STEP: Gathering metrics @ 07/22/25 19:06:29.503
  W0722 19:06:29.507626      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 19:06:29.507654 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 19:06:29.507709 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29r9g" in namespace "gc-2662"
  I0722 19:06:29.520071 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2g68l" in namespace "gc-2662"
  I0722 19:06:29.535016 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jbhl" in namespace "gc-2662"
  I0722 19:06:29.548751 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2nhkz" in namespace "gc-2662"
  I0722 19:06:29.562938 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4685l" in namespace "gc-2662"
  I0722 19:06:29.576281 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4hmqx" in namespace "gc-2662"
  I0722 19:06:29.589233 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4t59p" in namespace "gc-2662"
  I0722 19:06:29.602101 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54xkj" in namespace "gc-2662"
  I0722 19:06:29.612877 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56mr2" in namespace "gc-2662"
  I0722 19:06:29.626422 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57b58" in namespace "gc-2662"
  I0722 19:06:29.640480 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5blgn" in namespace "gc-2662"
  I0722 19:06:29.655458 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5gc7b" in namespace "gc-2662"
  I0722 19:06:29.667602 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jjvh" in namespace "gc-2662"
  I0722 19:06:29.680421 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6gjtg" in namespace "gc-2662"
  I0722 19:06:29.694631 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-742bw" in namespace "gc-2662"
  I0722 19:06:29.709029 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lhqc" in namespace "gc-2662"
  I0722 19:06:29.721814 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8r4q2" in namespace "gc-2662"
  I0722 19:06:29.742187 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8tccs" in namespace "gc-2662"
  I0722 19:06:29.766166 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92pd4" in namespace "gc-2662"
  I0722 19:06:29.780525 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94vsq" in namespace "gc-2662"
  I0722 19:06:29.798841 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-97d6q" in namespace "gc-2662"
  I0722 19:06:29.819117 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pq7x" in namespace "gc-2662"
  I0722 19:06:29.847546 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9t9qq" in namespace "gc-2662"
  I0722 19:06:29.862594 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bldg2" in namespace "gc-2662"
  I0722 19:06:29.875202 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnmtq" in namespace "gc-2662"
  I0722 19:06:29.889604 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bzqcw" in namespace "gc-2662"
  I0722 19:06:29.903302 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cczq9" in namespace "gc-2662"
  I0722 19:06:29.920161 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ckgbl" in namespace "gc-2662"
  I0722 19:06:29.931884 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqt2x" in namespace "gc-2662"
  I0722 19:06:29.951279 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dl2c5" in namespace "gc-2662"
  I0722 19:06:29.965643 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ds2jj" in namespace "gc-2662"
  I0722 19:06:29.978281 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwnck" in namespace "gc-2662"
  I0722 19:06:29.991483 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4s9k" in namespace "gc-2662"
  I0722 19:06:30.010982 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f54wl" in namespace "gc-2662"
  I0722 19:06:30.032366 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fcpmw" in namespace "gc-2662"
  I0722 19:06:30.050985 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g4rxr" in namespace "gc-2662"
  I0722 19:06:30.064311 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g5qw5" in namespace "gc-2662"
  I0722 19:06:30.081146 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbw9s" in namespace "gc-2662"
  I0722 19:06:30.108285 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gh6kt" in namespace "gc-2662"
  I0722 19:06:30.141273 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hfz2k" in namespace "gc-2662"
  I0722 19:06:30.155933 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hkbgf" in namespace "gc-2662"
  I0722 19:06:30.171711 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrj76" in namespace "gc-2662"
  I0722 19:06:30.185031 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrwk5" in namespace "gc-2662"
  I0722 19:06:30.198420 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j5ztp" in namespace "gc-2662"
  I0722 19:06:30.217524 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j6dpr" in namespace "gc-2662"
  I0722 19:06:30.239177 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j9958" in namespace "gc-2662"
  I0722 19:06:30.255270 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kbwfs" in namespace "gc-2662"
  I0722 19:06:30.272802 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kkh8z" in namespace "gc-2662"
  I0722 19:06:30.288978 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kkqxs" in namespace "gc-2662"
  I0722 19:06:30.301872 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-krz4b" in namespace "gc-2662"
  I0722 19:06:30.316922 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2662" for this suite. @ 07/22/25 19:06:30.322
• [17.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/22/25 19:06:30.334
  I0722 19:06:30.335002 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-watch @ 07/22/25 19:06:30.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:06:30.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:06:30.36
  I0722 19:06:30.364607 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Creating first CR  @ 07/22/25 19:06:32.912
  I0722 19:06:32.917581 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T19:06:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T19:06:32Z]] name:name1 resourceVersion:14057 uid:b1d77aec-67a5-4f6f-8538-d938faeb84b8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/22/25 19:06:42.919
  I0722 19:06:42.926478 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T19:06:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T19:06:42Z]] name:name2 resourceVersion:14655 uid:d1cc242e-5840-4a0e-aad4-08a4f88a8043] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/22/25 19:06:52.928
  I0722 19:06:52.941912 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T19:06:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T19:06:52Z]] name:name1 resourceVersion:14677 uid:b1d77aec-67a5-4f6f-8538-d938faeb84b8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/22/25 19:07:02.942
  I0722 19:07:02.952179 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T19:06:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T19:07:02Z]] name:name2 resourceVersion:14699 uid:d1cc242e-5840-4a0e-aad4-08a4f88a8043] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/22/25 19:07:12.952
  I0722 19:07:12.960904 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T19:06:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T19:06:52Z]] name:name1 resourceVersion:14719 uid:b1d77aec-67a5-4f6f-8538-d938faeb84b8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/22/25 19:07:22.962
  I0722 19:07:22.970613 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-22T19:06:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-22T19:07:02Z]] name:name2 resourceVersion:14741 uid:d1cc242e-5840-4a0e-aad4-08a4f88a8043] num:map[num1:9223372036854775807 num2:1000000]]}
  I0722 19:07:33.490249 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7698" for this suite. @ 07/22/25 19:07:33.495
• [63.170 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 07/22/25 19:07:33.502
  I0722 19:07:33.502382 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:07:33.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:33.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:33.523
  I0722 19:07:33.527008 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 create -f -'
  I0722 19:07:33.619461 21 builder.go:146] stderr: ""
  I0722 19:07:33.619504 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0722 19:07:33.619555 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 create -f -'
  I0722 19:07:33.707659 21 builder.go:146] stderr: ""
  I0722 19:07:33.707717 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/22/25 19:07:33.707
  I0722 19:07:34.713333 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 19:07:34.713366 21 framework.go:733] Found 0 / 1
  I0722 19:07:35.714278 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 19:07:35.714314 21 framework.go:733] Found 1 / 1
  I0722 19:07:35.714328 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0722 19:07:35.717607 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 19:07:35.717631 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 19:07:35.717678 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 describe pod agnhost-primary-csmng'
  I0722 19:07:35.770011 21 builder.go:146] stderr: ""
  I0722 19:07:35.770104 21 builder.go:147] stdout: "Name:             agnhost-primary-csmng\nNamespace:        kubectl-4342\nPriority:         0\nService Account:  default\nNode:             ip-172-31-31-147/172.31.31.147\nStart Time:       Tue, 22 Jul 2025 19:07:33 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.183.162\nIPs:\n  IP:           192.168.183.162\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://9fee046b4d7541c71537f80a65b61eb43f23a0b42e710ff991a28d2052a49dbe\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 22 Jul 2025 19:07:34 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-rd58q (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-rd58q:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4342/agnhost-primary-csmng to ip-172-31-31-147\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0722 19:07:35.770168 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 describe rc agnhost-primary'
  I0722 19:07:35.827371 21 builder.go:146] stderr: ""
  I0722 19:07:35.827430 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4342\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-csmng\n"
  I0722 19:07:35.827489 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 describe service agnhost-primary'
  I0722 19:07:35.883253 21 builder.go:146] stderr: ""
  I0722 19:07:35.883319 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-4342\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.48\nIPs:                      10.152.183.48\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.183.162:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0722 19:07:35.888359 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 describe node ip-172-31-11-165'
  I0722 19:07:35.980219 21 builder.go:146] stderr: ""
  I0722 19:07:35.980560 21 builder.go:147] stdout: "Name:               ip-172-31-11-165\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-11-165\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 22 Jul 2025 18:24:37 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-11-165\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 22 Jul 2025 19:07:28 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 22 Jul 2025 18:35:28 +0000   Tue, 22 Jul 2025 18:35:28 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 22 Jul 2025 19:05:22 +0000   Tue, 22 Jul 2025 18:24:37 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 22 Jul 2025 19:05:22 +0000   Tue, 22 Jul 2025 18:24:37 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 22 Jul 2025 19:05:22 +0000   Tue, 22 Jul 2025 18:24:37 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 22 Jul 2025 19:05:22 +0000   Tue, 22 Jul 2025 18:25:37 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.11.165\n  Hostname:    ip-172-31-11-165\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967608Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865208Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2623191bc7fa04e19fe1d8c58e661f\n  System UUID:                ec262319-1bc7-fa04-e19f-e1d8c58e661f\n  Boot ID:                    6779518a-614f-447e-8a3c-5d18782e54e4\n  Kernel Version:             6.8.0-1031-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.32.7\n  Kube-Proxy Version:         v1.32.7\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-hwr5p                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         32m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-l9rjk    0 (0%)        0 (0%)      0 (0%)           0 (0%)         28m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 35m   kube-proxy       \n  Normal   Starting                 33m   kube-proxy       \n  Normal   Starting                 41m   kube-proxy       \n  Normal   Starting                 40m   kube-proxy       \n  Normal   Starting                 42m   kube-proxy       \n  Normal   Starting                 32m   kube-proxy       \n  Normal   Starting                 32m   kube-proxy       \n  Normal   Starting                 37m   kube-proxy       \n  Normal   Starting                 28m   kube-proxy       \n  Normal   Starting                 37m   kube-proxy       \n  Normal   Starting                 34m   kube-proxy       \n  Normal   Starting                 36m   kube-proxy       \n  Normal   Starting                 39m   kube-proxy       \n  Normal   Starting                 29m   kube-proxy       \n  Normal   Starting                 30m   kube-proxy       \n  Normal   Starting                 31m   kube-proxy       \n  Normal   Starting                 38m   kube-proxy       \n  Normal   RegisteredNode           42m   node-controller  Node ip-172-31-11-165 event: Registered Node ip-172-31-11-165 in Controller\n  Normal   NodeHasSufficientPID     42m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    42m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  42m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  42m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      42m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 42m   kubelet          Starting kubelet.\n  Normal   NodeReady                41m   kubelet          Node ip-172-31-11-165 status is now: NodeReady\n  Normal   RegisteredNode           41m   node-controller  Node ip-172-31-11-165 event: Registered Node ip-172-31-11-165 in Controller\n  Normal   NodeHasSufficientPID     41m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   Starting                 41m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      41m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  41m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  41m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    41m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  40m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  40m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 40m   kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    40m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     40m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      39m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 39m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     39m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    39m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  39m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  39m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    38m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 38m   kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  38m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  38m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     38m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   Starting                 37m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      37m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  37m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     37m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    37m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  37m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      37m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  37m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  37m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    37m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     37m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   Starting                 37m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  36m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     36m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    36m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  36m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      36m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 36m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      35m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 35m   kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  35m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    35m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     35m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  35m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   RegisteredNode           35m   node-controller  Node ip-172-31-11-165 event: Registered Node ip-172-31-11-165 in Controller\n  Normal   NodeHasSufficientPID     34m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  34m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   Starting                 34m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      34m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasNoDiskPressure    34m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  34m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      33m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     33m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    33m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  33m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  33m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 33m   kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    32m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     32m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  32m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  32m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      32m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 32m   kubelet          Starting kubelet.\n  Normal   Starting                 32m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      32m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  32m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  32m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    32m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     32m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   Starting                 31m   kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  31m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    31m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  31m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      31m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     31m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   Starting                 30m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      30m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  30m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  30m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    30m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     30m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  29m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    29m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     29m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  29m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   Starting                 29m   kubelet          Starting kubelet.\n  Normal   Starting                 28m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      28m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  28m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  28m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    28m   kubelet          Node ip-172-31-11-165 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     28m   kubelet          Node ip-172-31-11-165 status is now: NodeHasSufficientPID\n"
  I0722 19:07:35.980649 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-4342 describe namespace kubectl-4342'
  I0722 19:07:36.037238 21 builder.go:146] stderr: ""
  I0722 19:07:36.037281 21 builder.go:147] stdout: "Name:         kubectl-4342\nLabels:       e2e-framework=kubectl\n              e2e-run=fefde6c2-c539-4f8e-a452-a58c2541b59c\n              kubernetes.io/metadata.name=kubectl-4342\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0722 19:07:36.037412 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4342" for this suite. @ 07/22/25 19:07:36.041
• [2.548 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/22/25 19:07:36.05
  I0722 19:07:36.050027 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:07:36.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:36.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:36.064
  STEP: Creating a pod to test downward api env vars @ 07/22/25 19:07:36.068
  STEP: Saw pod success @ 07/22/25 19:07:38.153
  I0722 19:07:38.158332 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod downward-api-7c2e7ccb-e1b4-4fa7-ba45-c61b49cf758f container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 19:07:38.174
  I0722 19:07:38.196325 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7775" for this suite. @ 07/22/25 19:07:38.201
• [2.160 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/22/25 19:07:38.21
  I0722 19:07:38.210236 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:07:38.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:38.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:38.223
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 19:07:38.228
  STEP: Saw pod success @ 07/22/25 19:07:40.245
  I0722 19:07:40.248831 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-761deb60-82cc-464b-9e20-48d6cb3bfb78 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 19:07:40.259
  I0722 19:07:40.283209 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6371" for this suite. @ 07/22/25 19:07:40.286
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/22/25 19:07:40.293
  I0722 19:07:40.293655 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename events @ 07/22/25 19:07:40.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:40.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:40.312
  STEP: creating a test event @ 07/22/25 19:07:40.316
  STEP: listing events in all namespaces @ 07/22/25 19:07:40.321
  STEP: listing events in test namespace @ 07/22/25 19:07:40.331
  STEP: listing events with field selection filtering on source @ 07/22/25 19:07:40.335
  STEP: listing events with field selection filtering on reportingController @ 07/22/25 19:07:40.338
  STEP: getting the test event @ 07/22/25 19:07:40.342
  STEP: patching the test event @ 07/22/25 19:07:40.345
  STEP: getting the test event @ 07/22/25 19:07:40.356
  STEP: updating the test event @ 07/22/25 19:07:40.359
  STEP: getting the test event @ 07/22/25 19:07:40.369
  STEP: deleting the test event @ 07/22/25 19:07:40.372
  STEP: listing events in all namespaces @ 07/22/25 19:07:40.38
  STEP: listing events in test namespace @ 07/22/25 19:07:40.391
  I0722 19:07:40.396393 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8591" for this suite. @ 07/22/25 19:07:40.401
• [0.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/22/25 19:07:40.408
  I0722 19:07:40.408414 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 19:07:40.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:40.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:40.428
  STEP: Creating a pod to test env composition @ 07/22/25 19:07:40.431
  STEP: Saw pod success @ 07/22/25 19:07:44.458
  I0722 19:07:44.462198 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod var-expansion-96da13c1-bca8-4106-9dde-cd30f3a35cd9 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 19:07:44.468
  I0722 19:07:44.485178 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6046" for this suite. @ 07/22/25 19:07:44.489
• [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/22/25 19:07:44.496
  I0722 19:07:44.496158 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 19:07:44.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:44.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:44.515
  STEP: Creating a pod to test substitution in volume subpath @ 07/22/25 19:07:44.518
  STEP: Saw pod success @ 07/22/25 19:07:48.539
  I0722 19:07:48.543614 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod var-expansion-2ddaa7db-d7bb-4d16-b830-1e7ce821cacc container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 19:07:48.55
  I0722 19:07:48.568734 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2363" for this suite. @ 07/22/25 19:07:48.573
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/22/25 19:07:48.581
  I0722 19:07:48.581418 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:07:48.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:48.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:48.599
  STEP: Setting up server cert @ 07/22/25 19:07:48.621
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:07:48.876
  STEP: Deploying the webhook pod @ 07/22/25 19:07:48.883
  STEP: Wait for the deployment to be ready @ 07/22/25 19:07:48.901
  I0722 19:07:48.913995 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:07:50.928
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:07:50.939
  I0722 19:07:51.940287 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/22/25 19:07:51.95
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 19:07:51.964
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/22/25 19:07:51.969
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 19:07:51.983
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/22/25 19:07:51.995
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/22/25 19:07:52.003
  I0722 19:07:52.054354 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1338" for this suite. @ 07/22/25 19:07:52.058
  STEP: Destroying namespace "webhook-markers-3837" for this suite. @ 07/22/25 19:07:52.068
• [3.493 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/22/25 19:07:52.074
  I0722 19:07:52.074632 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 19:07:52.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:52.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:52.094
  I0722 19:07:56.119022 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8304" for this suite. @ 07/22/25 19:07:56.124
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/22/25 19:07:56.134
  I0722 19:07:56.134256 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 19:07:56.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:56.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:07:56.152
  STEP: Creating a test namespace @ 07/22/25 19:07:56.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:07:56.166
  STEP: Creating a pod in the namespace @ 07/22/25 19:07:56.176
  STEP: Waiting for the pod to have running status @ 07/22/25 19:07:56.187
  STEP: Deleting the namespace @ 07/22/25 19:07:58.199
  STEP: Waiting for the namespace to be removed. @ 07/22/25 19:07:58.207
  STEP: Recreating the namespace @ 07/22/25 19:08:09.212
  STEP: Verifying there are no pods in the namespace @ 07/22/25 19:08:09.227
  I0722 19:08:09.234981 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5577" for this suite. @ 07/22/25 19:08:09.239
  STEP: Destroying namespace "nsdeletetest-8896" for this suite. @ 07/22/25 19:08:09.248
  I0722 19:08:09.252677 21 framework.go:370] Namespace nsdeletetest-8896 was already deleted
  STEP: Destroying namespace "nsdeletetest-6056" for this suite. @ 07/22/25 19:08:09.252
• [13.125 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/22/25 19:08:09.259
  I0722 19:08:09.259713 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/22/25 19:08:09.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:09.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:09.276
  STEP: getting /apis @ 07/22/25 19:08:09.28
  STEP: getting /apis/storage.k8s.io @ 07/22/25 19:08:09.283
  STEP: getting /apis/storage.k8s.io/v1 @ 07/22/25 19:08:09.284
  STEP: creating @ 07/22/25 19:08:09.285
  STEP: watching @ 07/22/25 19:08:09.305
  I0722 19:08:09.305333 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/22/25 19:08:09.316
  STEP: listing in namespace @ 07/22/25 19:08:09.319
  STEP: listing across namespaces @ 07/22/25 19:08:09.322
  STEP: patching @ 07/22/25 19:08:09.326
  STEP: updating @ 07/22/25 19:08:09.331
  I0722 19:08:09.336201 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0722 19:08:09.336244 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/22/25 19:08:09.336
  STEP: deleting a collection @ 07/22/25 19:08:09.349
  I0722 19:08:09.367746 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6571" for this suite. @ 07/22/25 19:08:09.371
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/22/25 19:08:09.378
  I0722 19:08:09.378915 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 19:08:09.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:09.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:09.396
  I0722 19:08:09.400466 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  W0722 19:08:09.401031      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0041ad8d0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0722 19:08:11.937929      21 warnings.go:70] unknown field "alpha"
  W0722 19:08:11.937950      21 warnings.go:70] unknown field "beta"
  W0722 19:08:11.937954      21 warnings.go:70] unknown field "delta"
  W0722 19:08:11.937957      21 warnings.go:70] unknown field "epsilon"
  W0722 19:08:11.937960      21 warnings.go:70] unknown field "gamma"
  I0722 19:08:12.491147 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9695" for this suite. @ 07/22/25 19:08:12.497
• [3.125 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/22/25 19:08:12.504
  I0722 19:08:12.504304 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 19:08:12.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:12.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:12.523
  STEP: Performing setup for networking test in namespace pod-network-test-7256 @ 07/22/25 19:08:12.526
  STEP: creating a selector @ 07/22/25 19:08:12.526
  STEP: Creating the service pods in kubernetes @ 07/22/25 19:08:12.526
  I0722 19:08:12.526241 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/22/25 19:08:26.692
  I0722 19:08:28.732170 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0722 19:08:28.732208 21 utils.go:496] Going to poll 192.168.183.169 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0722 19:08:28.735889 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.183.169 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7256 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:08:28.735910 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:08:28.735951 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7256/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.183.169+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:08:29.774226 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0722 19:08:29.774264 21 utils.go:496] Going to poll 192.168.231.50 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0722 19:08:29.778581 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.231.50 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7256 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:08:29.778604 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:08:29.778645 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7256/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.231.50+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:08:30.816271 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0722 19:08:30.816315 21 utils.go:496] Going to poll 192.168.12.61 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0722 19:08:30.820981 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.12.61 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7256 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:08:30.821004 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:08:30.821072 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7256/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.12.61+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:08:31.857916 21 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0722 19:08:31.858087 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7256" for this suite. @ 07/22/25 19:08:31.863
• [19.369 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/22/25 19:08:31.873
  I0722 19:08:31.873624 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 19:08:31.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:31.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:31.888
  STEP: create the rc @ 07/22/25 19:08:31.892
  W0722 19:08:31.898174      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/22/25 19:08:36.903
  STEP: wait for all pods to be garbage collected @ 07/22/25 19:08:36.911
  STEP: Gathering metrics @ 07/22/25 19:08:41.921
  W0722 19:08:41.927214      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 19:08:41.927239 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 19:08:41.927408 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2601" for this suite. @ 07/22/25 19:08:41.931
• [10.064 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/22/25 19:08:41.937
  I0722 19:08:41.937472 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:08:41.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:41.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:41.956
  I0722 19:08:42.003093 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8706" for this suite. @ 07/22/25 19:08:42.032
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/22/25 19:08:42.039
  I0722 19:08:42.039534 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:08:42.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:42.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:42.055
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/22/25 19:08:42.059
  STEP: Saw pod success @ 07/22/25 19:08:46.086
  I0722 19:08:46.090849 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-6edb2159-80c7-4e56-b3d7-871a0d1a7586 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:08:46.096
  I0722 19:08:46.112747 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6497" for this suite. @ 07/22/25 19:08:46.116
• [4.086 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 07/22/25 19:08:46.125
  I0722 19:08:46.125208 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 19:08:46.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:46.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:46.143
  I0722 19:08:46.148033 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/22/25 19:08:47.396
  I0722 19:08:47.396157 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6653 --namespace=crd-publish-openapi-6653 create -f -'
  I0722 19:08:49.466204 21 builder.go:146] stderr: ""
  I0722 19:08:49.466242 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9859-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0722 19:08:49.466291 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6653 --namespace=crd-publish-openapi-6653 delete e2e-test-crd-publish-openapi-9859-crds test-cr'
  I0722 19:08:49.516891 21 builder.go:146] stderr: ""
  I0722 19:08:49.516938 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9859-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0722 19:08:49.516988 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6653 --namespace=crd-publish-openapi-6653 apply -f -'
  I0722 19:08:49.573655 21 builder.go:146] stderr: ""
  I0722 19:08:49.573687 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9859-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0722 19:08:49.573727 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6653 --namespace=crd-publish-openapi-6653 delete e2e-test-crd-publish-openapi-9859-crds test-cr'
  I0722 19:08:49.625755 21 builder.go:146] stderr: ""
  I0722 19:08:49.625805 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9859-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/22/25 19:08:49.625
  I0722 19:08:49.625871 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-6653 explain e2e-test-crd-publish-openapi-9859-crds'
  I0722 19:08:49.666387 21 builder.go:146] stderr: ""
  I0722 19:08:49.666439 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9859-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0722 19:08:51.017504 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6653" for this suite. @ 07/22/25 19:08:51.023
• [4.906 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/22/25 19:08:51.031
  I0722 19:08:51.031364 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:08:51.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:51.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:51.045
  STEP: creating the pod @ 07/22/25 19:08:51.046
  STEP: submitting the pod to kubernetes @ 07/22/25 19:08:51.046
  STEP: verifying QOS class is set on the pod @ 07/22/25 19:08:51.058
  I0722 19:08:51.060755 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-247" for this suite. @ 07/22/25 19:08:51.124
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/22/25 19:08:51.132
  I0722 19:08:51.133008 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename podtemplate @ 07/22/25 19:08:51.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:51.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:51.148
  STEP: Create a pod template @ 07/22/25 19:08:51.15
  STEP: Replace a pod template @ 07/22/25 19:08:51.156
  I0722 19:08:51.164190 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0722 19:08:51.164278 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1229" for this suite. @ 07/22/25 19:08:51.225
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/22/25 19:08:51.234
  I0722 19:08:51.234091 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:08:51.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:51.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:51.249
  STEP: creating the pod @ 07/22/25 19:08:51.251
  STEP: submitting the pod to kubernetes @ 07/22/25 19:08:51.251
  W0722 19:08:51.261232      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 07/22/25 19:08:53.272
  STEP: updating the pod @ 07/22/25 19:08:53.276
  I0722 19:08:53.790855 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-a846ab0a-22b2-4e0a-aea4-99ca2ad3c5c3"
  I0722 19:08:57.805948 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8980" for this suite. @ 07/22/25 19:08:57.809
• [6.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/22/25 19:08:57.817
  I0722 19:08:57.817025 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 19:08:57.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:08:57.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:08:57.832
  STEP: Performing setup for networking test in namespace pod-network-test-5862 @ 07/22/25 19:08:57.835
  STEP: creating a selector @ 07/22/25 19:08:57.835
  STEP: Creating the service pods in kubernetes @ 07/22/25 19:08:57.835
  I0722 19:08:57.835913 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/22/25 19:09:11.992
  I0722 19:09:14.020544 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0722 19:09:14.020583 21 utils.go:496] Going to poll 192.168.183.174 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0722 19:09:14.023903 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.183.174:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5862 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:09:14.023922 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:09:14.023963 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5862/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.183.174%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:09:14.061531 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0722 19:09:14.061583 21 utils.go:496] Going to poll 192.168.231.51 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0722 19:09:14.065847 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.231.51:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5862 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:09:14.065866 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:09:14.065917 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5862/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.231.51%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:09:14.105127 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0722 19:09:14.105159 21 utils.go:496] Going to poll 192.168.12.2 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0722 19:09:14.108945 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.12.2:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5862 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:09:14.108963 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:09:14.109001 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5862/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.12.2%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:09:14.143121 21 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0722 19:09:14.143267 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5862" for this suite. @ 07/22/25 19:09:14.147
• [16.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/22/25 19:09:14.153
  I0722 19:09:14.153807 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:09:14.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:14.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:14.218
  STEP: Setting up server cert @ 07/22/25 19:09:14.236
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:09:14.508
  STEP: Deploying the webhook pod @ 07/22/25 19:09:14.514
  STEP: Wait for the deployment to be ready @ 07/22/25 19:09:14.526
  I0722 19:09:14.535542 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:09:16.548
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:09:16.559
  I0722 19:09:17.559560 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/22/25 19:09:17.568
  STEP: create a pod that should be updated by the webhook @ 07/22/25 19:09:17.581
  I0722 19:09:17.641668 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8731" for this suite. @ 07/22/25 19:09:17.646
  STEP: Destroying namespace "webhook-markers-1202" for this suite. @ 07/22/25 19:09:17.653
• [3.507 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/22/25 19:09:17.66
  I0722 19:09:17.661006 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:09:17.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:17.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:17.674
  STEP: Creating projection with secret that has name projected-secret-test-map-84d97441-266d-414b-b2a6-787993a9b6fc @ 07/22/25 19:09:17.675
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:09:17.68
  STEP: Saw pod success @ 07/22/25 19:09:21.707
  I0722 19:09:21.710416 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-projected-secrets-746b5905-e692-4549-8965-e451538999da container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:09:21.72
  I0722 19:09:21.737583 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6336" for this suite. @ 07/22/25 19:09:21.742
• [4.089 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/22/25 19:09:21.749
  I0722 19:09:21.749617 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/22/25 19:09:21.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:21.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:21.764
  STEP: creating @ 07/22/25 19:09:21.766
  STEP: getting @ 07/22/25 19:09:21.786
  STEP: listing in namespace @ 07/22/25 19:09:21.789
  STEP: patching @ 07/22/25 19:09:21.793
  STEP: deleting @ 07/22/25 19:09:21.8
  I0722 19:09:21.814171 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6086" for this suite. @ 07/22/25 19:09:21.842
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/22/25 19:09:21.85
  I0722 19:09:21.850131 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 19:09:21.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:21.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:21.865
  STEP: getting /apis @ 07/22/25 19:09:21.866
  STEP: getting /apis/node.k8s.io @ 07/22/25 19:09:21.869
  STEP: getting /apis/node.k8s.io/v1 @ 07/22/25 19:09:21.869
  STEP: creating @ 07/22/25 19:09:21.87
  STEP: watching @ 07/22/25 19:09:21.883
  I0722 19:09:21.883653 21 runtimeclass.go:275] starting watch
  STEP: getting @ 07/22/25 19:09:21.893
  STEP: listing @ 07/22/25 19:09:21.895
  STEP: patching @ 07/22/25 19:09:21.898
  STEP: updating @ 07/22/25 19:09:21.904
  I0722 19:09:21.908629 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 07/22/25 19:09:21.908
  STEP: deleting a collection @ 07/22/25 19:09:21.921
  I0722 19:09:21.936539 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4124" for this suite. @ 07/22/25 19:09:21.942
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 07/22/25 19:09:21.95
  I0722 19:09:21.950524 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 19:09:21.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:21.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:21.968
  I0722 19:09:21.971870 21 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-7024"
  I0722 19:09:21.979817 21 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-7024"
  STEP: waiting for a new root ca configmap created @ 07/22/25 19:09:22.48
  I0722 19:09:22.483656 21 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-7024"
  I0722 19:09:22.490563 21 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-7024"
  STEP: waiting for the root ca configmap reconciled @ 07/22/25 19:09:22.991
  I0722 19:09:22.995671 21 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-7024"
  I0722 19:09:22.995782 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7024" for this suite. @ 07/22/25 19:09:23
• [1.057 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 07/22/25 19:09:23.007
  I0722 19:09:23.007819 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:09:23.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:23.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:23.022
  STEP: Counting existing ResourceQuota @ 07/22/25 19:09:23.023
  STEP: Creating a ResourceQuota @ 07/22/25 19:09:28.029
  STEP: Ensuring resource quota status is calculated @ 07/22/25 19:09:28.035
  STEP: Creating a Pod that fits quota @ 07/22/25 19:09:30.04
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/22/25 19:09:30.06
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/22/25 19:09:32.064
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/22/25 19:09:32.066
  STEP: Ensuring a pod cannot update its resource requirements @ 07/22/25 19:09:32.068
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/22/25 19:09:32.073
  STEP: Deleting the pod @ 07/22/25 19:09:34.077
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 19:09:34.093
  I0722 19:09:36.098581 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-341" for this suite. @ 07/22/25 19:09:36.101
• [13.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 07/22/25 19:09:36.108
  I0722 19:09:36.108883 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:09:36.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:09:36.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:09:36.124
  I0722 19:10:00.201853 21 container_probe.go:92] Container started at 2025-07-22 19:09:36 +0000 UTC, pod became ready at 2025-07-22 19:09:58 +0000 UTC
  I0722 19:10:00.201970 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2128" for this suite. @ 07/22/25 19:10:00.206
• [24.104 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 07/22/25 19:10:00.213
  I0722 19:10:00.213062 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 19:10:00.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:10:00.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:10:00.229
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/22/25 19:10:00.231
  I0722 19:10:00.231472 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 19:10:01.436880 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 19:10:06.383926 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4620" for this suite. @ 07/22/25 19:10:06.391
• [6.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/22/25 19:10:06.399
  I0722 19:10:06.399245 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:10:06.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:10:06.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:10:06.414
  STEP: Setting up server cert @ 07/22/25 19:10:06.433
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:10:06.886
  STEP: Deploying the webhook pod @ 07/22/25 19:10:06.894
  STEP: Wait for the deployment to be ready @ 07/22/25 19:10:06.91
  I0722 19:10:06.921722 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:10:08.935
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:10:08.946
  I0722 19:10:09.947067 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 19:10:09.955975 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-346-crds.webhook.example.com via the AdmissionRegistration API @ 07/22/25 19:10:10.467
  STEP: Creating a custom resource while v1 is storage version @ 07/22/25 19:10:10.481
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/22/25 19:10:12.51
  STEP: Patching the custom resource while v2 is storage version @ 07/22/25 19:10:12.523
  I0722 19:10:13.085853 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2370" for this suite. @ 07/22/25 19:10:13.089
  STEP: Destroying namespace "webhook-markers-3870" for this suite. @ 07/22/25 19:10:13.096
• [6.703 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/22/25 19:10:13.102
  I0722 19:10:13.102207 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:10:13.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:10:13.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:10:13.117
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 19:10:13.119
  STEP: Saw pod success @ 07/22/25 19:10:17.14
  I0722 19:10:17.143772 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-20552225-c611-42bb-a5d4-4792645e87f2 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 19:10:17.157
  I0722 19:10:17.171516 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-275" for this suite. @ 07/22/25 19:10:17.175
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/22/25 19:10:17.181
  I0722 19:10:17.181940 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 19:10:17.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:10:17.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:10:17.196
  I0722 19:10:19.225296 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2781" for this suite. @ 07/22/25 19:10:19.229
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/22/25 19:10:19.237
  I0722 19:10:19.237070 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename aggregator @ 07/22/25 19:10:19.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:10:19.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:10:19.249
  I0722 19:10:19.252430 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Registering the sample API server. @ 07/22/25 19:10:19.253
  I0722 19:10:19.621655 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0722 19:10:19.649435 21 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0722 19:10:21.695308 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:23.701113 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:25.699362 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:27.701370 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:29.700113 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:31.700481 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:33.700846 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:35.699681 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:37.700086 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:39.701839 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0722 19:10:41.816003 21 aggregator.go:755] Waited 111.229194ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/22/25 19:10:41.84
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/22/25 19:10:41.842
  STEP: List APIServices @ 07/22/25 19:10:41.85
  I0722 19:10:41.854464 21 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/22/25 19:10:41.854
  I0722 19:10:41.866602 21 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/22/25 19:10:41.866
  I0722 19:10:41.874595 21 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 22, 19, 10, 41, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/22/25 19:10:41.874
  I0722 19:10:41.878009 21 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-22 19:10:41 +0000 UTC Passed all checks passed}
  I0722 19:10:41.878034 21 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 19:10:41.878042 21 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/22/25 19:10:41.878
  I0722 19:10:41.887503 21 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-722319906" @ 07/22/25 19:10:41.887
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/22/25 19:10:41.894
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/22/25 19:10:41.898
  STEP: Patch APIService Status @ 07/22/25 19:10:41.901
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/22/25 19:10:41.91
  I0722 19:10:41.913652 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-22 19:10:41 +0000 UTC Passed all checks passed}
  I0722 19:10:41.913675 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 19:10:41.913686 21 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0722 19:10:41.913717 21 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/22/25 19:10:41.913
  STEP: Confirm that the generated APIService has been deleted @ 07/22/25 19:10:41.922
  I0722 19:10:41.922406 21 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0722 19:10:41.925011 21 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0722 19:10:41.925031 21 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0722 19:10:42.012124 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7134" for this suite. @ 07/22/25 19:10:42.015
• [22.784 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 07/22/25 19:10:42.021
  I0722 19:10:42.021594 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 19:10:42.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:10:42.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:10:42.035
  STEP: Creating service test in namespace statefulset-3568 @ 07/22/25 19:10:42.037
  STEP: Creating statefulset ss in namespace statefulset-3568 @ 07/22/25 19:10:42.046
  I0722 19:10:42.055488 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0722 19:10:52.060413 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/22/25 19:10:52.066
  STEP: Getting /status @ 07/22/25 19:10:52.074
  I0722 19:10:52.077890 21 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/22/25 19:10:52.077
  I0722 19:10:52.088071 21 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/22/25 19:10:52.088
  I0722 19:10:52.089108 21 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0722 19:10:52.089130 21 statefulset.go:1114] Found Statefulset ss in namespace statefulset-3568 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 19:10:52.089141 21 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/22/25 19:10:52.089
  I0722 19:10:52.089165 21 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0722 19:10:52.096448 21 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/22/25 19:10:52.096
  I0722 19:10:52.097399 21 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0722 19:10:52.097420 21 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-3568 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0722 19:10:52.097504 21 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0722 19:10:52.097609 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3568
  I0722 19:10:52.101073 21 rest.go:152] Scaling statefulset ss to 0
  I0722 19:11:02.113154 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 19:11:02.116254 21 rest.go:90] Deleting statefulset ss
  I0722 19:11:02.128359 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3568" for this suite. @ 07/22/25 19:11:02.132
• [20.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/22/25 19:11:02.14
  I0722 19:11:02.140280 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:11:02.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:02.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:02.151
  STEP: Setting up server cert @ 07/22/25 19:11:02.169
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:11:02.463
  STEP: Deploying the webhook pod @ 07/22/25 19:11:02.469
  STEP: Wait for the deployment to be ready @ 07/22/25 19:11:02.481
  I0722 19:11:02.489740 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:11:04.503
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:11:04.512
  I0722 19:11:05.512940 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/22/25 19:11:05.521
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/22/25 19:11:05.536
  I0722 19:11:05.536100 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 19:11:05.583804 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8448" for this suite. @ 07/22/25 19:11:05.588
  STEP: Destroying namespace "webhook-markers-4508" for this suite. @ 07/22/25 19:11:05.595
• [3.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 07/22/25 19:11:05.601
  I0722 19:11:05.601864 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:11:05.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:05.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:05.615
  I0722 19:11:05.619231 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1255" for this suite. @ 07/22/25 19:11:05.69
• [0.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/22/25 19:11:05.696
  I0722 19:11:05.696614 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:11:05.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:05.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:05.709
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/22/25 19:11:05.711
  STEP: Saw pod success @ 07/22/25 19:11:07.733
  I0722 19:11:07.735931 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-466713a5-26a4-4ab9-8604-24623af12b54 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:11:07.743
  I0722 19:11:07.759634 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4028" for this suite. @ 07/22/25 19:11:07.762
• [2.072 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/22/25 19:11:07.768
  I0722 19:11:07.768332 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:11:07.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:07.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:07.782
  STEP: creating a ConfigMap @ 07/22/25 19:11:07.784
  STEP: fetching the ConfigMap @ 07/22/25 19:11:07.789
  STEP: patching the ConfigMap @ 07/22/25 19:11:07.792
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/22/25 19:11:07.796
  STEP: deleting the ConfigMap by collection with a label selector @ 07/22/25 19:11:07.799
  STEP: listing all ConfigMaps in test namespace @ 07/22/25 19:11:07.809
  I0722 19:11:07.812464 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6307" for this suite. @ 07/22/25 19:11:07.865
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/22/25 19:11:07.872
  I0722 19:11:07.872152 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:11:07.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:07.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:07.888
  STEP: Creating configMap configmap-7951/configmap-test-b395a0d9-0d54-4d65-9a9b-11e528e8c70e @ 07/22/25 19:11:07.89
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:11:07.895
  STEP: Saw pod success @ 07/22/25 19:11:11.921
  I0722 19:11:11.924609 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-72e3ec47-4ded-4a90-9965-503e079cfc9e container env-test: <nil>
  STEP: delete the pod @ 07/22/25 19:11:11.932
  I0722 19:11:11.949237 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7951" for this suite. @ 07/22/25 19:11:11.953
• [4.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 07/22/25 19:11:11.959
  I0722 19:11:11.959682 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:11:11.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:11.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:11.974
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 19:11:11.975
  I0722 19:11:11.975791 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9191 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0722 19:11:12.027463 21 builder.go:146] stderr: ""
  I0722 19:11:12.027515 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/22/25 19:11:12.027
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/22/25 19:11:17.079
  I0722 19:11:17.079265 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9191 get pod e2e-test-httpd-pod -o json'
  I0722 19:11:17.125197 21 builder.go:146] stderr: ""
  I0722 19:11:17.125361 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-07-22T19:11:12Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9191\",\n        \"resourceVersion\": \"16865\",\n        \"uid\": \"169ede87-d45e-4d5c-a954-87b3f7701e6c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dcxjf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-31-147\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dcxjf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T19:11:13Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T19:11:12Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T19:11:13Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T19:11:13Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-22T19:11:12Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://c67d907e91255eae3f7257f62b1f56cd96fda6fa77e835dd5c1c99e4bb3fb4a3\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-22T19:11:12Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dcxjf\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.31.147\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.31.147\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.183.183\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.183.183\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-22T19:11:12Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/22/25 19:11:17.125
  I0722 19:11:17.125507 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9191 replace -f -'
  I0722 19:11:17.214233 21 builder.go:146] stderr: ""
  I0722 19:11:17.214274 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/22/25 19:11:17.214
  I0722 19:11:17.217458 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9191 delete pods e2e-test-httpd-pod'
  I0722 19:11:19.389346 21 builder.go:146] stderr: ""
  I0722 19:11:19.389383 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0722 19:11:19.389503 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9191" for this suite. @ 07/22/25 19:11:19.394
• [7.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/22/25 19:11:19.4
  I0722 19:11:19.400400 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:11:19.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:19.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:19.415
  STEP: Setting up server cert @ 07/22/25 19:11:19.431
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:11:19.65
  STEP: Deploying the webhook pod @ 07/22/25 19:11:19.656
  STEP: Wait for the deployment to be ready @ 07/22/25 19:11:19.667
  I0722 19:11:19.676353 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:11:21.689
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:11:21.699
  I0722 19:11:22.700183 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/22/25 19:11:22.709
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/22/25 19:11:22.71
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/22/25 19:11:22.71
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/22/25 19:11:22.71
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/22/25 19:11:22.71
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/22/25 19:11:22.71
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/22/25 19:11:22.711
  I0722 19:11:22.745081 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9139" for this suite. @ 07/22/25 19:11:22.748
  STEP: Destroying namespace "webhook-markers-1307" for this suite. @ 07/22/25 19:11:22.756
• [3.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 07/22/25 19:11:22.763
  I0722 19:11:22.763168 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:11:22.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:22.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:22.775
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 19:11:22.777
  I0722 19:11:22.777492 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9355 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0722 19:11:22.827559 21 builder.go:146] stderr: ""
  I0722 19:11:22.827589 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/22/25 19:11:22.827
  I0722 19:11:22.832197 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9355 delete pods e2e-test-httpd-pod'
  I0722 19:11:24.406631 21 builder.go:146] stderr: ""
  I0722 19:11:24.406671 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0722 19:11:24.406812 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9355" for this suite. @ 07/22/25 19:11:24.411
• [1.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/22/25 19:11:24.417
  I0722 19:11:24.417451 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename events @ 07/22/25 19:11:24.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:24.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:24.432
  STEP: creating a test event @ 07/22/25 19:11:24.434
  STEP: listing all events in all namespaces @ 07/22/25 19:11:24.439
  STEP: patching the test event @ 07/22/25 19:11:24.449
  STEP: fetching the test event @ 07/22/25 19:11:24.455
  STEP: updating the test event @ 07/22/25 19:11:24.458
  STEP: getting the test event @ 07/22/25 19:11:24.47
  STEP: deleting the test event @ 07/22/25 19:11:24.472
  STEP: listing all events in all namespaces @ 07/22/25 19:11:24.48
  I0722 19:11:24.491515 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8572" for this suite. @ 07/22/25 19:11:24.512
• [0.102 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/22/25 19:11:24.519
  I0722 19:11:24.519473 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 19:11:24.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:24.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:24.536
  STEP: create the deployment @ 07/22/25 19:11:24.538
  W0722 19:11:24.543131      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/22/25 19:11:24.543
  STEP: delete the deployment @ 07/22/25 19:11:25.051
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/22/25 19:11:25.06
  STEP: Gathering metrics @ 07/22/25 19:11:25.577
  W0722 19:11:25.581691      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 19:11:25.581718 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 19:11:25.581851 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2972" for this suite. @ 07/22/25 19:11:25.585
• [1.073 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 07/22/25 19:11:25.592
  I0722 19:11:25.592419 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 19:11:25.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:25.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:25.605
  I0722 19:11:27.623509 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7925" for this suite. @ 07/22/25 19:11:27.627
• [2.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 07/22/25 19:11:27.634
  I0722 19:11:27.634258 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename security-context @ 07/22/25 19:11:27.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:27.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:27.648
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/22/25 19:11:27.65
  STEP: Saw pod success @ 07/22/25 19:11:29.666
  I0722 19:11:29.669979 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod security-context-19e29f36-33a5-4b6a-b98e-33a21cc9982d container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:11:29.676
  I0722 19:11:29.694737 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3790" for this suite. @ 07/22/25 19:11:29.697
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/22/25 19:11:29.703
  I0722 19:11:29.703904 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 19:11:29.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:29.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:29.718
  STEP: Creating simple DaemonSet "daemon-set" @ 07/22/25 19:11:29.808
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 19:11:29.816
  I0722 19:11:29.899204 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:29.899238 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:29.902990 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:11:29.903013 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:11:30.820616 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:30.820753 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:30.823636 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 19:11:30.823668 21 fixtures.go:131] Node ip-172-31-7-234 is running 0 daemon pod, expected 1
  I0722 19:11:31.822248 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:31.822291 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:31.826300 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 19:11:31.826319 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/22/25 19:11:31.829
  I0722 19:11:31.922830 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:31.922864 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:31.928183 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 19:11:31.928220 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:11:32.845609 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:32.845645 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:32.849553 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 19:11:32.849571 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:11:33.845672 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:33.845706 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:11:33.849293 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 19:11:33.849309 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 19:11:33.852
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1815, will wait for the garbage collector to delete the pods @ 07/22/25 19:11:33.852
  I0722 19:11:33.914095 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.927213ms
  I0722 19:11:34.014471 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.370631ms
  I0722 19:11:35.518377 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:11:35.518408 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 19:11:35.522797 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17293"},"items":null}

  I0722 19:11:35.526196 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17293"},"items":null}

  I0722 19:11:35.542282 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1815" for this suite. @ 07/22/25 19:11:35.547
• [5.853 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/22/25 19:11:35.557
  I0722 19:11:35.557444 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:11:35.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:35.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:35.574
  STEP: Creating Pod @ 07/22/25 19:11:35.577
  STEP: Reading file content from the nginx-container @ 07/22/25 19:11:37.602
  I0722 19:11:37.602448 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5368 PodName:pod-sharedvolume-43af44af-f9e7-46c9-a3f3-30f71d7e0b66 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:11:37.602463 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:11:37.602494 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-5368/pods/pod-sharedvolume-43af44af-f9e7-46c9-a3f3-30f71d7e0b66/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0722 19:11:37.638992 21 exec_util.go:108] Exec stderr: ""
  I0722 19:11:37.639165 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5368" for this suite. @ 07/22/25 19:11:37.643
• [2.093 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/22/25 19:11:37.65
  I0722 19:11:37.650616 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 19:11:37.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:37.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:37.665
  STEP: Creating a cronjob @ 07/22/25 19:11:37.667
  STEP: creating @ 07/22/25 19:11:37.667
  STEP: getting @ 07/22/25 19:11:37.671
  STEP: listing @ 07/22/25 19:11:37.674
  STEP: watching @ 07/22/25 19:11:37.68
  I0722 19:11:37.680756 21 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/22/25 19:11:37.681
  STEP: cluster-wide watching @ 07/22/25 19:11:37.683
  I0722 19:11:37.683714 21 cronjob.go:407] starting watch
  STEP: patching @ 07/22/25 19:11:37.684
  STEP: updating @ 07/22/25 19:11:37.691
  I0722 19:11:37.699351 21 cronjob.go:431] waiting for watch events with expected annotations
  I0722 19:11:37.699374 21 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/22/25 19:11:37.699
  STEP: updating /status @ 07/22/25 19:11:37.706
  STEP: get /status @ 07/22/25 19:11:37.712
  STEP: deleting @ 07/22/25 19:11:37.715
  STEP: deleting a collection @ 07/22/25 19:11:37.729
  I0722 19:11:37.739421 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4701" for this suite. @ 07/22/25 19:11:37.744
• [0.100 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/22/25 19:11:37.751
  I0722 19:11:37.751081 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/22/25 19:11:37.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:37.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:37.765
  STEP: Cleaning up the secret @ 07/22/25 19:11:39.8
  STEP: Cleaning up the configmap @ 07/22/25 19:11:39.808
  STEP: Cleaning up the pod @ 07/22/25 19:11:39.814
  I0722 19:11:39.827998 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2166" for this suite. @ 07/22/25 19:11:39.831
• [2.089 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/22/25 19:11:39.839
  I0722 19:11:39.839697 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 19:11:39.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:39.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:39.855
  I0722 19:11:39.857579 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 19:11:40.394604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-898" for this suite. @ 07/22/25 19:11:40.402
• [0.571 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/22/25 19:11:40.41
  I0722 19:11:40.410552 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:11:40.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:40.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:40.421
  STEP: Creating secret with name secret-test-b74b1e0e-cb30-4ca1-9fb1-d19f7d4fae14 @ 07/22/25 19:11:40.423
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:11:40.427
  STEP: Saw pod success @ 07/22/25 19:11:44.449
  I0722 19:11:44.452694 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-secrets-fa691d86-05ec-4a2f-b75b-b893664ca748 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:11:44.462
  I0722 19:11:44.479669 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-234" for this suite. @ 07/22/25 19:11:44.483
• [4.080 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/22/25 19:11:44.49
  I0722 19:11:44.490505 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 19:11:44.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:44.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:44.504
  STEP: create the deployment @ 07/22/25 19:11:44.506
  W0722 19:11:44.511229      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/22/25 19:11:44.511
  STEP: delete the deployment @ 07/22/25 19:11:45.017
  STEP: wait for all rs to be garbage collected @ 07/22/25 19:11:45.024
  STEP: expected 0 pods, got 2 pods @ 07/22/25 19:11:45.028
  STEP: Gathering metrics @ 07/22/25 19:11:45.538
  W0722 19:11:45.542748      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 19:11:45.542803 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 19:11:45.543006 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5683" for this suite. @ 07/22/25 19:11:45.547
• [1.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/22/25 19:11:45.556
  I0722 19:11:45.556449 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 19:11:45.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:45.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:45.569
  STEP: creating a Namespace @ 07/22/25 19:11:45.574
  STEP: patching the Namespace @ 07/22/25 19:11:45.589
  STEP: get the Namespace and ensuring it has the label @ 07/22/25 19:11:45.594
  I0722 19:11:45.596333 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4043" for this suite. @ 07/22/25 19:11:45.648
  STEP: Destroying namespace "nspatchtest-421adbca-36d3-4479-a2bb-79a557028f2f-8242" for this suite. @ 07/22/25 19:11:45.66
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/22/25 19:11:45.666
  I0722 19:11:45.666113 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 19:11:45.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:45.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:45.68
  STEP: Looking for a node to schedule job pod @ 07/22/25 19:11:45.682
  STEP: Creating a job @ 07/22/25 19:11:45.749
  STEP: Ensuring job fails @ 07/22/25 19:11:45.758
  I0722 19:11:49.771781 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-810" for this suite. @ 07/22/25 19:11:49.776
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/22/25 19:11:49.785
  I0722 19:11:49.785179 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:11:49.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:49.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:49.798
  STEP: Setting up server cert @ 07/22/25 19:11:49.815
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:11:49.975
  STEP: Deploying the webhook pod @ 07/22/25 19:11:49.981
  STEP: Wait for the deployment to be ready @ 07/22/25 19:11:49.995
  I0722 19:11:50.002884 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0722 19:11:52.014491 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 22, 19, 11, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 11, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 19, 11, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 19, 11, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/22/25 19:11:54.019
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:11:54.03
  I0722 19:11:55.030786 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 19:11:55.038038 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3345-crds.webhook.example.com via the AdmissionRegistration API @ 07/22/25 19:11:55.549
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/22/25 19:11:55.562
  I0722 19:11:58.150257 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6618" for this suite. @ 07/22/25 19:11:58.154
  STEP: Destroying namespace "webhook-markers-1477" for this suite. @ 07/22/25 19:11:58.161
• [8.382 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/22/25 19:11:58.166
  I0722 19:11:58.167003 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename apf @ 07/22/25 19:11:58.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:58.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:58.181
  STEP: getting /apis @ 07/22/25 19:11:58.183
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/22/25 19:11:58.185
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/22/25 19:11:58.186
  STEP: creating @ 07/22/25 19:11:58.187
  STEP: getting @ 07/22/25 19:11:58.205
  STEP: listing @ 07/22/25 19:11:58.208
  STEP: watching @ 07/22/25 19:11:58.211
  I0722 19:11:58.211024 21 flowcontrol.go:394] starting watch
  STEP: patching @ 07/22/25 19:11:58.211
  STEP: updating @ 07/22/25 19:11:58.222
  I0722 19:11:58.230301 21 flowcontrol.go:422] waiting for watch events with expected annotations
  I0722 19:11:58.230332 21 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/22/25 19:11:58.23
  STEP: patching /status @ 07/22/25 19:11:58.232
  STEP: updating /status @ 07/22/25 19:11:58.239
  STEP: deleting @ 07/22/25 19:11:58.27
  STEP: deleting a collection @ 07/22/25 19:11:58.283
  I0722 19:11:58.302293 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9749" for this suite. @ 07/22/25 19:11:58.305
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/22/25 19:11:58.312
  I0722 19:11:58.312165 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 19:11:58.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:58.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:11:58.329
  STEP: Creating a test namespace @ 07/22/25 19:11:58.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:11:58.341
  STEP: Creating a service in the namespace @ 07/22/25 19:11:58.343
  STEP: Deleting the namespace @ 07/22/25 19:11:58.355
  STEP: Waiting for the namespace to be removed. @ 07/22/25 19:11:58.363
  STEP: Recreating the namespace @ 07/22/25 19:12:05.366
  STEP: Verifying there is no service in the namespace @ 07/22/25 19:12:05.378
  I0722 19:12:05.381184 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4324" for this suite. @ 07/22/25 19:12:05.385
  STEP: Destroying namespace "nsdeletetest-8503" for this suite. @ 07/22/25 19:12:05.392
  I0722 19:12:05.395601 21 framework.go:370] Namespace nsdeletetest-8503 was already deleted
  STEP: Destroying namespace "nsdeletetest-5366" for this suite. @ 07/22/25 19:12:05.395
• [7.089 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 07/22/25 19:12:05.401
  I0722 19:12:05.401543 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:12:05.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:12:05.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:12:05.415
  STEP: Creating a ResourceQuota @ 07/22/25 19:12:05.417
  STEP: Getting a ResourceQuota @ 07/22/25 19:12:05.421
  STEP: Updating a ResourceQuota @ 07/22/25 19:12:05.424
  STEP: Verifying a ResourceQuota was modified @ 07/22/25 19:12:05.434
  STEP: Deleting a ResourceQuota @ 07/22/25 19:12:05.439
  STEP: Verifying the deleted ResourceQuota @ 07/22/25 19:12:05.444
  I0722 19:12:05.447608 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7684" for this suite. @ 07/22/25 19:12:05.487
• [0.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 07/22/25 19:12:05.493
  I0722 19:12:05.493774 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 19:12:05.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:12:05.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:12:05.508
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/22/25 19:12:05.509
  I0722 19:12:05.520353 21 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9346  3d7c2b9f-227a-4746-b953-9864f2b64c17 17863 0 2025-07-22 19:12:05 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-22 19:12:05 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4g859,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4g859,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/22/25 19:12:07.527
  I0722 19:12:07.528016 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9346 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:12:07.528034 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:12:07.528092 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9346/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/22/25 19:12:07.575
  I0722 19:12:07.575961 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9346 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:12:07.575980 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:12:07.576033 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9346/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0722 19:12:07.617917 21 dns.go:450] Deleting pod test-dns-nameservers...
  I0722 19:12:07.629091 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9346" for this suite. @ 07/22/25 19:12:07.634
• [2.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 07/22/25 19:12:07.641
  I0722 19:12:07.641797 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 19:12:07.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:12:07.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:12:07.659
  I0722 19:12:07.675693 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 19:13:07.681617 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/22/25 19:13:07.686
  STEP: Adding a custom resource @ 07/22/25 19:13:07.686
  I0722 19:13:07.706275 21 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0722 19:13:07.714092 21 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/22/25 19:13:07.714
  I0722 19:13:07.726910 21 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0722 19:13:07.733906 21 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/22/25 19:13:07.733
  I0722 19:13:07.752828 21 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0722 19:13:07.761695 21 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/22/25 19:13:07.761
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/22/25 19:13:09.786
  STEP: Removing a custom resource @ 07/22/25 19:13:13.844
  STEP: Removing a custom resource @ 07/22/25 19:13:13.854
  STEP: Removing a custom resource @ 07/22/25 19:13:13.864
  I0722 19:13:13.875758 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1465" for this suite. @ 07/22/25 19:13:13.878
• [66.246 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/22/25 19:13:13.887
  I0722 19:13:13.887898 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:13:13.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:13:13.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:13:13.904
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/22/25 19:13:13.905
  STEP: Saw pod success @ 07/22/25 19:13:15.919
  I0722 19:13:15.923129 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-caa22291-149d-4ac8-9b21-bedf9a1ee843 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:13:15.935
  I0722 19:13:15.951993 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2477" for this suite. @ 07/22/25 19:13:15.956
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/22/25 19:13:15.963
  I0722 19:13:15.963834 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename containers @ 07/22/25 19:13:15.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:13:15.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:13:15.977
  STEP: Creating a pod to test override arguments @ 07/22/25 19:13:15.979
  STEP: Saw pod success @ 07/22/25 19:13:17.995
  I0722 19:13:17.998452 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod client-containers-2e575602-90f3-4108-904f-410e5392fffc container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:13:18.006
  I0722 19:13:18.026975 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6192" for this suite. @ 07/22/25 19:13:18.03
• [2.073 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/22/25 19:13:18.036
  I0722 19:13:18.036568 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 19:13:18.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:13:18.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:13:18.051
  I0722 19:13:18.052834 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0722 19:13:18.058217 21 deployment.go:1200] Waiting for observed generation 1
  I0722 19:13:20.065196 21 deployment.go:1205] Waiting for all required pods to come up
  I0722 19:13:20.068739 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/22/25 19:13:20.068
  I0722 19:13:20.068816 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0722 19:13:20.074161 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0722 19:13:20.083688 21 deployment.go:314] Updating deployment webserver-deployment
  I0722 19:13:20.083713 21 deployment.go:1224] Waiting for observed generation 2
  I0722 19:13:22.090728 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0722 19:13:22.094436 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0722 19:13:22.096589 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0722 19:13:22.106520 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0722 19:13:22.106548 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0722 19:13:22.109691 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0722 19:13:22.115255 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0722 19:13:22.115274 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0722 19:13:22.124026 21 deployment.go:314] Updating deployment webserver-deployment
  I0722 19:13:22.124086 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0722 19:13:22.132578 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0722 19:13:22.135144 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0722 19:13:22.152416 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cc36e8e-ca04-4e2a-9d1f-3fe9dd0f8bce",
      ResourceVersion: (string) (len=5) "18577",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 19:13:22.207510 21 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
      ResourceVersion: (string) (len=5) "18575",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2cc36e8e-ca04-4e2a-9d1f-3fe9dd0f8bce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 63 33 36 65  38 65 2d 63 61 30 34 2d  |\"2cc36e8e-ca04-|
              00000120  34 65 32 61 2d 39 64 31  66 2d 33 66 65 39 64 64  |4e2a-9d1f-3fe9dd|
              00000130  30 66 38 62 63 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0f8bce\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 19:13:22.208028 21 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0722 19:13:22.208300 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
      ResourceVersion: (string) (len=5) "18573",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2cc36e8e-ca04-4e2a-9d1f-3fe9dd0f8bce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 63 33 36 65  38 65 2d 63 61 30 34 2d  |\"2cc36e8e-ca04-|
              00000120  34 65 32 61 2d 39 64 31  66 2d 33 66 65 39 64 64  |4e2a-9d1f-3fe9dd|
              00000130  30 66 38 62 63 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0f8bce\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 19:13:22.220582 21 deployment.go:68] Pod "webserver-deployment-685b768f58-2l4vx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2l4vx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59c2d59f-5742-455e-8d7d-5d043a12cdb5",
      ResourceVersion: (string) (len=5) "18609",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dwx5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dwx5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.73",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.73"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2dwx5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.222223 21 deployment.go:68] Pod "webserver-deployment-685b768f58-4jhch" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4jhch",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef570f51-8f13-440a-a038-d16eb8433cc3",
      ResourceVersion: (string) (len=5) "18335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  31 2e 35 36 5c 22 7d 22  |2.168.231.56\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8thnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8thnw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.73",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.73"
        }
      },
      PodIP: (string) (len=14) "192.168.231.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.231.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://507aad62a2a7db05328e07eea2d995cd4a262ec8641f7af81e3682b0dc0569c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8thnw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.223488 21 deployment.go:68] Pod "webserver-deployment-685b768f58-6bsr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6bsr8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fb852d6-fab5-4c9d-9a25-058dfd9accec",
      ResourceVersion: (string) (len=5) "18440",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  31 2e 35 37 5c 22 7d 22  |2.168.231.57\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmtkn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmtkn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.73",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.73"
        }
      },
      PodIP: (string) (len=14) "192.168.231.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.231.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3aa3e4aa512025b0ed5af80d16969bef67e1ac7cb01b931300a541691615dda1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fmtkn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.226962 21 deployment.go:68] Pod "webserver-deployment-685b768f58-6m5hm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6m5hm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "519534b1-e577-4fae-9097-d6b64dd6d564",
      ResourceVersion: (string) (len=5) "18431",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 31 35 38 5c 22 7d  |2.168.183.158\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vpzx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vpzx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) (len=15) "192.168.183.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ec91ab0c29415dbe0e5e68e86ffffdb872f1ef8dc79a86454faa3b92c6902c29",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5vpzx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.228761 21 deployment.go:68] Pod "webserver-deployment-685b768f58-7vcsh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7vcsh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c34d5f9-73c4-416f-8272-2acf2f06b8de",
      ResourceVersion: (string) (len=5) "18623",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8wqbn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8wqbn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8wqbn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.230976 21 deployment.go:68] Pod "webserver-deployment-685b768f58-9cpxd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9cpxd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bca90fa-508e-4afc-bd99-4ffb4a51b6ed",
      ResourceVersion: (string) (len=5) "18612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ljshl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ljshl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.231680 21 deployment.go:68] Pod "webserver-deployment-685b768f58-9mwl6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9mwl6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e67cd364-d214-4cf9-a6c9-015e8985db74",
      ResourceVersion: (string) (len=5) "18602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4kcf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4kcf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.235851 21 deployment.go:68] Pod "webserver-deployment-685b768f58-bkzsb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bkzsb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a43635f-302f-498e-afba-48d1703d43cb",
      ResourceVersion: (string) (len=5) "18613",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7vwj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7vwj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d7vwj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.237064 21 deployment.go:68] Pod "webserver-deployment-685b768f58-csbg6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-csbg6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97a71281-9f09-4953-b0a2-365f4749f3c9",
      ResourceVersion: (string) (len=5) "18606",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7568",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7568",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.238639 21 deployment.go:68] Pod "webserver-deployment-685b768f58-lp5tn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lp5tn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27dc845a-5ba2-4f18-bdfc-1aa50eec4a2b",
      ResourceVersion: (string) (len=5) "18428",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 31 33 32 5c 22 7d  |2.168.183.132\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7t8hr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7t8hr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) (len=15) "192.168.183.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b2a6a7847f3e99184439b7f29d9d5270fddf594d6dccf51ef0f02fd6302c6e30",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7t8hr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.240741 21 deployment.go:68] Pod "webserver-deployment-685b768f58-m65cx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m65cx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1e32e85-762d-444c-9e3a-260b78fffe2c",
      ResourceVersion: (string) (len=5) "18616",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jhl6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jhl6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.243858 21 deployment.go:68] Pod "webserver-deployment-685b768f58-mrftd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mrftd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e38c8f8d-29de-4c14-a07d-59d029d895dd",
      ResourceVersion: (string) (len=5) "18614",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9bbcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9bbcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.244812 21 deployment.go:68] Pod "webserver-deployment-685b768f58-ncvpc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ncvpc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a276b040-23db-4481-859f-e0ad0b0d6f36",
      ResourceVersion: (string) (len=5) "18415",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 31 35 5c 22 7d 22 3a  |2.168.12.15\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9psj4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9psj4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e2c65a94d01f3cf6d28d053b9e8445a1a97d54a7170bc55c5d8433e35d8854ed",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9psj4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.246072 21 deployment.go:68] Pod "webserver-deployment-685b768f58-pmn72" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pmn72",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e269a740-fa0f-4a49-9b44-849df1b72456",
      ResourceVersion: (string) (len=5) "18601",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8dnn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8dnn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.248013 21 deployment.go:68] Pod "webserver-deployment-685b768f58-qhzms" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qhzms",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "662e9a73-d73c-4e8a-882d-f537430a22c8",
      ResourceVersion: (string) (len=5) "18586",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mj5cb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mj5cb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.250591 21 deployment.go:68] Pod "webserver-deployment-685b768f58-r79bg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r79bg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47368d93-4b64-4e2d-82e3-f58a8ad9e2c1",
      ResourceVersion: (string) (len=5) "18408",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 31 36 5c 22 7d 22 3a  |2.168.12.16\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5l86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5l86",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7f30e85cddea8132198462452537e33f83ee3be5b3b5cadd9bce6feb804077bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s5l86",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.255974 21 deployment.go:68] Pod "webserver-deployment-685b768f58-t5fn7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-t5fn7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bdd74b5-9c13-47f2-a506-6002bbac964c",
      ResourceVersion: (string) (len=5) "18417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 31 37 5c 22 7d 22 3a  |2.168.12.17\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gbp5t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gbp5t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://817d38b19762e19c6c85a66f0105f747bd4d5763316bc34917429c164bd87f4d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gbp5t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.259313 21 deployment.go:68] Pod "webserver-deployment-685b768f58-wfcxs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wfcxs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a680c280-4901-409c-aebd-2fd2e4d57a85",
      ResourceVersion: (string) (len=5) "18617",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8w8qd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8w8qd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.260231 21 deployment.go:68] Pod "webserver-deployment-685b768f58-x45kt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-x45kt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "531b412d-1691-4010-b3a1-182f90c2740b",
      ResourceVersion: (string) (len=5) "18330",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  31 2e 35 35 5c 22 7d 22  |2.168.231.55\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tn66r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tn66r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.73",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.73"
        }
      },
      PodIP: (string) (len=14) "192.168.231.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.231.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888808398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://719163c22c8b947b4bbbd9754a573a04cdb47ce0b603c5d95a8b6ef114591223",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tn66r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.264359 21 deployment.go:68] Pod "webserver-deployment-685b768f58-x5gz2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-x5gz2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "144ef74a-cf4e-428a-b033-332be886e4d2",
      ResourceVersion: (string) (len=5) "18619",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2a9ba219-1dd2-4f5a-a844-771391c5aab0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  39 62 61 32 31 39 2d 31  |d\":\"2a9ba219-1|
              00000090  64 64 32 2d 34 66 35 61  2d 61 38 34 34 2d 37 37  |dd2-4f5a-a844-77|
              000000a0  31 33 39 31 63 35 61 61  62 30 5c 22 7d 22 3a 7b  |1391c5aab0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4gvd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4gvd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.271839 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6chgm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6chgm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e7a425f-b4e4-44f9-a352-9752c8c87415",
      ResourceVersion: (string) (len=5) "18564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 2e 31 38  5c 22 7d 22 3a 7b 22 2e  |68.12.18\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4xqp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4xqp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x4xqp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.276932 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-84lmh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-84lmh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e98f414-ae27-454c-897f-9563eefeb388",
      ResourceVersion: (string) (len=5) "18540",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 33 31 2e 35  38 5c 22 7d 22 3a 7b 22  |68.231.58\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxq8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxq8f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.73",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.73"
        }
      },
      PodIP: (string) (len=14) "192.168.231.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.231.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pxq8f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.281315 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-czps4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-czps4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa8429c4-60a4-4e20-b6d7-ef6fd181b901",
      ResourceVersion: (string) (len=5) "18560",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 2e 31 39  5c 22 7d 22 3a 7b 22 2e  |68.12.19\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g2qvt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g2qvt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g2qvt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.282425 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fh8pk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fh8pk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4e21601-642b-41dd-8a55-34b3eb9caa1f",
      ResourceVersion: (string) (len=5) "18603",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrx4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrx4n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.283250 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ghrk4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ghrk4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bae7ac87-803c-4ecf-b7f7-568bc477465f",
      ResourceVersion: (string) (len=5) "18620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qbwm2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qbwm2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.284548 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-h52vr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-h52vr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e843a80-3fdf-4036-8b36-6a1c6635260f",
      ResourceVersion: (string) (len=5) "18615",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62z5f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62z5f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.287400 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kv4zg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kv4zg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b962fcfa-a7d3-4979-aee7-d5abe1b8dccd",
      ResourceVersion: (string) (len=5) "18567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 33 2e 31  34 33 5c 22 7d 22 3a 7b  |68.183.143\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ss44n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ss44n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) (len=15) "192.168.183.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ss44n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.288556 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-m4rct" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-m4rct",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1958774a-e17c-4f2e-8815-0dd3caa4e641",
      ResourceVersion: (string) (len=5) "18611",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kw4ph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kw4ph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.290229 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mb44t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mb44t",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d39d7a6-a2e2-449e-ba94-5b23e7c4710b",
      ResourceVersion: (string) (len=5) "18604",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vznfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vznfm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.291421 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-v79nq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-v79nq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7281f342-1fcf-41c7-acdc-940454e0a71d",
      ResourceVersion: (string) (len=5) "18610",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jb9q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jb9q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.292440 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wcc74" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wcc74",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3caf5825-fdd6-402f-890c-d3ebd8d80dfa",
      ResourceVersion: (string) (len=5) "18596",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4xrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4xrx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-73",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.73",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.73"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r4xrx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.295522 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xxrqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xxrqc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2665",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67a89f19-f78b-43ff-8b2f-61083b782a59",
      ResourceVersion: (string) (len=5) "18571",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "00c098bd-fce3-4f67-998e-2bc1b7f7bc09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  63 30 39 38 62 64 2d 66  |d\":\"00c098bd-f|
              00000090  63 65 33 2d 34 66 36 37  2d 39 39 38 65 2d 32 62  |ce3-4f67-998e-2b|
              000000a0  63 31 62 37 66 37 62 63  30 39 5c 22 7d 22 3a 7b  |c1b7f7bc09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 33 2e 31  34 32 5c 22 7d 22 3a 7b  |68.183.142\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcbxv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcbxv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808401,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888808400,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) (len=15) "192.168.183.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888808400,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gcbxv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:13:22.296744 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2665" for this suite. @ 07/22/25 19:13:22.301
• [4.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 07/22/25 19:13:22.311
  I0722 19:13:22.311127 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 19:13:22.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:13:22.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:13:22.328
  I0722 19:13:22.349566 21 service_accounts.go:647] created pod
  STEP: Saw pod success @ 07/22/25 19:13:26.368
  I0722 19:13:56.369359 21 service_accounts.go:653] polling logs
  I0722 19:13:56.377440 21 service_accounts.go:663] Pod logs: 
  I0722 19:13:22.899496       1 log.go:245] OK: Got token
  I0722 19:13:22.899535       1 log.go:245] validating with in-cluster discovery
  I0722 19:13:22.899722       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0722 19:13:22.899755       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-5890:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001f7dc0), NotBefore:(*jwt.NumericDate)(0xc0001f7eb0), IssuedAt:(*jwt.NumericDate)(0xc0001f7dd0), ID:"d6ba2544-5ebc-42f3-9d3c-b1fd4b5db5f8"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5890", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"5c8f5617-4ca0-46a1-8205-cce4c9d44e2a"}}}
  I0722 19:13:22.906252       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0722 19:13:22.909685       1 log.go:245] OK: Validated signature on JWT
  I0722 19:13:22.909737       1 log.go:245] OK: Got valid claims from token!
  I0722 19:13:22.909788       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-5890:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002c3658), NotBefore:(*jwt.NumericDate)(0xc0002c3680), IssuedAt:(*jwt.NumericDate)(0xc0002c3660), ID:"d6ba2544-5ebc-42f3-9d3c-b1fd4b5db5f8"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5890", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"5c8f5617-4ca0-46a1-8205-cce4c9d44e2a"}}}

  I0722 19:13:56.377479 21 service_accounts.go:667] completed pod
  I0722 19:13:56.383989 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5890" for this suite. @ 07/22/25 19:13:56.386
• [34.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 07/22/25 19:13:56.394
  I0722 19:13:56.394593 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:13:56.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:13:56.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:13:56.41
  STEP: Creating pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436 @ 07/22/25 19:13:56.411
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 19:13:58.428
  I0722 19:13:58.431793 21 container_probe.go:1749] Initial restart count of pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b is 0
  I0722 19:13:58.434600 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:00.438922 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:02.443167 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:04.447871 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:06.451463 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:08.456765 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:10.462593 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:12.467426 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:14.471899 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:16.476999 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:18.483087 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:20.488285 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:22.492999 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:24.498939 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:26.503855 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:28.508690 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:30.514717 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:32.520366 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:34.525665 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:36.530776 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:38.534980 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:40.539617 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:42.544158 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:44.548714 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:46.554902 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:48.560177 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:50.565979 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:52.570860 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:54.574798 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:56.580866 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:14:58.585619 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:00.590365 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:02.594364 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:04.600141 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:06.604449 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:08.610034 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:10.616241 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:12.621369 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:14.626653 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:16.632377 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:18.640128 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:20.645764 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:22.653168 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:24.658898 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:26.664092 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:28.669284 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:30.673353 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:32.679626 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:34.685725 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:36.691003 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:38.696702 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:40.702825 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:42.708807 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:44.714709 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:46.719415 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:48.724588 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:50.729566 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:52.734776 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:54.738509 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:56.743946 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:15:58.747817 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:00.752895 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:02.757644 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:04.763276 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:06.768393 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:08.774295 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:10.779965 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:12.786002 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:14.789788 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:16.794469 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:18.799616 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:20.804369 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:22.809977 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:24.814349 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:26.820306 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:28.825743 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:30.830937 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:32.835789 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:34.841693 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:36.846260 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:38.851713 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:40.855658 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:42.861775 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:44.865833 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:46.870502 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:48.875251 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:50.879853 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:52.884879 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:54.890191 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:56.895290 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:16:58.900319 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:00.905257 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:02.910426 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:04.915864 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:06.921279 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:08.927093 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:10.931849 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:12.937152 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:14.941613 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:16.948132 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:18.953144 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:20.957659 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:22.964989 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:24.969003 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:26.975414 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:28.980979 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:30.986763 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:32.990304 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:34.996478 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:37.000873 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:39.006117 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:41.011008 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:43.015850 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:45.020903 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:47.026954 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:49.031225 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:51.036500 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:53.040443 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:55.045447 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  I0722 19:17:57.049943 21 container_probe.go:1759] Get pod liveness-f1b32a8a-816c-436f-9830-017b121aa02b in namespace container-probe-4436
  STEP: deleting the pod @ 07/22/25 19:17:59.051
  I0722 19:17:59.065653 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4436" for this suite. @ 07/22/25 19:17:59.069
• [242.682 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/22/25 19:17:59.076
  I0722 19:17:59.076954 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:17:59.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:17:59.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:17:59.092
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/22/25 19:17:59.094
  STEP: Saw pod success @ 07/22/25 19:18:03.116
  I0722 19:18:03.120717 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-3da40db8-2ba4-420e-85cc-ea08e72acec8 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:18:03.136
  I0722 19:18:03.154020 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3297" for this suite. @ 07/22/25 19:18:03.157
• [4.089 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 07/22/25 19:18:03.165
  I0722 19:18:03.165974 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:18:03.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:03.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:03.177
  STEP: creating Agnhost RC @ 07/22/25 19:18:03.179
  I0722 19:18:03.179477 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-2461 create -f -'
  I0722 19:18:03.267338 21 builder.go:146] stderr: ""
  I0722 19:18:03.267373 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/22/25 19:18:03.267
  I0722 19:18:04.273227 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 19:18:04.273258 21 framework.go:733] Found 1 / 1
  I0722 19:18:04.273271 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/22/25 19:18:04.273
  I0722 19:18:04.276076 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 19:18:04.276096 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 19:18:04.276143 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-2461 patch pod agnhost-primary-vbxr2 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0722 19:18:04.329697 21 builder.go:146] stderr: ""
  I0722 19:18:04.329735 21 builder.go:147] stdout: "pod/agnhost-primary-vbxr2 patched\n"
  STEP: checking annotations @ 07/22/25 19:18:04.329
  I0722 19:18:04.332478 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0722 19:18:04.332496 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0722 19:18:04.332616 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2461" for this suite. @ 07/22/25 19:18:04.336
• [1.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/22/25 19:18:04.342
  I0722 19:18:04.342861 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 19:18:04.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:04.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:04.356
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/22/25 19:18:04.366
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/22/25 19:18:19.439
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/22/25 19:18:19.442
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/22/25 19:18:19.449
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/22/25 19:18:19.449
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/22/25 19:18:19.478
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/22/25 19:18:21.49
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/22/25 19:18:22.499
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/22/25 19:18:22.505
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/22/25 19:18:22.505
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/22/25 19:18:22.529
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/22/25 19:18:23.536
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/22/25 19:18:24.544
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/22/25 19:18:24.551
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/22/25 19:18:24.551
  I0722 19:18:24.582528 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3981" for this suite. @ 07/22/25 19:18:24.585
• [20.250 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/22/25 19:18:24.593
  I0722 19:18:24.593066 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:18:24.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:24.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:24.606
  STEP: Creating configMap with name projected-configmap-test-volume-map-d3f47fb1-49e6-4227-a33b-4a93456fd044 @ 07/22/25 19:18:24.608
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:18:24.613
  STEP: Saw pod success @ 07/22/25 19:18:28.636
  I0722 19:18:28.640842 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-configmaps-2d8a6e09-d8d9-49a4-a2d8-ea45d5e8122e container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:18:28.647
  I0722 19:18:28.663599 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6653" for this suite. @ 07/22/25 19:18:28.667
• [4.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/22/25 19:18:28.674
  I0722 19:18:28.674436 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:18:28.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:28.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:28.688
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 19:18:28.69
  STEP: Saw pod success @ 07/22/25 19:18:32.714
  I0722 19:18:32.719477 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-9055cbd3-072b-4f22-8250-4f1d8cf0b671 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 19:18:32.724
  I0722 19:18:32.741960 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6146" for this suite. @ 07/22/25 19:18:32.746
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/22/25 19:18:32.754
  I0722 19:18:32.754264 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename prestop @ 07/22/25 19:18:32.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:32.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:32.768
  STEP: Creating server pod server in namespace prestop-2543 @ 07/22/25 19:18:32.77
  STEP: Waiting for pods to come up. @ 07/22/25 19:18:32.78
  STEP: Creating tester pod tester in namespace prestop-2543 @ 07/22/25 19:18:34.793
  STEP: Deleting pre-stop pod @ 07/22/25 19:18:36.806
  I0722 19:18:41.823208 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/22/25 19:18:41.823
  I0722 19:18:41.837458 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-2543" for this suite. @ 07/22/25 19:18:41.841
• [9.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 07/22/25 19:18:41.848
  I0722 19:18:41.848304 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 19:18:41.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:41.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:41.862
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/22/25 19:18:41.864
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/22/25 19:18:41.864
  STEP: creating a pod to probe DNS @ 07/22/25 19:18:41.864
  STEP: submitting the pod to kubernetes @ 07/22/25 19:18:41.864
  STEP: retrieving the pod @ 07/22/25 19:18:43.893
  STEP: looking for the results for each expected name from probers @ 07/22/25 19:18:43.897
  I0722 19:18:43.910510 21 dns_common.go:546] DNS probes using dns-9494/dns-test-d0530fad-7b78-4db3-bc73-68e21fe43816 succeeded

  STEP: deleting the pod @ 07/22/25 19:18:43.91
  I0722 19:18:43.928709 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9494" for this suite. @ 07/22/25 19:18:43.933
• [2.092 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/22/25 19:18:43.94
  I0722 19:18:43.940382 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename podtemplate @ 07/22/25 19:18:43.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:43.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:43.955
  STEP: Create set of pod templates @ 07/22/25 19:18:43.957
  I0722 19:18:43.961064 21 podtemplates.go:143] created test-podtemplate-1
  I0722 19:18:43.966794 21 podtemplates.go:143] created test-podtemplate-2
  I0722 19:18:43.971444 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/22/25 19:18:43.971
  STEP: delete collection of pod templates @ 07/22/25 19:18:43.973
  I0722 19:18:43.973849 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/22/25 19:18:43.991
  I0722 19:18:43.991449 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0722 19:18:43.994631 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-63" for this suite. @ 07/22/25 19:18:44.034
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/22/25 19:18:44.042
  I0722 19:18:44.042320 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename podtemplate @ 07/22/25 19:18:44.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:44.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:44.058
  I0722 19:18:44.089201 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6427" for this suite. @ 07/22/25 19:18:44.135
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/22/25 19:18:44.143
  I0722 19:18:44.143547 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 19:18:44.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:18:44.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:18:44.157
  STEP: Creating a cronjob @ 07/22/25 19:18:44.158
  STEP: Ensuring more than one job is running at a time @ 07/22/25 19:18:44.164
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/22/25 19:20:00.17
  STEP: Removing cronjob @ 07/22/25 19:20:00.174
  I0722 19:20:00.181979 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3779" for this suite. @ 07/22/25 19:20:00.185
• [76.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/22/25 19:20:00.191
  I0722 19:20:00.191882 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:20:00.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:00.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:00.207
  STEP: Creating secret with name secret-test-map-ddb7dc31-45d8-4b97-9af0-8baf4f664a51 @ 07/22/25 19:20:00.209
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:20:00.215
  STEP: Saw pod success @ 07/22/25 19:20:04.34
  I0722 19:20:04.343933 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-secrets-7060cebd-ad46-4d27-a85c-15e2d52bc2ad container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:20:04.353
  I0722 19:20:04.372237 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8036" for this suite. @ 07/22/25 19:20:04.376
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/22/25 19:20:04.383
  I0722 19:20:04.383258 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:20:04.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:04.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:04.401
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/22/25 19:20:04.402
  STEP: Saw pod success @ 07/22/25 19:20:08.423
  I0722 19:20:08.427088 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-ab70b430-b91d-4e56-8412-43ed1b5930a8 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:20:08.433
  I0722 19:20:08.451927 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-713" for this suite. @ 07/22/25 19:20:08.455
• [4.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 07/22/25 19:20:08.46
  I0722 19:20:08.460964 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 19:20:08.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:08.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:08.473
  I0722 19:20:08.475616 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/22/25 19:20:09.698
  I0722 19:20:09.698305 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-4710 --namespace=crd-publish-openapi-4710 create -f -'
  I0722 19:20:11.758944 21 builder.go:146] stderr: ""
  I0722 19:20:11.758992 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8791-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0722 19:20:11.759063 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-4710 --namespace=crd-publish-openapi-4710 delete e2e-test-crd-publish-openapi-8791-crds test-cr'
  I0722 19:20:11.819989 21 builder.go:146] stderr: ""
  I0722 19:20:11.820035 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8791-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0722 19:20:11.820097 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-4710 --namespace=crd-publish-openapi-4710 apply -f -'
  I0722 19:20:11.874924 21 builder.go:146] stderr: ""
  I0722 19:20:11.874963 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8791-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0722 19:20:11.875015 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-4710 --namespace=crd-publish-openapi-4710 delete e2e-test-crd-publish-openapi-8791-crds test-cr'
  I0722 19:20:11.928013 21 builder.go:146] stderr: ""
  I0722 19:20:11.928068 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8791-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/22/25 19:20:11.928
  I0722 19:20:11.928143 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-4710 explain e2e-test-crd-publish-openapi-8791-crds'
  I0722 19:20:11.972885 21 builder.go:146] stderr: ""
  I0722 19:20:11.972970 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8791-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0722 19:20:13.170850 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4710" for this suite. @ 07/22/25 19:20:13.178
• [4.723 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 07/22/25 19:20:13.184
  I0722 19:20:13.184188 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:20:13.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:13.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:13.199
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8636 @ 07/22/25 19:20:13.202
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/22/25 19:20:13.224
  STEP: creating service externalsvc in namespace services-8636 @ 07/22/25 19:20:13.224
  STEP: creating replication controller externalsvc in namespace services-8636 @ 07/22/25 19:20:13.24
  I0722 19:20:13.246316      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8636, replica count: 2
  I0722 19:20:16.297117      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/22/25 19:20:16.3
  I0722 19:20:16.321218 21 resource.go:361] Creating new exec pod
  I0722 19:20:18.337718 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-8636 exec execpodgk6m7 -- /bin/sh -x -c nslookup nodeport-service.services-8636.svc.cluster.local'
  I0722 19:20:18.447025 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-8636.svc.cluster.local\n"
  I0722 19:20:18.447104 21 builder.go:147] stdout: "Server:\t\t10.152.183.45\nAddress:\t10.152.183.45#53\n\nnodeport-service.services-8636.svc.cluster.local\tcanonical name = externalsvc.services-8636.svc.cluster.local.\nName:\texternalsvc.services-8636.svc.cluster.local\nAddress: 10.152.183.115\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8636, will wait for the garbage collector to delete the pods @ 07/22/25 19:20:18.447
  I0722 19:20:18.507447 21 resources.go:139] Deleting ReplicationController externalsvc took: 6.138397ms
  I0722 19:20:18.608109 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.657049ms
  I0722 19:20:21.427867 21 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0722 19:20:21.438115 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8636" for this suite. @ 07/22/25 19:20:21.442
• [8.265 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/22/25 19:20:21.449
  I0722 19:20:21.449522 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 19:20:21.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:21.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:21.465
  STEP: create the container @ 07/22/25 19:20:21.467
  W0722 19:20:21.475686      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/22/25 19:20:21.475
  STEP: get the container status @ 07/22/25 19:20:24.492
  STEP: the container should be terminated @ 07/22/25 19:20:24.495
  STEP: the termination message should be set @ 07/22/25 19:20:24.495
  I0722 19:20:24.495349 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/22/25 19:20:24.495
  I0722 19:20:24.512768 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8155" for this suite. @ 07/22/25 19:20:24.515
• [3.074 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/22/25 19:20:24.523
  I0722 19:20:24.523357 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 19:20:24.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:24.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:24.538
  STEP: fetching the /apis discovery document @ 07/22/25 19:20:24.539
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/22/25 19:20:24.54
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/22/25 19:20:24.54
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/22/25 19:20:24.54
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/22/25 19:20:24.541
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/22/25 19:20:24.541
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/22/25 19:20:24.541
  I0722 19:20:24.541826 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9241" for this suite. @ 07/22/25 19:20:24.617
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/22/25 19:20:24.624
  I0722 19:20:24.624495 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:20:24.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:24.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:24.642
  STEP: Creating configMap with name configmap-test-volume-f41582ac-598f-459f-99c6-64c66660c014 @ 07/22/25 19:20:24.644
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:20:24.648
  STEP: Saw pod success @ 07/22/25 19:20:26.664
  I0722 19:20:26.666861 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-376009c5-8bcf-416b-99dd-d60260fd9198 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:20:26.674
  I0722 19:20:26.692784 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5226" for this suite. @ 07/22/25 19:20:26.695
• [2.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/22/25 19:20:26.7
  I0722 19:20:26.700851 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:20:26.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:26.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:26.715
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 19:20:26.716
  STEP: Saw pod success @ 07/22/25 19:20:28.736
  I0722 19:20:28.738816 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-11a4cdcf-3d24-4f9e-84a7-e50c27f0ae39 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 19:20:28.745
  I0722 19:20:28.762794 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-736" for this suite. @ 07/22/25 19:20:28.766
• [2.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 07/22/25 19:20:28.774
  I0722 19:20:28.774094 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 19:20:28.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:28.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:28.787
  STEP: creating a ServiceAccount @ 07/22/25 19:20:28.789
  STEP: watching for the ServiceAccount to be added @ 07/22/25 19:20:28.797
  STEP: patching the ServiceAccount @ 07/22/25 19:20:28.8
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/22/25 19:20:28.806
  STEP: deleting the ServiceAccount @ 07/22/25 19:20:28.809
  I0722 19:20:28.823216 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5203" for this suite. @ 07/22/25 19:20:28.868
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/22/25 19:20:28.875
  I0722 19:20:28.875358 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:20:28.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:28.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:28.888
  STEP: Creating configMap with name projected-configmap-test-volume-map-d5d43f40-3be0-4a17-b093-bca0b22e93b9 @ 07/22/25 19:20:28.889
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:20:28.896
  STEP: Saw pod success @ 07/22/25 19:20:32.917
  I0722 19:20:32.919892 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-configmaps-581023ae-2ed3-4735-838b-69ecb103b275 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:20:32.927
  I0722 19:20:32.946281 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2631" for this suite. @ 07/22/25 19:20:32.949
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 07/22/25 19:20:32.956
  I0722 19:20:32.956091 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:20:32.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:32.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:32.97
  STEP: Counting existing ResourceQuota @ 07/22/25 19:20:32.974
  STEP: Creating a ResourceQuota @ 07/22/25 19:20:37.979
  STEP: Ensuring resource quota status is calculated @ 07/22/25 19:20:37.986
  STEP: Creating a Service @ 07/22/25 19:20:39.991
  STEP: Creating a NodePort Service @ 07/22/25 19:20:40.008
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/22/25 19:20:40.033
  STEP: Ensuring resource quota status captures service creation @ 07/22/25 19:20:40.058
  STEP: Deleting Services @ 07/22/25 19:20:42.064
  STEP: Ensuring resource quota status released usage @ 07/22/25 19:20:42.098
  I0722 19:20:44.102023 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2389" for this suite. @ 07/22/25 19:20:44.107
• [11.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 07/22/25 19:20:44.115
  I0722 19:20:44.115814 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:20:44.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:44.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:44.127
  STEP: Creating a ResourceQuota @ 07/22/25 19:20:44.129
  STEP: Getting a ResourceQuota @ 07/22/25 19:20:44.134
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/22/25 19:20:44.138
  STEP: Patching the ResourceQuota @ 07/22/25 19:20:44.14
  STEP: Deleting a Collection of ResourceQuotas @ 07/22/25 19:20:44.145
  STEP: Verifying the deleted ResourceQuota @ 07/22/25 19:20:44.156
  I0722 19:20:44.159650 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5553" for this suite. @ 07/22/25 19:20:44.208
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 07/22/25 19:20:44.215
  I0722 19:20:44.215592 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:20:44.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:44.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:44.229
  STEP: Setting up server cert @ 07/22/25 19:20:44.251
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:20:44.614
  STEP: Deploying the webhook pod @ 07/22/25 19:20:44.62
  STEP: Wait for the deployment to be ready @ 07/22/25 19:20:44.634
  I0722 19:20:44.639895 21 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/22/25 19:20:46.652
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:20:46.662
  I0722 19:20:47.662991 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/22/25 19:20:47.738
  STEP: Creating a configMap that should be mutated @ 07/22/25 19:20:47.746
  STEP: Deleting the collection of validation webhooks @ 07/22/25 19:20:47.77
  STEP: Creating a configMap that should not be mutated @ 07/22/25 19:20:47.822
  I0722 19:20:47.868776 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4425" for this suite. @ 07/22/25 19:20:47.873
  STEP: Destroying namespace "webhook-markers-9237" for this suite. @ 07/22/25 19:20:47.88
• [3.674 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 07/22/25 19:20:47.889
  I0722 19:20:47.889701 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 19:20:47.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:20:47.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:20:47.903
  I0722 19:20:47.917563 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 19:21:47.922495 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/22/25 19:21:47.926
  STEP: Adding a custom resource @ 07/22/25 19:21:47.926
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/22/25 19:21:47.934
  I0722 19:21:47.943196 21 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/22/25 19:21:47.943
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/22/25 19:21:49.95
  I0722 19:21:49.956953 21 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/22/25 19:21:49.956
  STEP: Verifying the pod has the pod disruption condition @ 07/22/25 19:21:51.965
  I0722 19:21:51.969241 21 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0722 19:21:52.482833 21 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/22/25 19:21:52.504
  STEP: Removing a custom resource @ 07/22/25 19:21:52.514
  STEP: Removing a custom resource @ 07/22/25 19:21:52.525
  I0722 19:21:52.531992 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4983" for this suite. @ 07/22/25 19:21:52.536
• [64.652 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/22/25 19:21:52.541
  I0722 19:21:52.541997 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename discovery @ 07/22/25 19:21:52.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:21:52.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:21:52.556
  STEP: Setting up server cert @ 07/22/25 19:21:52.559
  STEP: Requesting APIResourceList from "/api/v1" @ 07/22/25 19:21:52.858
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/22/25 19:21:52.86
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/22/25 19:21:52.861
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/22/25 19:21:52.861
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/22/25 19:21:52.862
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/22/25 19:21:52.862
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/22/25 19:21:52.863
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/22/25 19:21:52.864
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/22/25 19:21:52.864
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/22/25 19:21:52.865
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/22/25 19:21:52.865
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/22/25 19:21:52.866
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/22/25 19:21:52.866
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/22/25 19:21:52.867
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/22/25 19:21:52.867
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/22/25 19:21:52.868
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/22/25 19:21:52.869
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/22/25 19:21:52.869
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/22/25 19:21:52.87
  I0722 19:21:52.870726 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7499" for this suite. @ 07/22/25 19:21:52.874
• [0.339 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/22/25 19:21:52.88
  I0722 19:21:52.881000 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:21:52.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:21:52.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:21:52.895
  STEP: Creating configMap with name configmap-test-volume-dd20dcb3-b62d-44b7-a697-4626c986686f @ 07/22/25 19:21:52.897
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:21:52.901
  STEP: Saw pod success @ 07/22/25 19:21:56.927
  I0722 19:21:56.930117 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-79bd61d2-51b2-479b-9467-d6818bd0a43c container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:21:56.936
  I0722 19:21:56.954590 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-220" for this suite. @ 07/22/25 19:21:56.958
• [4.085 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 07/22/25 19:21:56.966
  I0722 19:21:56.966207 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:21:56.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:21:56.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:21:56.988
  STEP: validating cluster-info @ 07/22/25 19:21:56.993
  I0722 19:21:56.993747 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-2619 cluster-info'
  I0722 19:21:57.037673 21 builder.go:146] stderr: ""
  I0722 19:21:57.037724 21 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0722 19:21:57.037817 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2619" for this suite. @ 07/22/25 19:21:57.059
• [0.100 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 07/22/25 19:21:57.065
  I0722 19:21:57.065874 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:21:57.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:21:57.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:21:57.08
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 19:21:57.082
  I0722 19:21:57.082256 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8122 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0722 19:21:57.134583 21 builder.go:146] stderr: ""
  I0722 19:21:57.134613 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/22/25 19:21:57.134
  I0722 19:21:57.134683 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8122 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0722 19:21:57.182988 21 builder.go:146] stderr: ""
  I0722 19:21:57.183025 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/22/25 19:21:57.183
  I0722 19:21:57.187014 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8122 delete pods e2e-test-httpd-pod'
  I0722 19:21:58.378146 21 builder.go:146] stderr: ""
  I0722 19:21:58.378183 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0722 19:21:58.378319 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8122" for this suite. @ 07/22/25 19:21:58.382
• [1.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 07/22/25 19:21:58.388
  I0722 19:21:58.388559 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:21:58.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:21:58.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:21:58.406
  STEP: creating a replication controller @ 07/22/25 19:21:58.408
  I0722 19:21:58.408374 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 create -f -'
  I0722 19:21:58.496371 21 builder.go:146] stderr: ""
  I0722 19:21:58.496411 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 19:21:58.496
  I0722 19:21:58.496492 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:21:58.539491 21 builder.go:146] stderr: ""
  I0722 19:21:58.539529 21 builder.go:147] stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 07/22/25 19:21:58.539
  I0722 19:22:03.539760 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:22:03.600690 21 builder.go:146] stderr: ""
  I0722 19:22:03.600728 21 builder.go:147] stdout: "update-demo-nautilus-sccrw update-demo-nautilus-wgxh9 "
  I0722 19:22:03.600778 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods update-demo-nautilus-sccrw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:22:03.641469 21 builder.go:146] stderr: ""
  I0722 19:22:03.641506 21 builder.go:147] stdout: "true"
  I0722 19:22:03.641550 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods update-demo-nautilus-sccrw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:22:03.685398 21 builder.go:146] stderr: ""
  I0722 19:22:03.685434 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:22:03.685445 21 kubectl.go:2400] validating pod update-demo-nautilus-sccrw
  I0722 19:22:03.691659 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:22:03.691716 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:22:03.691748 21 kubectl.go:2527] update-demo-nautilus-sccrw is verified up and running
  I0722 19:22:03.691786 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods update-demo-nautilus-wgxh9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:22:03.734307 21 builder.go:146] stderr: ""
  I0722 19:22:03.734342 21 builder.go:147] stdout: "true"
  I0722 19:22:03.734411 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods update-demo-nautilus-wgxh9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:22:03.777512 21 builder.go:146] stderr: ""
  I0722 19:22:03.777556 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:22:03.777572 21 kubectl.go:2400] validating pod update-demo-nautilus-wgxh9
  I0722 19:22:03.781579 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:22:03.781628 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:22:03.781640 21 kubectl.go:2527] update-demo-nautilus-wgxh9 is verified up and running
  STEP: using delete to clean up resources @ 07/22/25 19:22:03.781
  I0722 19:22:03.781772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 delete --grace-period=0 --force -f -'
  I0722 19:22:03.830422 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:22:03.830458 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0722 19:22:03.830516 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get rc,svc -l name=update-demo --no-headers'
  I0722 19:22:03.895206 21 builder.go:146] stderr: "No resources found in kubectl-5874 namespace.\n"
  I0722 19:22:03.895249 21 builder.go:147] stdout: ""
  I0722 19:22:03.895304 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5874 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0722 19:22:03.945676 21 builder.go:146] stderr: ""
  I0722 19:22:03.945718 21 builder.go:147] stdout: ""
  I0722 19:22:03.945834 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5874" for this suite. @ 07/22/25 19:22:03.951
• [5.570 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/22/25 19:22:03.958
  I0722 19:22:03.958770 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 19:22:03.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:03.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:03.973
  I0722 19:22:03.975318 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  W0722 19:22:06.512185      21 warnings.go:70] unknown field "alpha"
  W0722 19:22:06.512207      21 warnings.go:70] unknown field "beta"
  W0722 19:22:06.512213      21 warnings.go:70] unknown field "delta"
  W0722 19:22:06.512216      21 warnings.go:70] unknown field "epsilon"
  W0722 19:22:06.512219      21 warnings.go:70] unknown field "gamma"
  I0722 19:22:07.052193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7839" for this suite. @ 07/22/25 19:22:07.055
• [3.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/22/25 19:22:07.064
  I0722 19:22:07.064545 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:22:07.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:07.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:07.079
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/22/25 19:22:07.081
  STEP: Saw pod success @ 07/22/25 19:22:11.104
  I0722 19:22:11.107606 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-2048fb34-68c9-4455-a4b6-8a1da9b61e74 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:22:11.115
  I0722 19:22:11.132886 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7759" for this suite. @ 07/22/25 19:22:11.137
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/22/25 19:22:11.145
  I0722 19:22:11.145230 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svc-latency @ 07/22/25 19:22:11.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:11.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:11.158
  I0722 19:22:11.160745 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2565 @ 07/22/25 19:22:11.161
  I0722 19:22:11.165947      21 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2565, replica count: 1
  I0722 19:22:12.216658      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:22:13.217179      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:22:13.330464 21 service_latency.go:356] Created: latency-svc-44kjh
  I0722 19:22:13.337360 21 service_latency.go:363] Got endpoints: latency-svc-44kjh [19.198017ms]
  I0722 19:22:13.349803 21 service_latency.go:356] Created: latency-svc-bqgj8
  I0722 19:22:13.355704 21 service_latency.go:363] Got endpoints: latency-svc-bqgj8 [18.223699ms]
  I0722 19:22:13.358904 21 service_latency.go:356] Created: latency-svc-w77k7
  I0722 19:22:13.363542 21 service_latency.go:356] Created: latency-svc-4w76f
  I0722 19:22:13.365196 21 service_latency.go:363] Got endpoints: latency-svc-w77k7 [27.579969ms]
  I0722 19:22:13.369875 21 service_latency.go:363] Got endpoints: latency-svc-4w76f [32.233235ms]
  I0722 19:22:13.373941 21 service_latency.go:356] Created: latency-svc-8bs5d
  I0722 19:22:13.381097 21 service_latency.go:363] Got endpoints: latency-svc-8bs5d [43.507476ms]
  I0722 19:22:13.381097 21 service_latency.go:356] Created: latency-svc-gdxz2
  I0722 19:22:13.385771 21 service_latency.go:356] Created: latency-svc-857hj
  I0722 19:22:13.387868 21 service_latency.go:363] Got endpoints: latency-svc-gdxz2 [50.15209ms]
  I0722 19:22:13.394608 21 service_latency.go:363] Got endpoints: latency-svc-857hj [56.860056ms]
  I0722 19:22:13.398978 21 service_latency.go:356] Created: latency-svc-4f2gn
  I0722 19:22:13.403719 21 service_latency.go:363] Got endpoints: latency-svc-4f2gn [66.040407ms]
  I0722 19:22:13.409427 21 service_latency.go:356] Created: latency-svc-8q684
  I0722 19:22:13.415724 21 service_latency.go:356] Created: latency-svc-vlqjc
  I0722 19:22:13.415752 21 service_latency.go:363] Got endpoints: latency-svc-8q684 [77.972223ms]
  I0722 19:22:13.421335 21 service_latency.go:363] Got endpoints: latency-svc-vlqjc [83.519997ms]
  I0722 19:22:13.427536 21 service_latency.go:356] Created: latency-svc-jhtcw
  I0722 19:22:13.433109 21 service_latency.go:363] Got endpoints: latency-svc-jhtcw [95.240886ms]
  I0722 19:22:13.433683 21 service_latency.go:356] Created: latency-svc-v4f5q
  I0722 19:22:13.440095 21 service_latency.go:356] Created: latency-svc-srbqc
  I0722 19:22:13.445878 21 service_latency.go:363] Got endpoints: latency-svc-v4f5q [107.980922ms]
  I0722 19:22:13.447036 21 service_latency.go:363] Got endpoints: latency-svc-srbqc [109.49712ms]
  I0722 19:22:13.450102 21 service_latency.go:356] Created: latency-svc-pt5dc
  I0722 19:22:13.455991 21 service_latency.go:363] Got endpoints: latency-svc-pt5dc [118.070117ms]
  I0722 19:22:13.460656 21 service_latency.go:356] Created: latency-svc-m6kbx
  I0722 19:22:13.467660 21 service_latency.go:363] Got endpoints: latency-svc-m6kbx [129.609054ms]
  I0722 19:22:13.467645 21 service_latency.go:356] Created: latency-svc-c4hr9
  I0722 19:22:13.475602 21 service_latency.go:363] Got endpoints: latency-svc-c4hr9 [137.762562ms]
  I0722 19:22:13.479584 21 service_latency.go:356] Created: latency-svc-q4qzj
  I0722 19:22:13.484192 21 service_latency.go:363] Got endpoints: latency-svc-q4qzj [128.431971ms]
  I0722 19:22:13.487867 21 service_latency.go:356] Created: latency-svc-t5l8n
  I0722 19:22:13.495943 21 service_latency.go:356] Created: latency-svc-t9tmg
  I0722 19:22:13.496175 21 service_latency.go:363] Got endpoints: latency-svc-t5l8n [130.950581ms]
  I0722 19:22:13.500750 21 service_latency.go:363] Got endpoints: latency-svc-t9tmg [130.823987ms]
  I0722 19:22:13.505385 21 service_latency.go:356] Created: latency-svc-4p5xr
  I0722 19:22:13.513518 21 service_latency.go:363] Got endpoints: latency-svc-4p5xr [132.388858ms]
  I0722 19:22:13.514497 21 service_latency.go:356] Created: latency-svc-xxmpv
  I0722 19:22:13.522710 21 service_latency.go:356] Created: latency-svc-7kkhj
  I0722 19:22:13.523387 21 service_latency.go:363] Got endpoints: latency-svc-xxmpv [135.488704ms]
  I0722 19:22:13.530903 21 service_latency.go:363] Got endpoints: latency-svc-7kkhj [136.26277ms]
  I0722 19:22:13.532937 21 service_latency.go:356] Created: latency-svc-hkzsx
  I0722 19:22:13.536122 21 service_latency.go:363] Got endpoints: latency-svc-hkzsx [132.367202ms]
  I0722 19:22:13.540713 21 service_latency.go:356] Created: latency-svc-z9s89
  I0722 19:22:13.544598 21 service_latency.go:363] Got endpoints: latency-svc-z9s89 [128.825803ms]
  I0722 19:22:13.546029 21 service_latency.go:356] Created: latency-svc-qvdpp
  I0722 19:22:13.552706 21 service_latency.go:363] Got endpoints: latency-svc-qvdpp [131.342732ms]
  I0722 19:22:13.555130 21 service_latency.go:356] Created: latency-svc-p94mg
  I0722 19:22:13.561159 21 service_latency.go:363] Got endpoints: latency-svc-p94mg [127.981226ms]
  I0722 19:22:13.565558 21 service_latency.go:356] Created: latency-svc-t8gcb
  I0722 19:22:13.573412 21 service_latency.go:356] Created: latency-svc-jk7dn
  I0722 19:22:13.574009 21 service_latency.go:363] Got endpoints: latency-svc-t8gcb [128.101113ms]
  I0722 19:22:13.578256 21 service_latency.go:363] Got endpoints: latency-svc-jk7dn [131.038345ms]
  I0722 19:22:13.583873 21 service_latency.go:356] Created: latency-svc-df4mq
  I0722 19:22:13.590179 21 service_latency.go:363] Got endpoints: latency-svc-df4mq [134.157888ms]
  I0722 19:22:13.592787 21 service_latency.go:356] Created: latency-svc-7vp7s
  I0722 19:22:13.599410 21 service_latency.go:363] Got endpoints: latency-svc-7vp7s [131.716926ms]
  I0722 19:22:13.600953 21 service_latency.go:356] Created: latency-svc-ffjtt
  I0722 19:22:13.607906 21 service_latency.go:363] Got endpoints: latency-svc-ffjtt [132.274425ms]
  I0722 19:22:13.609796 21 service_latency.go:356] Created: latency-svc-bpqnp
  I0722 19:22:13.614299 21 service_latency.go:363] Got endpoints: latency-svc-bpqnp [130.078298ms]
  I0722 19:22:13.617828 21 service_latency.go:356] Created: latency-svc-56cp4
  I0722 19:22:13.621903 21 service_latency.go:356] Created: latency-svc-qgt5n
  I0722 19:22:13.625018 21 service_latency.go:363] Got endpoints: latency-svc-56cp4 [128.817147ms]
  I0722 19:22:13.627575 21 service_latency.go:363] Got endpoints: latency-svc-qgt5n [126.801579ms]
  I0722 19:22:13.634167 21 service_latency.go:356] Created: latency-svc-9qhft
  I0722 19:22:13.639656 21 service_latency.go:363] Got endpoints: latency-svc-9qhft [126.111927ms]
  I0722 19:22:13.644753 21 service_latency.go:356] Created: latency-svc-9jdg4
  I0722 19:22:13.649492 21 service_latency.go:363] Got endpoints: latency-svc-9jdg4 [126.079048ms]
  I0722 19:22:13.650630 21 service_latency.go:356] Created: latency-svc-vbzr8
  I0722 19:22:13.659630 21 service_latency.go:356] Created: latency-svc-b5mnc
  I0722 19:22:13.664865 21 service_latency.go:356] Created: latency-svc-nw4z4
  I0722 19:22:13.669076 21 service_latency.go:356] Created: latency-svc-kx9th
  I0722 19:22:13.677153 21 service_latency.go:356] Created: latency-svc-vzsj7
  I0722 19:22:13.682814 21 service_latency.go:356] Created: latency-svc-ncvrf
  I0722 19:22:13.685160 21 service_latency.go:363] Got endpoints: latency-svc-vbzr8 [154.22982ms]
  I0722 19:22:13.692199 21 service_latency.go:356] Created: latency-svc-stw5b
  I0722 19:22:13.699360 21 service_latency.go:356] Created: latency-svc-k6z7d
  I0722 19:22:13.705560 21 service_latency.go:356] Created: latency-svc-czwkw
  I0722 19:22:13.710036 21 service_latency.go:356] Created: latency-svc-fbt8x
  I0722 19:22:13.718709 21 service_latency.go:356] Created: latency-svc-cxhrs
  I0722 19:22:13.724333 21 service_latency.go:356] Created: latency-svc-qfzcj
  I0722 19:22:13.728145 21 service_latency.go:356] Created: latency-svc-47kg9
  I0722 19:22:13.735411 21 service_latency.go:356] Created: latency-svc-m9xnx
  I0722 19:22:13.736465 21 service_latency.go:363] Got endpoints: latency-svc-b5mnc [200.288603ms]
  I0722 19:22:13.747422 21 service_latency.go:356] Created: latency-svc-5r9h6
  I0722 19:22:13.749685 21 service_latency.go:356] Created: latency-svc-l6fll
  I0722 19:22:13.757723 21 service_latency.go:356] Created: latency-svc-p4fg7
  I0722 19:22:13.788646 21 service_latency.go:363] Got endpoints: latency-svc-nw4z4 [244.017864ms]
  I0722 19:22:13.801976 21 service_latency.go:356] Created: latency-svc-w6ppb
  I0722 19:22:13.836968 21 service_latency.go:363] Got endpoints: latency-svc-kx9th [284.233604ms]
  I0722 19:22:13.845372 21 service_latency.go:356] Created: latency-svc-vslxg
  I0722 19:22:13.890078 21 service_latency.go:363] Got endpoints: latency-svc-vzsj7 [328.844694ms]
  I0722 19:22:13.901150 21 service_latency.go:356] Created: latency-svc-cj27v
  I0722 19:22:13.938784 21 service_latency.go:363] Got endpoints: latency-svc-ncvrf [364.745855ms]
  I0722 19:22:13.950928 21 service_latency.go:356] Created: latency-svc-2977n
  I0722 19:22:13.988900 21 service_latency.go:363] Got endpoints: latency-svc-stw5b [410.544118ms]
  I0722 19:22:13.999355 21 service_latency.go:356] Created: latency-svc-q2snm
  I0722 19:22:14.036500 21 service_latency.go:363] Got endpoints: latency-svc-k6z7d [446.29344ms]
  I0722 19:22:14.045437 21 service_latency.go:356] Created: latency-svc-648g8
  I0722 19:22:14.089354 21 service_latency.go:363] Got endpoints: latency-svc-czwkw [489.905921ms]
  I0722 19:22:14.101115 21 service_latency.go:356] Created: latency-svc-8mlmj
  I0722 19:22:14.139208 21 service_latency.go:363] Got endpoints: latency-svc-fbt8x [531.268064ms]
  I0722 19:22:14.150011 21 service_latency.go:356] Created: latency-svc-krcdm
  I0722 19:22:14.188882 21 service_latency.go:363] Got endpoints: latency-svc-cxhrs [574.548237ms]
  I0722 19:22:14.200629 21 service_latency.go:356] Created: latency-svc-p5pr7
  I0722 19:22:14.240419 21 service_latency.go:363] Got endpoints: latency-svc-qfzcj [615.37044ms]
  I0722 19:22:14.252788 21 service_latency.go:356] Created: latency-svc-2lkjh
  I0722 19:22:14.286551 21 service_latency.go:363] Got endpoints: latency-svc-47kg9 [658.951347ms]
  I0722 19:22:14.296336 21 service_latency.go:356] Created: latency-svc-8s6mv
  I0722 19:22:14.336886 21 service_latency.go:363] Got endpoints: latency-svc-m9xnx [697.199309ms]
  I0722 19:22:14.349038 21 service_latency.go:356] Created: latency-svc-dd8k2
  I0722 19:22:14.389106 21 service_latency.go:363] Got endpoints: latency-svc-5r9h6 [739.560798ms]
  I0722 19:22:14.400964 21 service_latency.go:356] Created: latency-svc-cw657
  I0722 19:22:14.439257 21 service_latency.go:363] Got endpoints: latency-svc-l6fll [754.060925ms]
  I0722 19:22:14.449383 21 service_latency.go:356] Created: latency-svc-wznrp
  I0722 19:22:14.487137 21 service_latency.go:363] Got endpoints: latency-svc-p4fg7 [750.642968ms]
  I0722 19:22:14.498860 21 service_latency.go:356] Created: latency-svc-f8ldl
  I0722 19:22:14.536748 21 service_latency.go:363] Got endpoints: latency-svc-w6ppb [747.978604ms]
  I0722 19:22:14.548432 21 service_latency.go:356] Created: latency-svc-qlcn8
  I0722 19:22:14.588471 21 service_latency.go:363] Got endpoints: latency-svc-vslxg [751.451823ms]
  I0722 19:22:14.596796 21 service_latency.go:356] Created: latency-svc-djlm4
  I0722 19:22:14.638452 21 service_latency.go:363] Got endpoints: latency-svc-cj27v [748.329566ms]
  I0722 19:22:14.651973 21 service_latency.go:356] Created: latency-svc-txzjb
  I0722 19:22:14.688826 21 service_latency.go:363] Got endpoints: latency-svc-2977n [749.988391ms]
  I0722 19:22:14.701699 21 service_latency.go:356] Created: latency-svc-ksljq
  I0722 19:22:14.736969 21 service_latency.go:363] Got endpoints: latency-svc-q2snm [748.026913ms]
  I0722 19:22:14.745003 21 service_latency.go:356] Created: latency-svc-bm5vd
  I0722 19:22:14.788527 21 service_latency.go:363] Got endpoints: latency-svc-648g8 [751.942253ms]
  I0722 19:22:14.798637 21 service_latency.go:356] Created: latency-svc-bjwb7
  I0722 19:22:14.840762 21 service_latency.go:363] Got endpoints: latency-svc-8mlmj [751.325852ms]
  I0722 19:22:14.851879 21 service_latency.go:356] Created: latency-svc-9vrpx
  I0722 19:22:14.888695 21 service_latency.go:363] Got endpoints: latency-svc-krcdm [749.438548ms]
  I0722 19:22:14.899814 21 service_latency.go:356] Created: latency-svc-5nkn2
  I0722 19:22:14.937104 21 service_latency.go:363] Got endpoints: latency-svc-p5pr7 [748.179733ms]
  I0722 19:22:14.948753 21 service_latency.go:356] Created: latency-svc-sz2kn
  I0722 19:22:14.987262 21 service_latency.go:363] Got endpoints: latency-svc-2lkjh [746.791429ms]
  I0722 19:22:14.998520 21 service_latency.go:356] Created: latency-svc-2s4nj
  I0722 19:22:15.038937 21 service_latency.go:363] Got endpoints: latency-svc-8s6mv [752.324019ms]
  I0722 19:22:15.049414 21 service_latency.go:356] Created: latency-svc-zsc7s
  I0722 19:22:15.088354 21 service_latency.go:363] Got endpoints: latency-svc-dd8k2 [751.361061ms]
  I0722 19:22:15.100590 21 service_latency.go:356] Created: latency-svc-lsghr
  I0722 19:22:15.137980 21 service_latency.go:363] Got endpoints: latency-svc-cw657 [748.807502ms]
  I0722 19:22:15.153787 21 service_latency.go:356] Created: latency-svc-5djhg
  I0722 19:22:15.186441 21 service_latency.go:363] Got endpoints: latency-svc-wznrp [747.116946ms]
  I0722 19:22:15.193885 21 service_latency.go:356] Created: latency-svc-8v776
  I0722 19:22:15.239241 21 service_latency.go:363] Got endpoints: latency-svc-f8ldl [752.062792ms]
  I0722 19:22:15.248733 21 service_latency.go:356] Created: latency-svc-94kbm
  I0722 19:22:15.289127 21 service_latency.go:363] Got endpoints: latency-svc-qlcn8 [752.336528ms]
  I0722 19:22:15.300544 21 service_latency.go:356] Created: latency-svc-r8kfk
  I0722 19:22:15.338459 21 service_latency.go:363] Got endpoints: latency-svc-djlm4 [749.948457ms]
  I0722 19:22:15.348967 21 service_latency.go:356] Created: latency-svc-mthxk
  I0722 19:22:15.388743 21 service_latency.go:363] Got endpoints: latency-svc-txzjb [750.247965ms]
  I0722 19:22:15.401252 21 service_latency.go:356] Created: latency-svc-phjdp
  I0722 19:22:15.436511 21 service_latency.go:363] Got endpoints: latency-svc-ksljq [747.632805ms]
  I0722 19:22:15.447660 21 service_latency.go:356] Created: latency-svc-4b47r
  I0722 19:22:15.488914 21 service_latency.go:363] Got endpoints: latency-svc-bm5vd [751.874294ms]
  I0722 19:22:15.497383 21 service_latency.go:356] Created: latency-svc-tqp2c
  I0722 19:22:15.538914 21 service_latency.go:363] Got endpoints: latency-svc-bjwb7 [750.340276ms]
  I0722 19:22:15.550553 21 service_latency.go:356] Created: latency-svc-hckzv
  I0722 19:22:15.587969 21 service_latency.go:363] Got endpoints: latency-svc-9vrpx [747.154099ms]
  I0722 19:22:15.600508 21 service_latency.go:356] Created: latency-svc-mdcsk
  I0722 19:22:15.636262 21 service_latency.go:363] Got endpoints: latency-svc-5nkn2 [747.518454ms]
  I0722 19:22:15.647127 21 service_latency.go:356] Created: latency-svc-z98hf
  I0722 19:22:15.687155 21 service_latency.go:363] Got endpoints: latency-svc-sz2kn [750.007333ms]
  I0722 19:22:15.697135 21 service_latency.go:356] Created: latency-svc-6p474
  I0722 19:22:15.737343 21 service_latency.go:363] Got endpoints: latency-svc-2s4nj [750.036326ms]
  I0722 19:22:15.747674 21 service_latency.go:356] Created: latency-svc-5n6xv
  I0722 19:22:15.788520 21 service_latency.go:363] Got endpoints: latency-svc-zsc7s [749.537908ms]
  I0722 19:22:15.797773 21 service_latency.go:356] Created: latency-svc-gjtm4
  I0722 19:22:15.839575 21 service_latency.go:363] Got endpoints: latency-svc-lsghr [751.180566ms]
  I0722 19:22:15.848655 21 service_latency.go:356] Created: latency-svc-9rjnk
  I0722 19:22:15.887290 21 service_latency.go:363] Got endpoints: latency-svc-5djhg [749.258683ms]
  I0722 19:22:15.901786 21 service_latency.go:356] Created: latency-svc-tb6hz
  I0722 19:22:15.936649 21 service_latency.go:363] Got endpoints: latency-svc-8v776 [750.156377ms]
  I0722 19:22:15.946020 21 service_latency.go:356] Created: latency-svc-xk9fp
  I0722 19:22:15.988353 21 service_latency.go:363] Got endpoints: latency-svc-94kbm [749.068805ms]
  I0722 19:22:15.999639 21 service_latency.go:356] Created: latency-svc-js8zb
  I0722 19:22:16.038753 21 service_latency.go:363] Got endpoints: latency-svc-r8kfk [749.548395ms]
  I0722 19:22:16.049901 21 service_latency.go:356] Created: latency-svc-spxvh
  I0722 19:22:16.088702 21 service_latency.go:363] Got endpoints: latency-svc-mthxk [750.181294ms]
  I0722 19:22:16.098941 21 service_latency.go:356] Created: latency-svc-8d8s7
  I0722 19:22:16.137941 21 service_latency.go:363] Got endpoints: latency-svc-phjdp [749.158235ms]
  I0722 19:22:16.147697 21 service_latency.go:356] Created: latency-svc-bxc9h
  I0722 19:22:16.189829 21 service_latency.go:363] Got endpoints: latency-svc-4b47r [753.27213ms]
  I0722 19:22:16.198812 21 service_latency.go:356] Created: latency-svc-5z4xz
  I0722 19:22:16.238917 21 service_latency.go:363] Got endpoints: latency-svc-tqp2c [749.953499ms]
  I0722 19:22:16.249642 21 service_latency.go:356] Created: latency-svc-k984w
  I0722 19:22:16.288443 21 service_latency.go:363] Got endpoints: latency-svc-hckzv [749.32873ms]
  I0722 19:22:16.299146 21 service_latency.go:356] Created: latency-svc-lzpqn
  I0722 19:22:16.340303 21 service_latency.go:363] Got endpoints: latency-svc-mdcsk [752.288145ms]
  I0722 19:22:16.351011 21 service_latency.go:356] Created: latency-svc-lxp5x
  I0722 19:22:16.387916 21 service_latency.go:363] Got endpoints: latency-svc-z98hf [751.598793ms]
  I0722 19:22:16.395559 21 service_latency.go:356] Created: latency-svc-pvv2b
  I0722 19:22:16.439346 21 service_latency.go:363] Got endpoints: latency-svc-6p474 [752.154311ms]
  I0722 19:22:16.448902 21 service_latency.go:356] Created: latency-svc-gd59d
  I0722 19:22:16.486690 21 service_latency.go:363] Got endpoints: latency-svc-5n6xv [749.301105ms]
  I0722 19:22:16.501346 21 service_latency.go:356] Created: latency-svc-xm8bf
  I0722 19:22:16.536967 21 service_latency.go:363] Got endpoints: latency-svc-gjtm4 [748.399745ms]
  I0722 19:22:16.545156 21 service_latency.go:356] Created: latency-svc-smp72
  I0722 19:22:16.586777 21 service_latency.go:363] Got endpoints: latency-svc-9rjnk [747.124713ms]
  I0722 19:22:16.598428 21 service_latency.go:356] Created: latency-svc-rpnmx
  I0722 19:22:16.639894 21 service_latency.go:363] Got endpoints: latency-svc-tb6hz [752.560448ms]
  I0722 19:22:16.650489 21 service_latency.go:356] Created: latency-svc-7fj9z
  I0722 19:22:16.689336 21 service_latency.go:363] Got endpoints: latency-svc-xk9fp [752.647058ms]
  I0722 19:22:16.697408 21 service_latency.go:356] Created: latency-svc-796gr
  I0722 19:22:16.737035 21 service_latency.go:363] Got endpoints: latency-svc-js8zb [748.642903ms]
  I0722 19:22:16.745922 21 service_latency.go:356] Created: latency-svc-f4hkw
  I0722 19:22:16.788331 21 service_latency.go:363] Got endpoints: latency-svc-spxvh [749.529041ms]
  I0722 19:22:16.799587 21 service_latency.go:356] Created: latency-svc-9gsj4
  I0722 19:22:16.839001 21 service_latency.go:363] Got endpoints: latency-svc-8d8s7 [750.255805ms]
  I0722 19:22:16.849878 21 service_latency.go:356] Created: latency-svc-5w94j
  I0722 19:22:16.886880 21 service_latency.go:363] Got endpoints: latency-svc-bxc9h [748.902666ms]
  I0722 19:22:16.898314 21 service_latency.go:356] Created: latency-svc-qfwsx
  I0722 19:22:16.937741 21 service_latency.go:363] Got endpoints: latency-svc-5z4xz [747.856769ms]
  I0722 19:22:16.949279 21 service_latency.go:356] Created: latency-svc-zgpcv
  I0722 19:22:16.989641 21 service_latency.go:363] Got endpoints: latency-svc-k984w [750.666842ms]
  I0722 19:22:16.999701 21 service_latency.go:356] Created: latency-svc-ft6rm
  I0722 19:22:17.039200 21 service_latency.go:363] Got endpoints: latency-svc-lzpqn [750.714404ms]
  I0722 19:22:17.050733 21 service_latency.go:356] Created: latency-svc-pqk4m
  I0722 19:22:17.089525 21 service_latency.go:363] Got endpoints: latency-svc-lxp5x [749.175429ms]
  I0722 19:22:17.103188 21 service_latency.go:356] Created: latency-svc-f4dgb
  I0722 19:22:17.137113 21 service_latency.go:363] Got endpoints: latency-svc-pvv2b [749.159574ms]
  I0722 19:22:17.145987 21 service_latency.go:356] Created: latency-svc-gbsqd
  I0722 19:22:17.187196 21 service_latency.go:363] Got endpoints: latency-svc-gd59d [747.791351ms]
  I0722 19:22:17.196247 21 service_latency.go:356] Created: latency-svc-sqmkp
  I0722 19:22:17.239448 21 service_latency.go:363] Got endpoints: latency-svc-xm8bf [752.700384ms]
  I0722 19:22:17.250186 21 service_latency.go:356] Created: latency-svc-wprjv
  I0722 19:22:17.289195 21 service_latency.go:363] Got endpoints: latency-svc-smp72 [752.175096ms]
  I0722 19:22:17.299288 21 service_latency.go:356] Created: latency-svc-hczng
  I0722 19:22:17.338349 21 service_latency.go:363] Got endpoints: latency-svc-rpnmx [751.535112ms]
  I0722 19:22:17.350596 21 service_latency.go:356] Created: latency-svc-xwvzb
  I0722 19:22:17.388871 21 service_latency.go:363] Got endpoints: latency-svc-7fj9z [748.908174ms]
  I0722 19:22:17.399467 21 service_latency.go:356] Created: latency-svc-5wtnd
  I0722 19:22:17.437839 21 service_latency.go:363] Got endpoints: latency-svc-796gr [748.454569ms]
  I0722 19:22:17.448249 21 service_latency.go:356] Created: latency-svc-w6r2w
  I0722 19:22:17.486864 21 service_latency.go:363] Got endpoints: latency-svc-f4hkw [749.734623ms]
  I0722 19:22:17.497234 21 service_latency.go:356] Created: latency-svc-qj9zv
  I0722 19:22:17.539162 21 service_latency.go:363] Got endpoints: latency-svc-9gsj4 [750.779898ms]
  I0722 19:22:17.551649 21 service_latency.go:356] Created: latency-svc-dzjcw
  I0722 19:22:17.588223 21 service_latency.go:363] Got endpoints: latency-svc-5w94j [748.673037ms]
  I0722 19:22:17.597102 21 service_latency.go:356] Created: latency-svc-hnf2z
  I0722 19:22:17.639081 21 service_latency.go:363] Got endpoints: latency-svc-qfwsx [752.166017ms]
  I0722 19:22:17.648752 21 service_latency.go:356] Created: latency-svc-kvvcr
  I0722 19:22:17.687084 21 service_latency.go:363] Got endpoints: latency-svc-zgpcv [749.304073ms]
  I0722 19:22:17.702451 21 service_latency.go:356] Created: latency-svc-p4xlj
  I0722 19:22:17.736720 21 service_latency.go:363] Got endpoints: latency-svc-ft6rm [747.033439ms]
  I0722 19:22:17.744716 21 service_latency.go:356] Created: latency-svc-7gt4p
  I0722 19:22:17.787455 21 service_latency.go:363] Got endpoints: latency-svc-pqk4m [748.215832ms]
  I0722 19:22:17.799643 21 service_latency.go:356] Created: latency-svc-9zf95
  I0722 19:22:17.840023 21 service_latency.go:363] Got endpoints: latency-svc-f4dgb [750.454571ms]
  I0722 19:22:17.850956 21 service_latency.go:356] Created: latency-svc-hjt47
  I0722 19:22:17.889153 21 service_latency.go:363] Got endpoints: latency-svc-gbsqd [752.00084ms]
  I0722 19:22:17.900106 21 service_latency.go:356] Created: latency-svc-hgrqm
  I0722 19:22:17.936667 21 service_latency.go:363] Got endpoints: latency-svc-sqmkp [749.433316ms]
  I0722 19:22:17.945549 21 service_latency.go:356] Created: latency-svc-kp2f9
  I0722 19:22:17.988397 21 service_latency.go:363] Got endpoints: latency-svc-wprjv [748.869843ms]
  I0722 19:22:17.999560 21 service_latency.go:356] Created: latency-svc-v4xj8
  I0722 19:22:18.039196 21 service_latency.go:363] Got endpoints: latency-svc-hczng [749.960045ms]
  I0722 19:22:18.048959 21 service_latency.go:356] Created: latency-svc-5ddwp
  I0722 19:22:18.088794 21 service_latency.go:363] Got endpoints: latency-svc-xwvzb [750.39518ms]
  I0722 19:22:18.099106 21 service_latency.go:356] Created: latency-svc-s6xvq
  I0722 19:22:18.137988 21 service_latency.go:363] Got endpoints: latency-svc-5wtnd [749.069366ms]
  I0722 19:22:18.150578 21 service_latency.go:356] Created: latency-svc-pm7h5
  I0722 19:22:18.186558 21 service_latency.go:363] Got endpoints: latency-svc-w6r2w [748.677905ms]
  I0722 19:22:18.195244 21 service_latency.go:356] Created: latency-svc-sbrbd
  I0722 19:22:18.236454 21 service_latency.go:363] Got endpoints: latency-svc-qj9zv [749.55331ms]
  I0722 19:22:18.245667 21 service_latency.go:356] Created: latency-svc-xq5xm
  I0722 19:22:18.288862 21 service_latency.go:363] Got endpoints: latency-svc-dzjcw [749.656773ms]
  I0722 19:22:18.300696 21 service_latency.go:356] Created: latency-svc-hw5xq
  I0722 19:22:18.339126 21 service_latency.go:363] Got endpoints: latency-svc-hnf2z [750.817831ms]
  I0722 19:22:18.349065 21 service_latency.go:356] Created: latency-svc-d9ldv
  I0722 19:22:18.386761 21 service_latency.go:363] Got endpoints: latency-svc-kvvcr [747.64109ms]
  I0722 19:22:18.397893 21 service_latency.go:356] Created: latency-svc-bdc9v
  I0722 19:22:18.436819 21 service_latency.go:363] Got endpoints: latency-svc-p4xlj [749.693914ms]
  I0722 19:22:18.448440 21 service_latency.go:356] Created: latency-svc-frbwz
  I0722 19:22:18.489844 21 service_latency.go:363] Got endpoints: latency-svc-7gt4p [753.081962ms]
  I0722 19:22:18.498878 21 service_latency.go:356] Created: latency-svc-kjgcf
  I0722 19:22:18.538998 21 service_latency.go:363] Got endpoints: latency-svc-9zf95 [751.509724ms]
  I0722 19:22:18.548156 21 service_latency.go:356] Created: latency-svc-6qh9p
  I0722 19:22:18.592520 21 service_latency.go:363] Got endpoints: latency-svc-hjt47 [752.423042ms]
  I0722 19:22:18.605688 21 service_latency.go:356] Created: latency-svc-m6lbt
  I0722 19:22:18.638268 21 service_latency.go:363] Got endpoints: latency-svc-hgrqm [749.079587ms]
  I0722 19:22:18.646588 21 service_latency.go:356] Created: latency-svc-289zc
  I0722 19:22:18.691080 21 service_latency.go:363] Got endpoints: latency-svc-kp2f9 [754.37321ms]
  I0722 19:22:18.702197 21 service_latency.go:356] Created: latency-svc-cs49x
  I0722 19:22:18.739173 21 service_latency.go:363] Got endpoints: latency-svc-v4xj8 [750.724418ms]
  I0722 19:22:18.751653 21 service_latency.go:356] Created: latency-svc-zkl77
  I0722 19:22:18.789603 21 service_latency.go:363] Got endpoints: latency-svc-5ddwp [750.355381ms]
  I0722 19:22:18.798279 21 service_latency.go:356] Created: latency-svc-22znf
  I0722 19:22:18.837485 21 service_latency.go:363] Got endpoints: latency-svc-s6xvq [748.641254ms]
  I0722 19:22:18.847947 21 service_latency.go:356] Created: latency-svc-dqc7v
  I0722 19:22:18.889274 21 service_latency.go:363] Got endpoints: latency-svc-pm7h5 [751.247118ms]
  I0722 19:22:18.900178 21 service_latency.go:356] Created: latency-svc-bgtpl
  I0722 19:22:18.938855 21 service_latency.go:363] Got endpoints: latency-svc-sbrbd [752.255167ms]
  I0722 19:22:18.948785 21 service_latency.go:356] Created: latency-svc-kpqfz
  I0722 19:22:18.989717 21 service_latency.go:363] Got endpoints: latency-svc-xq5xm [753.224203ms]
  I0722 19:22:18.999881 21 service_latency.go:356] Created: latency-svc-mttlh
  I0722 19:22:19.039228 21 service_latency.go:363] Got endpoints: latency-svc-hw5xq [750.103128ms]
  I0722 19:22:19.052930 21 service_latency.go:356] Created: latency-svc-n7s5g
  I0722 19:22:19.086236 21 service_latency.go:363] Got endpoints: latency-svc-d9ldv [747.057811ms]
  I0722 19:22:19.094860 21 service_latency.go:356] Created: latency-svc-8dn9w
  I0722 19:22:19.139109 21 service_latency.go:363] Got endpoints: latency-svc-bdc9v [752.285078ms]
  I0722 19:22:19.150006 21 service_latency.go:356] Created: latency-svc-26bk9
  I0722 19:22:19.189024 21 service_latency.go:363] Got endpoints: latency-svc-frbwz [752.026261ms]
  I0722 19:22:19.197951 21 service_latency.go:356] Created: latency-svc-g4cgl
  I0722 19:22:19.239492 21 service_latency.go:363] Got endpoints: latency-svc-kjgcf [749.609717ms]
  I0722 19:22:19.246911 21 service_latency.go:356] Created: latency-svc-cfx2d
  I0722 19:22:19.289542 21 service_latency.go:363] Got endpoints: latency-svc-6qh9p [750.51714ms]
  I0722 19:22:19.301304 21 service_latency.go:356] Created: latency-svc-pwpn8
  I0722 19:22:19.338456 21 service_latency.go:363] Got endpoints: latency-svc-m6lbt [745.885492ms]
  I0722 19:22:19.349611 21 service_latency.go:356] Created: latency-svc-kq6n8
  I0722 19:22:19.387178 21 service_latency.go:363] Got endpoints: latency-svc-289zc [748.872596ms]
  I0722 19:22:19.394947 21 service_latency.go:356] Created: latency-svc-x7tmt
  I0722 19:22:19.439578 21 service_latency.go:363] Got endpoints: latency-svc-cs49x [748.450524ms]
  I0722 19:22:19.450145 21 service_latency.go:356] Created: latency-svc-v74x4
  I0722 19:22:19.487112 21 service_latency.go:363] Got endpoints: latency-svc-zkl77 [747.894172ms]
  I0722 19:22:19.497299 21 service_latency.go:356] Created: latency-svc-dn4sr
  I0722 19:22:19.538445 21 service_latency.go:363] Got endpoints: latency-svc-22znf [748.805192ms]
  I0722 19:22:19.548501 21 service_latency.go:356] Created: latency-svc-dt5c6
  I0722 19:22:19.586646 21 service_latency.go:363] Got endpoints: latency-svc-dqc7v [749.12419ms]
  I0722 19:22:19.598339 21 service_latency.go:356] Created: latency-svc-bl9jk
  I0722 19:22:19.636677 21 service_latency.go:363] Got endpoints: latency-svc-bgtpl [747.366119ms]
  I0722 19:22:19.648275 21 service_latency.go:356] Created: latency-svc-cgdq7
  I0722 19:22:19.688711 21 service_latency.go:363] Got endpoints: latency-svc-kpqfz [749.820961ms]
  I0722 19:22:19.696513 21 service_latency.go:356] Created: latency-svc-ghns6
  I0722 19:22:19.738366 21 service_latency.go:363] Got endpoints: latency-svc-mttlh [748.611747ms]
  I0722 19:22:19.747467 21 service_latency.go:356] Created: latency-svc-7n46w
  I0722 19:22:19.787083 21 service_latency.go:363] Got endpoints: latency-svc-n7s5g [747.812595ms]
  I0722 19:22:19.801590 21 service_latency.go:356] Created: latency-svc-9k4dz
  I0722 19:22:19.836973 21 service_latency.go:363] Got endpoints: latency-svc-8dn9w [750.704192ms]
  I0722 19:22:19.844546 21 service_latency.go:356] Created: latency-svc-gcrp9
  I0722 19:22:19.886587 21 service_latency.go:363] Got endpoints: latency-svc-26bk9 [747.445834ms]
  I0722 19:22:19.895596 21 service_latency.go:356] Created: latency-svc-d5q74
  I0722 19:22:19.938456 21 service_latency.go:363] Got endpoints: latency-svc-g4cgl [749.356386ms]
  I0722 19:22:19.948466 21 service_latency.go:356] Created: latency-svc-xrdkw
  I0722 19:22:19.988252 21 service_latency.go:363] Got endpoints: latency-svc-cfx2d [748.714155ms]
  I0722 19:22:19.996787 21 service_latency.go:356] Created: latency-svc-dvrrl
  I0722 19:22:20.038634 21 service_latency.go:363] Got endpoints: latency-svc-pwpn8 [749.05536ms]
  I0722 19:22:20.051203 21 service_latency.go:356] Created: latency-svc-rn2jm
  I0722 19:22:20.087390 21 service_latency.go:363] Got endpoints: latency-svc-kq6n8 [748.891917ms]
  I0722 19:22:20.098708 21 service_latency.go:356] Created: latency-svc-94qp8
  I0722 19:22:20.138154 21 service_latency.go:363] Got endpoints: latency-svc-x7tmt [750.91785ms]
  I0722 19:22:20.147266 21 service_latency.go:356] Created: latency-svc-vtkc7
  I0722 19:22:20.188865 21 service_latency.go:363] Got endpoints: latency-svc-v74x4 [749.227451ms]
  I0722 19:22:20.198841 21 service_latency.go:356] Created: latency-svc-7zjt6
  I0722 19:22:20.238517 21 service_latency.go:363] Got endpoints: latency-svc-dn4sr [751.375356ms]
  I0722 19:22:20.247942 21 service_latency.go:356] Created: latency-svc-rwpvq
  I0722 19:22:20.288723 21 service_latency.go:363] Got endpoints: latency-svc-dt5c6 [750.240173ms]
  I0722 19:22:20.298286 21 service_latency.go:356] Created: latency-svc-zxqfs
  I0722 19:22:20.338662 21 service_latency.go:363] Got endpoints: latency-svc-bl9jk [751.964732ms]
  I0722 19:22:20.350208 21 service_latency.go:356] Created: latency-svc-4r726
  I0722 19:22:20.387026 21 service_latency.go:363] Got endpoints: latency-svc-cgdq7 [750.300458ms]
  I0722 19:22:20.398741 21 service_latency.go:356] Created: latency-svc-zscvm
  I0722 19:22:20.437033 21 service_latency.go:363] Got endpoints: latency-svc-ghns6 [748.266614ms]
  I0722 19:22:20.445733 21 service_latency.go:356] Created: latency-svc-kq5kb
  I0722 19:22:20.489083 21 service_latency.go:363] Got endpoints: latency-svc-7n46w [750.671558ms]
  I0722 19:22:20.499542 21 service_latency.go:356] Created: latency-svc-zfzdc
  I0722 19:22:20.539039 21 service_latency.go:363] Got endpoints: latency-svc-9k4dz [751.918086ms]
  I0722 19:22:20.549656 21 service_latency.go:356] Created: latency-svc-jlx8g
  I0722 19:22:20.586782 21 service_latency.go:363] Got endpoints: latency-svc-gcrp9 [749.76069ms]
  I0722 19:22:20.596642 21 service_latency.go:356] Created: latency-svc-fdzs4
  I0722 19:22:20.637209 21 service_latency.go:363] Got endpoints: latency-svc-d5q74 [750.583955ms]
  I0722 19:22:20.646275 21 service_latency.go:356] Created: latency-svc-rk8nz
  I0722 19:22:20.687210 21 service_latency.go:363] Got endpoints: latency-svc-xrdkw [748.714834ms]
  I0722 19:22:20.698071 21 service_latency.go:356] Created: latency-svc-8gx6q
  I0722 19:22:20.738879 21 service_latency.go:363] Got endpoints: latency-svc-dvrrl [750.55245ms]
  I0722 19:22:20.747858 21 service_latency.go:356] Created: latency-svc-hmmln
  I0722 19:22:20.789200 21 service_latency.go:363] Got endpoints: latency-svc-rn2jm [750.527551ms]
  I0722 19:22:20.798880 21 service_latency.go:356] Created: latency-svc-9nfq9
  I0722 19:22:20.836992 21 service_latency.go:363] Got endpoints: latency-svc-94qp8 [749.558891ms]
  I0722 19:22:20.850250 21 service_latency.go:356] Created: latency-svc-n8xrq
  I0722 19:22:20.886400 21 service_latency.go:363] Got endpoints: latency-svc-vtkc7 [748.205775ms]
  I0722 19:22:20.893993 21 service_latency.go:356] Created: latency-svc-zdsc8
  I0722 19:22:20.938855 21 service_latency.go:363] Got endpoints: latency-svc-7zjt6 [749.954943ms]
  I0722 19:22:20.950168 21 service_latency.go:356] Created: latency-svc-sd7jt
  I0722 19:22:20.988614 21 service_latency.go:363] Got endpoints: latency-svc-rwpvq [750.06178ms]
  I0722 19:22:20.999257 21 service_latency.go:356] Created: latency-svc-8vf6c
  I0722 19:22:21.039335 21 service_latency.go:363] Got endpoints: latency-svc-zxqfs [750.573542ms]
  I0722 19:22:21.049894 21 service_latency.go:356] Created: latency-svc-d5f6s
  I0722 19:22:21.086541 21 service_latency.go:363] Got endpoints: latency-svc-4r726 [747.76737ms]
  I0722 19:22:21.096929 21 service_latency.go:356] Created: latency-svc-bq8h4
  I0722 19:22:21.137411 21 service_latency.go:363] Got endpoints: latency-svc-zscvm [750.336864ms]
  I0722 19:22:21.148146 21 service_latency.go:356] Created: latency-svc-t5xcm
  I0722 19:22:21.188789 21 service_latency.go:363] Got endpoints: latency-svc-kq5kb [751.690845ms]
  I0722 19:22:21.236627 21 service_latency.go:363] Got endpoints: latency-svc-zfzdc [747.50081ms]
  I0722 19:22:21.288826 21 service_latency.go:363] Got endpoints: latency-svc-jlx8g [749.725885ms]
  I0722 19:22:21.337003 21 service_latency.go:363] Got endpoints: latency-svc-fdzs4 [750.17759ms]
  I0722 19:22:21.387954 21 service_latency.go:363] Got endpoints: latency-svc-rk8nz [750.709831ms]
  I0722 19:22:21.439149 21 service_latency.go:363] Got endpoints: latency-svc-8gx6q [751.855053ms]
  I0722 19:22:21.489460 21 service_latency.go:363] Got endpoints: latency-svc-hmmln [750.519403ms]
  I0722 19:22:21.539090 21 service_latency.go:363] Got endpoints: latency-svc-9nfq9 [749.849257ms]
  I0722 19:22:21.588962 21 service_latency.go:363] Got endpoints: latency-svc-n8xrq [751.782137ms]
  I0722 19:22:21.639201 21 service_latency.go:363] Got endpoints: latency-svc-zdsc8 [752.753694ms]
  I0722 19:22:21.689119 21 service_latency.go:363] Got endpoints: latency-svc-sd7jt [750.220025ms]
  I0722 19:22:21.739236 21 service_latency.go:363] Got endpoints: latency-svc-8vf6c [750.578615ms]
  I0722 19:22:21.790026 21 service_latency.go:363] Got endpoints: latency-svc-d5f6s [750.645449ms]
  I0722 19:22:21.838931 21 service_latency.go:363] Got endpoints: latency-svc-bq8h4 [752.346929ms]
  I0722 19:22:21.888872 21 service_latency.go:363] Got endpoints: latency-svc-t5xcm [751.369968ms]
  I0722 19:22:21.888998 21 service_latency.go:114] Latencies: [18.223699ms 27.579969ms 32.233235ms 43.507476ms 50.15209ms 56.860056ms 66.040407ms 77.972223ms 83.519997ms 95.240886ms 107.980922ms 109.49712ms 118.070117ms 126.079048ms 126.111927ms 126.801579ms 127.981226ms 128.101113ms 128.431971ms 128.817147ms 128.825803ms 129.609054ms 130.078298ms 130.823987ms 130.950581ms 131.038345ms 131.342732ms 131.716926ms 132.274425ms 132.367202ms 132.388858ms 134.157888ms 135.488704ms 136.26277ms 137.762562ms 154.22982ms 200.288603ms 244.017864ms 284.233604ms 328.844694ms 364.745855ms 410.544118ms 446.29344ms 489.905921ms 531.268064ms 574.548237ms 615.37044ms 658.951347ms 697.199309ms 739.560798ms 745.885492ms 746.791429ms 747.033439ms 747.057811ms 747.116946ms 747.124713ms 747.154099ms 747.366119ms 747.445834ms 747.50081ms 747.518454ms 747.632805ms 747.64109ms 747.76737ms 747.791351ms 747.812595ms 747.856769ms 747.894172ms 747.978604ms 748.026913ms 748.179733ms 748.205775ms 748.215832ms 748.266614ms 748.329566ms 748.399745ms 748.450524ms 748.454569ms 748.611747ms 748.641254ms 748.642903ms 748.673037ms 748.677905ms 748.714155ms 748.714834ms 748.805192ms 748.807502ms 748.869843ms 748.872596ms 748.891917ms 748.902666ms 748.908174ms 749.05536ms 749.068805ms 749.069366ms 749.079587ms 749.12419ms 749.158235ms 749.159574ms 749.175429ms 749.227451ms 749.258683ms 749.301105ms 749.304073ms 749.32873ms 749.356386ms 749.433316ms 749.438548ms 749.529041ms 749.537908ms 749.548395ms 749.55331ms 749.558891ms 749.609717ms 749.656773ms 749.693914ms 749.725885ms 749.734623ms 749.76069ms 749.820961ms 749.849257ms 749.948457ms 749.953499ms 749.954943ms 749.960045ms 749.988391ms 750.007333ms 750.036326ms 750.06178ms 750.103128ms 750.156377ms 750.17759ms 750.181294ms 750.220025ms 750.240173ms 750.247965ms 750.255805ms 750.300458ms 750.336864ms 750.340276ms 750.355381ms 750.39518ms 750.454571ms 750.51714ms 750.519403ms 750.527551ms 750.55245ms 750.573542ms 750.578615ms 750.583955ms 750.642968ms 750.645449ms 750.666842ms 750.671558ms 750.704192ms 750.709831ms 750.714404ms 750.724418ms 750.779898ms 750.817831ms 750.91785ms 751.180566ms 751.247118ms 751.325852ms 751.361061ms 751.369968ms 751.375356ms 751.451823ms 751.509724ms 751.535112ms 751.598793ms 751.690845ms 751.782137ms 751.855053ms 751.874294ms 751.918086ms 751.942253ms 751.964732ms 752.00084ms 752.026261ms 752.062792ms 752.154311ms 752.166017ms 752.175096ms 752.255167ms 752.285078ms 752.288145ms 752.324019ms 752.336528ms 752.346929ms 752.423042ms 752.560448ms 752.647058ms 752.700384ms 752.753694ms 753.081962ms 753.224203ms 753.27213ms 754.060925ms 754.37321ms]
  I0722 19:22:21.889014 21 service_latency.go:118] 50 %ile: 749.227451ms
  I0722 19:22:21.889021 21 service_latency.go:119] 90 %ile: 752.062792ms
  I0722 19:22:21.889028 21 service_latency.go:120] 99 %ile: 754.060925ms
  I0722 19:22:21.889034 21 service_latency.go:121] Total sample count: 200
  I0722 19:22:21.889146 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2565" for this suite. @ 07/22/25 19:22:21.892
• [10.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 07/22/25 19:22:21.9
  I0722 19:22:21.900032 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 19:22:21.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:21.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:21.912
  STEP: set up a multi version CRD @ 07/22/25 19:22:21.913
  I0722 19:22:21.914293 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: mark a version not serverd @ 07/22/25 19:22:25.057
  STEP: check the unserved version gets removed @ 07/22/25 19:22:25.071
  STEP: check the other version is not changed @ 07/22/25 19:22:25.777
  I0722 19:22:28.275163 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8127" for this suite. @ 07/22/25 19:22:28.282
• [6.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 07/22/25 19:22:28.29
  I0722 19:22:28.291007 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 19:22:28.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:28.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:28.309
  STEP: Creating a test headless service @ 07/22/25 19:22:28.314
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8571.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-8571.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/22/25 19:22:28.321
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8571.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8571.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/22/25 19:22:28.321
  STEP: creating a pod to probe DNS @ 07/22/25 19:22:28.321
  STEP: submitting the pod to kubernetes @ 07/22/25 19:22:28.321
  STEP: retrieving the pod @ 07/22/25 19:22:30.35
  STEP: looking for the results for each expected name from probers @ 07/22/25 19:22:30.356
  I0722 19:22:30.375646 21 dns_common.go:546] DNS probes using dns-8571/dns-test-10e8ca33-4f1b-46c4-8813-0cc4f4266935 succeeded

  STEP: deleting the pod @ 07/22/25 19:22:30.375
  STEP: deleting the test headless service @ 07/22/25 19:22:30.391
  I0722 19:22:30.405560 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8571" for this suite. @ 07/22/25 19:22:30.412
• [2.129 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/22/25 19:22:30.419
  I0722 19:22:30.419664 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename watch @ 07/22/25 19:22:30.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:30.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:30.436
  STEP: getting a starting resourceVersion @ 07/22/25 19:22:30.439
  STEP: starting a background goroutine to produce watch events @ 07/22/25 19:22:30.444
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/22/25 19:22:30.444
  I0722 19:22:33.227766 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5350" for this suite. @ 07/22/25 19:22:33.275
• [2.909 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/22/25 19:22:33.328
  I0722 19:22:33.328630 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:22:33.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:33.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:33.349
  STEP: Creating projection with secret that has name projected-secret-test-c3e32914-5f86-4800-b63a-b17ae0bc8d26 @ 07/22/25 19:22:33.352
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:22:33.36
  STEP: Saw pod success @ 07/22/25 19:22:37.391
  I0722 19:22:37.395307 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-secrets-6a6d0910-38d7-4d01-9e5d-7576d0a22f0f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:22:37.406
  I0722 19:22:37.423659 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5802" for this suite. @ 07/22/25 19:22:37.428
• [4.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/22/25 19:22:37.435
  I0722 19:22:37.435748 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename watch @ 07/22/25 19:22:37.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:37.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:37.452
  STEP: creating a watch on configmaps @ 07/22/25 19:22:37.455
  STEP: creating a new configmap @ 07/22/25 19:22:37.46
  STEP: modifying the configmap once @ 07/22/25 19:22:37.465
  STEP: closing the watch once it receives two notifications @ 07/22/25 19:22:37.474
  I0722 19:22:37.474929 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-776  27819901-2fa9-4dbc-b21d-d52c76559060 23232 0 2025-07-22 19:22:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 19:22:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:22:37.475022 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-776  27819901-2fa9-4dbc-b21d-d52c76559060 23233 0 2025-07-22 19:22:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 19:22:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/22/25 19:22:37.475
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/22/25 19:22:37.483
  STEP: deleting the configmap @ 07/22/25 19:22:37.484
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/22/25 19:22:37.492
  I0722 19:22:37.492690 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-776  27819901-2fa9-4dbc-b21d-d52c76559060 23234 0 2025-07-22 19:22:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 19:22:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:22:37.492775 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-776  27819901-2fa9-4dbc-b21d-d52c76559060 23235 0 2025-07-22 19:22:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-22 19:22:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 19:22:37.492925 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-776" for this suite. @ 07/22/25 19:22:37.53
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/22/25 19:22:37.537
  I0722 19:22:37.537277 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:22:37.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:37.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:37.554
  STEP: Creating secret with name secret-test-678fa69e-ad83-4529-9915-20bfd64a2679 @ 07/22/25 19:22:37.556
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:22:37.561
  STEP: Saw pod success @ 07/22/25 19:22:41.587
  I0722 19:22:41.592146 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-secrets-66687784-edab-4113-ad68-a08a67eccc8f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:22:41.598
  I0722 19:22:41.615772 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2522" for this suite. @ 07/22/25 19:22:41.619
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/22/25 19:22:41.628
  I0722 19:22:41.628838 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:22:41.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:41.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:41.644
  STEP: creating secret secrets-7879/secret-test-66e90280-0b50-40b3-9155-c5313ce159cf @ 07/22/25 19:22:41.646
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:22:41.652
  STEP: Saw pod success @ 07/22/25 19:22:45.678
  I0722 19:22:45.682143 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-542a08b6-86a2-4db3-a58f-da75fcb30675 container env-test: <nil>
  STEP: delete the pod @ 07/22/25 19:22:45.69
  I0722 19:22:45.707950 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7879" for this suite. @ 07/22/25 19:22:45.712
• [4.091 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/22/25 19:22:45.719
  I0722 19:22:45.719479 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 19:22:45.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:45.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:45.738
  STEP: getting /apis @ 07/22/25 19:22:45.747
  STEP: getting /apis/admissionregistration.k8s.io @ 07/22/25 19:22:45.751
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/22/25 19:22:45.752
  STEP: creating @ 07/22/25 19:22:45.754
  STEP: getting @ 07/22/25 19:22:45.775
  STEP: listing @ 07/22/25 19:22:45.78
  STEP: watching @ 07/22/25 19:22:45.783
  I0722 19:22:45.783229 21 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/22/25 19:22:45.784
  STEP: updating @ 07/22/25 19:22:45.794
  I0722 19:22:45.805274 21 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0722 19:22:45.805308 21 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/22/25 19:22:45.805
  STEP: patching /status @ 07/22/25 19:22:45.811
  STEP: updating /status @ 07/22/25 19:22:45.82
  STEP: deleting @ 07/22/25 19:22:45.854
  STEP: deleting a collection @ 07/22/25 19:22:45.866
  I0722 19:22:45.890243 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3127" for this suite. @ 07/22/25 19:22:45.893
• [0.182 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/22/25 19:22:45.901
  I0722 19:22:45.901862 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:22:45.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:45.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:45.92
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/22/25 19:22:45.925
  STEP: Saw pod success @ 07/22/25 19:22:47.947
  I0722 19:22:47.951354 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-01136e43-8099-4cb2-9925-132f2ee25bdb container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:22:47.958
  I0722 19:22:47.977412 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-653" for this suite. @ 07/22/25 19:22:47.982
• [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/22/25 19:22:47.99
  I0722 19:22:47.990095 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 19:22:47.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:48.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:48.006
  STEP: Creating simple DaemonSet "daemon-set" @ 07/22/25 19:22:48.099
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 19:22:48.106
  I0722 19:22:48.184104 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:22:48.184141 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:22:48.188312 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:22:48.188333 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:22:49.112555 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:22:49.112602 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:22:49.117603 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 19:22:49.117623 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:22:50.112315 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:22:50.112353 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:22:50.116799 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 19:22:50.116818 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/22/25 19:22:50.12
  I0722 19:22:50.124233 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/22/25 19:22:50.124
  I0722 19:22:50.133726 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/22/25 19:22:50.133
  I0722 19:22:50.135372 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0722 19:22:50.135442 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.135495 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.135696 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.135771 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.135789 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8588 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 19:22:50.135795 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/22/25 19:22:50.135
  STEP: watching for the daemon set status to be patched @ 07/22/25 19:22:50.143
  I0722 19:22:50.145661 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0722 19:22:50.145745 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.145800 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.145953 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.146088 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.146104 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8588 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 19:22:50.146207 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0722 19:22:50.146230 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8588 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0722 19:22:50.146240 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 19:22:50.149
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8588, will wait for the garbage collector to delete the pods @ 07/22/25 19:22:50.149
  I0722 19:22:50.211784 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.207306ms
  I0722 19:22:50.312780 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.991113ms
  I0722 19:22:51.717440 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:22:51.717472 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 19:22:51.722091 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23503"},"items":null}

  I0722 19:22:51.725929 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23503"},"items":null}

  I0722 19:22:51.740469 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8588" for this suite. @ 07/22/25 19:22:51.744
• [3.762 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/22/25 19:22:51.752
  I0722 19:22:51.752261 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename containers @ 07/22/25 19:22:51.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:51.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:51.769
  I0722 19:22:53.801174 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9257" for this suite. @ 07/22/25 19:22:53.806
• [2.061 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/22/25 19:22:53.813
  I0722 19:22:53.813425 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:22:53.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:53.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:53.832
  STEP: Setting up server cert @ 07/22/25 19:22:53.852
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:22:54.011
  STEP: Deploying the webhook pod @ 07/22/25 19:22:54.019
  STEP: Wait for the deployment to be ready @ 07/22/25 19:22:54.033
  I0722 19:22:54.040525 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:22:56.054
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:22:56.065
  I0722 19:22:57.066404 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/22/25 19:22:57.074
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/22/25 19:22:57.09
  STEP: Creating a dummy validating-webhook-configuration object @ 07/22/25 19:22:57.103
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/22/25 19:22:57.113
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/22/25 19:22:57.12
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/22/25 19:22:57.128
  I0722 19:22:57.188188 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3880" for this suite. @ 07/22/25 19:22:57.192
  STEP: Destroying namespace "webhook-markers-9515" for this suite. @ 07/22/25 19:22:57.201
• [3.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/22/25 19:22:57.209
  I0722 19:22:57.209176 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:22:57.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:22:57.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:22:57.226
  STEP: Creating projection with secret that has name projected-secret-test-0d99c73a-6e14-4d9a-a521-3e2944f7f774 @ 07/22/25 19:22:57.229
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:22:57.234
  STEP: Saw pod success @ 07/22/25 19:23:01.256
  I0722 19:23:01.260198 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-projected-secrets-99372584-b2ff-4aad-beed-c16cefa703fa container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:23:01.275
  I0722 19:23:01.290902 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4825" for this suite. @ 07/22/25 19:23:01.295
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/22/25 19:23:01.304
  I0722 19:23:01.304255 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename disruption @ 07/22/25 19:23:01.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:23:01.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:23:01.324
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/22/25 19:23:01.326
  STEP: Waiting for the pdb to be processed @ 07/22/25 19:23:01.332
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/22/25 19:23:03.343
  STEP: Waiting for all pods to be running @ 07/22/25 19:23:03.343
  I0722 19:23:03.347950 21 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 07/22/25 19:23:05.35
  STEP: Updating the pdb to allow a pod to be evicted @ 07/22/25 19:23:05.361
  STEP: Waiting for the pdb to be processed @ 07/22/25 19:23:05.372
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/22/25 19:23:07.377
  STEP: Waiting for all pods to be running @ 07/22/25 19:23:07.377
  STEP: Waiting for the pdb to observed all healthy pods @ 07/22/25 19:23:07.382
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/22/25 19:23:07.412
  STEP: Waiting for the pdb to be processed @ 07/22/25 19:23:07.429
  STEP: Waiting for all pods to be running @ 07/22/25 19:23:09.435
  STEP: locating a running pod @ 07/22/25 19:23:09.44
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/22/25 19:23:09.45
  STEP: Waiting for the pdb to be deleted @ 07/22/25 19:23:09.459
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/22/25 19:23:09.463
  STEP: Waiting for all pods to be running @ 07/22/25 19:23:09.463
  I0722 19:23:09.559172 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8517" for this suite. @ 07/22/25 19:23:09.563
• [8.270 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 07/22/25 19:23:09.574
  I0722 19:23:09.574685 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:23:09.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:23:09.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:23:09.598
  STEP: Setting up server cert @ 07/22/25 19:23:09.622
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:23:09.978
  STEP: Deploying the webhook pod @ 07/22/25 19:23:09.986
  STEP: Wait for the deployment to be ready @ 07/22/25 19:23:10.002
  I0722 19:23:10.012035 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:23:12.026
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:23:12.039
  I0722 19:23:13.039722 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/22/25 19:23:13.049
  STEP: create the configmap with a random name @ 07/22/25 19:23:13.066
  STEP: verify the configmap is mutated @ 07/22/25 19:23:13.076
  STEP: create the configmap with 'skip-me' name @ 07/22/25 19:23:13.076
  I0722 19:23:13.130930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6764" for this suite. @ 07/22/25 19:23:13.137
  STEP: Destroying namespace "webhook-markers-4481" for this suite. @ 07/22/25 19:23:13.145
• [3.577 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 07/22/25 19:23:13.151
  I0722 19:23:13.151447 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:23:13.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:23:13.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:23:13.17
  STEP: Setting up server cert @ 07/22/25 19:23:13.19
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:23:13.704
  STEP: Deploying the webhook pod @ 07/22/25 19:23:13.71
  STEP: Wait for the deployment to be ready @ 07/22/25 19:23:13.725
  I0722 19:23:13.742946 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:23:15.756
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:23:15.767
  I0722 19:23:16.767687 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/22/25 19:23:16.776
  I0722 19:23:16.824766 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9361" for this suite. @ 07/22/25 19:23:16.829
  STEP: Destroying namespace "webhook-markers-2815" for this suite. @ 07/22/25 19:23:16.835
• [3.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/22/25 19:23:16.845
  I0722 19:23:16.845487 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:23:16.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:23:16.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:23:16.87
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 19:23:16.873
  STEP: Saw pod success @ 07/22/25 19:23:18.888
  I0722 19:23:18.892921 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-1f330fe5-d1ec-4366-8ba8-71088241c185 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 19:23:18.906
  I0722 19:23:18.925095 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7915" for this suite. @ 07/22/25 19:23:18.93
• [2.091 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 07/22/25 19:23:18.936
  I0722 19:23:18.936767 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 19:23:18.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:23:18.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:23:18.955
  STEP: Creating service test in namespace statefulset-356 @ 07/22/25 19:23:18.958
  STEP: Creating stateful set ss in namespace statefulset-356 @ 07/22/25 19:23:18.965
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-356 @ 07/22/25 19:23:18.973
  I0722 19:23:18.978723 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0722 19:23:28.983704 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/22/25 19:23:28.983
  I0722 19:23:28.987788 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 19:23:29.078094 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 19:23:29.078132 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 19:23:29.078142 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 19:23:29.083953 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0722 19:23:39.088824 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 19:23:39.088866 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0722 19:23:39.113621 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999823s
  I0722 19:23:40.119689 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.989713111s
  I0722 19:23:41.125011 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.983308221s
  I0722 19:23:42.130895 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.978327221s
  I0722 19:23:43.136497 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.972380879s
  I0722 19:23:44.141284 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.966859693s
  I0722 19:23:45.147013 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.962121807s
  I0722 19:23:46.152796 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.956367498s
  I0722 19:23:47.158081 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.950264688s
  I0722 19:23:48.164767 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 944.317237ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-356 @ 07/22/25 19:23:49.165
  I0722 19:23:49.171109 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 19:23:49.258597 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 19:23:49.258628 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 19:23:49.258637 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 19:23:49.258681 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 19:23:49.341322 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0722 19:23:49.341355 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 19:23:49.341363 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 19:23:49.341402 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 19:23:49.423543 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0722 19:23:49.423580 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 19:23:49.423592 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 19:23:49.428291 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0722 19:23:59.429086 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 19:23:59.429117 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 19:23:59.429125 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/22/25 19:23:59.429
  I0722 19:23:59.433357 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 19:23:59.508640 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 19:23:59.508672 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 19:23:59.508683 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 19:23:59.508727 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 19:23:59.597527 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 19:23:59.597562 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 19:23:59.597573 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 19:23:59.597633 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-356 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 19:23:59.681854 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 19:23:59.681890 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 19:23:59.681900 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 19:23:59.681910 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0722 19:23:59.689122 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0722 19:24:09.697147 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0722 19:24:09.697199 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0722 19:24:09.697206 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0722 19:24:09.717224 21 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0722 19:24:09.717276 21 resource.go:175] ss-0  ip-172-31-31-147  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:18 +0000 UTC  }]
  I0722 19:24:09.717292 21 resource.go:175] ss-1  ip-172-31-68-73   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC  }]
  I0722 19:24:09.717309 21 resource.go:175] ss-2  ip-172-31-7-234   Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:24:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:24:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC  }]
  I0722 19:24:09.717315 21 resource.go:178] 
  I0722 19:24:09.717322 21 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0722 19:24:10.724222 21 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I0722 19:24:10.724278 21 resource.go:175] ss-0  ip-172-31-31-147  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:24:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:18 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:18 +0000 UTC  }]
  I0722 19:24:10.724296 21 resource.go:175] ss-1  ip-172-31-68-73   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:24:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:23:39 +0000 UTC  }]
  I0722 19:24:10.724301 21 resource.go:178] 
  I0722 19:24:10.724309 21 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 2
  I0722 19:24:11.729318 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.984182582s
  I0722 19:24:12.735645 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.978476147s
  I0722 19:24:13.741190 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.97248447s
  I0722 19:24:14.748107 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.966476521s
  I0722 19:24:15.754548 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.959500592s
  I0722 19:24:16.760285 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.953483688s
  I0722 19:24:17.766168 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.948251747s
  I0722 19:24:18.772281 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 942.196288ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-356 @ 07/22/25 19:24:19.772
  I0722 19:24:19.777011 21 rest.go:152] Scaling statefulset ss to 0
  I0722 19:24:19.783242 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 19:24:19.786984 21 statefulset.go:138] Deleting all statefulset in ns statefulset-356
  I0722 19:24:19.791741 21 rest.go:152] Scaling statefulset ss to 0
  I0722 19:24:19.798118 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 19:24:19.801529 21 rest.go:90] Deleting statefulset ss
  I0722 19:24:19.815809 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-356" for this suite. @ 07/22/25 19:24:19.819
• [60.890 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 07/22/25 19:24:19.827
  I0722 19:24:19.827309 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:24:19.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:24:19.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:24:19.846
  I0722 19:24:19.849692 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1268 version'
  I0722 19:24:19.889814 21 builder.go:146] stderr: ""
  I0722 19:24:19.889844 21 builder.go:147] stdout: "Client Version: v1.32.7\nKustomize Version: v5.5.0\nServer Version: v1.32.7\n"
  I0722 19:24:19.890099 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1268" for this suite. @ 07/22/25 19:24:19.92
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/22/25 19:24:19.928
  I0722 19:24:19.928449 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:24:19.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:24:19.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:24:19.947
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 19:24:19.95
  STEP: Saw pod success @ 07/22/25 19:24:21.971
  I0722 19:24:21.975349 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-b8a17fa9-cb84-4265-b12a-d37e6e494e34 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 19:24:21.982
  I0722 19:24:22.001283 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3017" for this suite. @ 07/22/25 19:24:22.005
• [2.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/22/25 19:24:22.012
  I0722 19:24:22.012294 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:24:22.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:24:22.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:24:22.028
  STEP: creating pod @ 07/22/25 19:24:22.031
  I0722 19:24:24.057482 21 pods.go:83] Pod pod-hostip-944083c9-791c-4729-9eda-52c6cac833e7 has hostIP: 172.31.31.147
  I0722 19:24:24.057589 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8963" for this suite. @ 07/22/25 19:24:24.062
• [2.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/22/25 19:24:24.071
  I0722 19:24:24.071300 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:24:24.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:24:24.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:24:24.087
  STEP: Setting up server cert @ 07/22/25 19:24:24.11
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:24:24.356
  STEP: Deploying the webhook pod @ 07/22/25 19:24:24.364
  STEP: Wait for the deployment to be ready @ 07/22/25 19:24:24.378
  I0722 19:24:24.390188 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:24:26.403
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:24:26.416
  I0722 19:24:27.416454 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 19:24:27.426563 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/22/25 19:24:27.938
  STEP: Creating a custom resource that should be denied by the webhook @ 07/22/25 19:24:27.956
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/22/25 19:24:29.98
  STEP: Updating the custom resource with disallowed data should be denied @ 07/22/25 19:24:29.987
  STEP: Deleting the custom resource should be denied @ 07/22/25 19:24:29.998
  STEP: Remove the offending key and value from the custom resource data @ 07/22/25 19:24:30.006
  STEP: Deleting the updated custom resource should be successful @ 07/22/25 19:24:30.018
  I0722 19:24:30.593072 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5388" for this suite. @ 07/22/25 19:24:30.599
  STEP: Destroying namespace "webhook-markers-4955" for this suite. @ 07/22/25 19:24:30.606
• [6.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/22/25 19:24:30.614
  I0722 19:24:30.614172 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename subpath @ 07/22/25 19:24:30.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:24:30.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:24:30.633
  STEP: Setting up data @ 07/22/25 19:24:30.636
  STEP: Creating pod pod-subpath-test-configmap-w5x8 @ 07/22/25 19:24:30.645
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 19:24:30.645
  STEP: Saw pod success @ 07/22/25 19:24:54.738
  I0722 19:24:54.742390 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-subpath-test-configmap-w5x8 container test-container-subpath-configmap-w5x8: <nil>
  STEP: delete the pod @ 07/22/25 19:24:54.749
  STEP: Deleting pod pod-subpath-test-configmap-w5x8 @ 07/22/25 19:24:54.765
  I0722 19:24:54.765810 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-w5x8" in namespace "subpath-7314"
  I0722 19:24:54.770128 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7314" for this suite. @ 07/22/25 19:24:54.774
• [24.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/22/25 19:24:54.784
  I0722 19:24:54.784800 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename chunking @ 07/22/25 19:24:54.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:24:54.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:24:54.8
  STEP: creating a large number of resources @ 07/22/25 19:24:54.803
  STEP: retrieving the first page @ 07/22/25 19:25:12.492
  I0722 19:25:12.540448 21 chunking.go:163] Retrieved 40/40 results with rv 25144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 07/22/25 19:25:12.54
  I0722 19:25:32.547809 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:25:52.546572 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:26:12.547742 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:26:32.547985 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:26:52.548921 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:27:12.546015 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:27:32.548782 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:27:52.547897 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:28:12.547936 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:28:32.547930 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:28:52.547305 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:29:12.546472 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:29:32.547501 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:29:52.549147 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:30:12.548467 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:30:32.548504 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:30:52.548778 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:31:12.545961 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:31:32.548309 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:31:52.548419 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0722 19:32:12.547700 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0722 19:32:12.547734 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/22/25 19:32:12.547
  STEP: retrieving all remaining pages @ 07/22/25 19:32:12.552
  I0722 19:32:12.556817 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0722 19:32:12.561585 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0722 19:32:12.566303 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0722 19:32:12.570220 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0722 19:32:12.575122 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0722 19:32:12.579934 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0722 19:32:12.583808 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwMzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0722 19:32:12.588445 21 chunking.go:221] Retrieved 40/40 results with rv 26030 and continue 
  I0722 19:32:12.588624 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7704" for this suite. @ 07/22/25 19:32:12.593
• [437.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/22/25 19:32:12.601
  I0722 19:32:12.601421 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename conformance-tests @ 07/22/25 19:32:12.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:12.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:12.629
  STEP: Getting node addresses @ 07/22/25 19:32:12.633
  I0722 19:32:12.634102 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0722 19:32:12.694661 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1097" for this suite. @ 07/22/25 19:32:12.698
• [0.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/22/25 19:32:12.707
  I0722 19:32:12.707732 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:32:12.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:12.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:12.724
  STEP: Creating configMap with name cm-test-opt-del-bed5bb14-91e7-4592-95c7-afe6a3a12a0a @ 07/22/25 19:32:12.795
  STEP: Creating configMap with name cm-test-opt-upd-a2994086-8f67-4968-8c16-68c19c4cd26f @ 07/22/25 19:32:12.8
  STEP: Creating the pod @ 07/22/25 19:32:12.805
  STEP: Deleting configmap cm-test-opt-del-bed5bb14-91e7-4592-95c7-afe6a3a12a0a @ 07/22/25 19:32:14.864
  STEP: Updating configmap cm-test-opt-upd-a2994086-8f67-4968-8c16-68c19c4cd26f @ 07/22/25 19:32:14.873
  STEP: Creating configMap with name cm-test-opt-create-1fb51368-2a1d-479c-80e5-20391ceed7c8 @ 07/22/25 19:32:14.878
  STEP: waiting to observe update in volume @ 07/22/25 19:32:14.884
  I0722 19:32:18.922106 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8681" for this suite. @ 07/22/25 19:32:18.927
• [6.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 07/22/25 19:32:18.934
  I0722 19:32:18.934384 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:32:18.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:18.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:18.953
  STEP: Starting the proxy @ 07/22/25 19:32:18.956
  I0722 19:32:18.956760 21 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-5685 proxy --unix-socket=/tmp/kubectl-proxy-unix4268102611/test'
  STEP: retrieving proxy /api/ output @ 07/22/25 19:32:18.988
  I0722 19:32:18.988649 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5685" for this suite. @ 07/22/25 19:32:19.028
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/22/25 19:32:19.035
  I0722 19:32:19.035723 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:32:19.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:19.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:19.051
  STEP: Setting up server cert @ 07/22/25 19:32:19.076
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:32:19.313
  STEP: Deploying the webhook pod @ 07/22/25 19:32:19.32
  STEP: Wait for the deployment to be ready @ 07/22/25 19:32:19.332
  I0722 19:32:19.341652 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:32:21.357
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:32:21.369
  I0722 19:32:22.370163 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0722 19:32:22.380188 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2249-crds.webhook.example.com via the AdmissionRegistration API @ 07/22/25 19:32:22.892
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/22/25 19:32:22.908
  I0722 19:32:25.498166 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-53" for this suite. @ 07/22/25 19:32:25.502
  STEP: Destroying namespace "webhook-markers-333" for this suite. @ 07/22/25 19:32:25.508
• [6.480 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/22/25 19:32:25.516
  I0722 19:32:25.516213 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 19:32:25.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:25.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:25.536
  I0722 19:32:25.615367 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/22/25 19:32:25.622
  I0722 19:32:25.627874 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:32:25.627894 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/22/25 19:32:25.627
  I0722 19:32:25.728545 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:32:25.728569 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:32:26.723604 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 19:32:26.723640 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/22/25 19:32:26.727
  I0722 19:32:26.754393 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:32:26.754421 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/22/25 19:32:26.754
  I0722 19:32:26.825033 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:32:26.825087 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:32:27.769249 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:32:27.769284 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:32:28.769255 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0722 19:32:28.769284 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 19:32:28.777
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-767, will wait for the garbage collector to delete the pods @ 07/22/25 19:32:28.777
  I0722 19:32:28.839437 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.88506ms
  I0722 19:32:28.940106 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.663667ms
  I0722 19:32:30.544092 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 19:32:30.544131 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 19:32:30.548164 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26688"},"items":null}

  I0722 19:32:30.551731 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26688"},"items":null}

  I0722 19:32:30.576736 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-767" for this suite. @ 07/22/25 19:32:30.658
• [5.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/22/25 19:32:30.674
  I0722 19:32:30.674026 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 19:32:30.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:30.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:30.694
  I0722 19:32:30.698857 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 19:32:33.787222 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5870" for this suite. @ 07/22/25 19:32:33.791
• [3.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/22/25 19:32:33.801
  I0722 19:32:33.801087 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 19:32:33.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:33.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:33.818
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 19:32:33.893
  STEP: create the pod with lifecycle hook @ 07/22/25 19:32:35.918
  STEP: delete the pod with lifecycle hook @ 07/22/25 19:32:37.944
  STEP: check prestop hook @ 07/22/25 19:32:39.963
  I0722 19:32:39.980067 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1455" for this suite. @ 07/22/25 19:32:39.985
• [6.194 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 07/22/25 19:32:39.994
  I0722 19:32:39.994794 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:32:39.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:40.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:40.009
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-695 @ 07/22/25 19:32:40.013
  STEP: changing the ExternalName service to type=NodePort @ 07/22/25 19:32:40.018
  STEP: creating replication controller externalname-service in namespace services-695 @ 07/22/25 19:32:40.038
  I0722 19:32:40.047831      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-695, replica count: 2
  I0722 19:32:43.099116      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:32:43.099158 21 resource.go:361] Creating new exec pod
  I0722 19:32:46.122606 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 19:32:46.216628 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.102) 80 port [tcp/http] succeeded!\n"
  I0722 19:32:46.216669 21 builder.go:147] stdout: ""
  I0722 19:32:47.122783 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0722 19:32:47.202406 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.102) 80 port [tcp/http] succeeded!\n"
  I0722 19:32:47.202446 21 builder.go:147] stdout: "externalname-service-wcvs5"
  I0722 19:32:47.202514 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.102 80'
  I0722 19:32:47.278980 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.102 80\n+ echo hostName\nConnection to 10.152.183.102 80 port [tcp/http] succeeded!\n"
  I0722 19:32:47.279018 21 builder.go:147] stdout: "externalname-service-wcvs5"
  I0722 19:32:47.279121 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.147 31904'
  I0722 19:32:47.353325 21 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.31.147 31904\necho hostName\nConnection to 172.31.31.147 31904 port [tcp/*] succeeded!\n"
  I0722 19:32:47.353359 21 builder.go:147] stdout: ""
  I0722 19:32:48.279224 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.147 31904'
  I0722 19:32:48.363234 21 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 172.31.31.147 31904\nConnection to 172.31.31.147 31904 port [tcp/*] succeeded!\n"
  I0722 19:32:48.363282 21 builder.go:147] stdout: ""
  I0722 19:32:49.280197 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.147 31904'
  I0722 19:32:49.367277 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.147 31904\nConnection to 172.31.31.147 31904 port [tcp/*] succeeded!\n"
  I0722 19:32:49.367314 21 builder.go:147] stdout: "externalname-service-x5fmw"
  I0722 19:32:49.367388 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.73 31904'
  I0722 19:32:49.450379 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.73 31904\nConnection to 172.31.68.73 31904 port [tcp/*] succeeded!\n"
  I0722 19:32:49.450426 21 builder.go:147] stdout: ""
  I0722 19:32:50.367457 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-695 exec execpodfclpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.73 31904'
  I0722 19:32:50.451216 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.73 31904\nConnection to 172.31.68.73 31904 port [tcp/*] succeeded!\n"
  I0722 19:32:50.451255 21 builder.go:147] stdout: "externalname-service-x5fmw"
  I0722 19:32:50.451343 21 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0722 19:32:50.476372 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-695" for this suite. @ 07/22/25 19:32:50.48
• [10.496 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 07/22/25 19:32:50.49
  I0722 19:32:50.490655 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 19:32:50.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:50.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:50.508
  STEP: Creating a suspended job @ 07/22/25 19:32:50.516
  STEP: Patching the Job @ 07/22/25 19:32:50.521
  STEP: Watching for Job to be patched @ 07/22/25 19:32:50.532
  I0722 19:32:50.534344 21 job.go:1309] Event ADDED observed for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-job-label:e2e-cn9jm] and annotations: map[]
  I0722 19:32:50.534370 21 job.go:1312] Event MODIFIED found for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[]
  STEP: Updating the job @ 07/22/25 19:32:50.534
  STEP: Watching for Job to be updated @ 07/22/25 19:32:50.545
  I0722 19:32:50.546964 21 job.go:1312] Event MODIFIED found for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  I0722 19:32:50.546990 21 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/22/25 19:32:50.547
  I0722 19:32:50.550210 21 job.go:1187] Job: e2e-cn9jm as labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm]
  STEP: Waiting for job to complete @ 07/22/25 19:32:50.55
  STEP: Delete a job collection with a labelselector @ 07/22/25 19:32:56.573
  STEP: Watching for Job to be deleted @ 07/22/25 19:32:56.584
  I0722 19:32:56.586193 21 job.go:1309] Event MODIFIED observed for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  I0722 19:32:56.586234 21 job.go:1309] Event MODIFIED observed for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  I0722 19:32:56.586247 21 job.go:1309] Event MODIFIED observed for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  I0722 19:32:56.586347 21 job.go:1309] Event MODIFIED observed for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  I0722 19:32:56.586363 21 job.go:1309] Event MODIFIED observed for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  I0722 19:32:56.586400 21 job.go:1312] Event DELETED found for Job e2e-cn9jm in namespace job-4356 with labels: map[e2e-cn9jm:patched e2e-job-label:e2e-cn9jm] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/22/25 19:32:56.586
  I0722 19:32:56.590429 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4356" for this suite. @ 07/22/25 19:32:56.604
• [6.124 seconds]
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/22/25 19:32:56.614
  I0722 19:32:56.614662 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 19:32:56.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:56.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:56.633
  I0722 19:32:56.636123 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/22/25 19:32:57.649
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/22/25 19:32:57.655
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/22/25 19:32:58.665
  I0722 19:32:58.675494 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/22/25 19:32:58.675
  I0722 19:32:59.685894 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7214" for this suite. @ 07/22/25 19:32:59.69
• [3.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 07/22/25 19:32:59.701
  I0722 19:32:59.701486 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:32:59.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:32:59.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:32:59.718
  STEP: Counting existing ResourceQuota @ 07/22/25 19:32:59.722
  STEP: Creating a ResourceQuota @ 07/22/25 19:33:04.727
  STEP: Ensuring resource quota status is calculated @ 07/22/25 19:33:04.735
  STEP: Creating a ReplicaSet @ 07/22/25 19:33:06.74
  STEP: Ensuring resource quota status captures replicaset creation @ 07/22/25 19:33:06.753
  STEP: Deleting a ReplicaSet @ 07/22/25 19:33:08.759
  STEP: Ensuring resource quota status released usage @ 07/22/25 19:33:08.768
  I0722 19:33:10.773934 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-455" for this suite. @ 07/22/25 19:33:10.778
• [11.085 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/22/25 19:33:10.786
  I0722 19:33:10.786800 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:33:10.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:10.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:10.804
  STEP: Creating a pod to test downward api env vars @ 07/22/25 19:33:10.808
  STEP: Saw pod success @ 07/22/25 19:33:12.831
  I0722 19:33:12.835623 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downward-api-5a1a73a3-7a48-4a74-b08d-06673a0e9610 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 19:33:12.842
  I0722 19:33:12.863238 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-352" for this suite. @ 07/22/25 19:33:12.866
• [2.087 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 07/22/25 19:33:12.874
  I0722 19:33:12.874352 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:33:12.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:12.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:12.893
  STEP: creating service in namespace services-1363 @ 07/22/25 19:33:12.896
  STEP: creating service affinity-nodeport-transition in namespace services-1363 @ 07/22/25 19:33:12.896
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1363 @ 07/22/25 19:33:12.913
  I0722 19:33:12.922371      21 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1363, replica count: 3
  I0722 19:33:15.973148      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:33:15.985443 21 resource.go:361] Creating new exec pod
  I0722 19:33:19.010257 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1363 exec execpod-affinitynwgtt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0722 19:33:19.097507 21 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.121) 80 port [tcp/http] succeeded!\n"
  I0722 19:33:19.097548 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:33:19.097629 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1363 exec execpod-affinitynwgtt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  I0722 19:33:19.179084 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.121 80\nConnection to 10.152.183.121 80 port [tcp/http] succeeded!\n"
  I0722 19:33:19.179126 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:33:19.179204 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1363 exec execpod-affinitynwgtt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.234 32371'
  I0722 19:33:19.259387 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.7.234 32371\nConnection to 172.31.7.234 32371 port [tcp/*] succeeded!\n"
  I0722 19:33:19.259445 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:33:19.259521 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1363 exec execpod-affinitynwgtt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.147 32371'
  I0722 19:33:19.338830 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.147 32371\nConnection to 172.31.31.147 32371 port [tcp/*] succeeded!\n"
  I0722 19:33:19.338917 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:33:19.349557 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1363 exec execpod-affinitynwgtt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.147:32371/ ; done'
  I0722 19:33:19.484104 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n"
  I0722 19:33:19.484151 21 builder.go:147] stdout: "\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-pdv5q\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-pdv5q\naffinity-nodeport-transition-pdv5q\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-pdv5q\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-pdv5q\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-lxjqs\naffinity-nodeport-transition-lxjqs"
  I0722 19:33:19.484164 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484172 21 service.go:242] Received response from host: affinity-nodeport-transition-pdv5q
  I0722 19:33:19.484179 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484227 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484234 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484241 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.484246 21 service.go:242] Received response from host: affinity-nodeport-transition-pdv5q
  I0722 19:33:19.484252 21 service.go:242] Received response from host: affinity-nodeport-transition-pdv5q
  I0722 19:33:19.484258 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484264 21 service.go:242] Received response from host: affinity-nodeport-transition-pdv5q
  I0722 19:33:19.484273 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484278 21 service.go:242] Received response from host: affinity-nodeport-transition-pdv5q
  I0722 19:33:19.484284 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484290 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484296 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.484302 21 service.go:242] Received response from host: affinity-nodeport-transition-lxjqs
  I0722 19:33:19.495796 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1363 exec execpod-affinitynwgtt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.147:32371/ ; done'
  I0722 19:33:19.632923 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32371/\n"
  I0722 19:33:19.632998 21 builder.go:147] stdout: "\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k\naffinity-nodeport-transition-dhf8k"
  I0722 19:33:19.633025 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633034 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633040 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633065 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633071 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633076 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633081 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633086 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633092 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633097 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633102 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633107 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633112 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633119 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633125 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633143 21 service.go:242] Received response from host: affinity-nodeport-transition-dhf8k
  I0722 19:33:19.633237 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1363, will wait for the garbage collector to delete the pods @ 07/22/25 19:33:19.652
  I0722 19:33:19.716802 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 10.552196ms
  I0722 19:33:19.817485 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.677684ms
  I0722 19:33:22.945373 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1363" for this suite. @ 07/22/25 19:33:22.949
• [10.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/22/25 19:33:22.956
  I0722 19:33:22.956250 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:33:22.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:22.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:22.968
  STEP: Creating configMap with name configmap-test-volume-9bbde422-62fa-4fbe-9196-7970d605fa05 @ 07/22/25 19:33:22.971
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:33:22.975
  STEP: Saw pod success @ 07/22/25 19:33:24.994
  I0722 19:33:24.998841 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-85f00404-70fc-4790-b93e-5dd9d8347390 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:33:25.005
  I0722 19:33:25.024204 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5910" for this suite. @ 07/22/25 19:33:25.028
• [2.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/22/25 19:33:25.038
  I0722 19:33:25.038292 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sysctl @ 07/22/25 19:33:25.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:25.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:25.057
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/22/25 19:33:25.06
  STEP: Watching for error events or started pod @ 07/22/25 19:33:25.068
  STEP: Waiting for pod completion @ 07/22/25 19:33:27.073
  STEP: Checking that the pod succeeded @ 07/22/25 19:33:29.088
  STEP: Getting logs from the pod @ 07/22/25 19:33:29.088
  STEP: Checking that the sysctl is actually updated @ 07/22/25 19:33:29.094
  I0722 19:33:29.094901 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1213" for this suite. @ 07/22/25 19:33:29.099
• [4.068 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 07/22/25 19:33:29.106
  I0722 19:33:29.106342 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 19:33:29.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:29.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:29.123
  I0722 19:33:29.126593 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/22/25 19:33:30.443
  I0722 19:33:30.443720 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-8986 --namespace=crd-publish-openapi-8986 create -f -'
  I0722 19:33:32.506190 21 builder.go:146] stderr: ""
  I0722 19:33:32.506246 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3046-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0722 19:33:32.506300 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-8986 --namespace=crd-publish-openapi-8986 delete e2e-test-crd-publish-openapi-3046-crds test-cr'
  I0722 19:33:32.561607 21 builder.go:146] stderr: ""
  I0722 19:33:32.561659 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3046-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0722 19:33:32.561696 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-8986 --namespace=crd-publish-openapi-8986 apply -f -'
  I0722 19:33:32.618405 21 builder.go:146] stderr: ""
  I0722 19:33:32.618452 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3046-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0722 19:33:32.618489 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-8986 --namespace=crd-publish-openapi-8986 delete e2e-test-crd-publish-openapi-3046-crds test-cr'
  I0722 19:33:32.693255 21 builder.go:146] stderr: ""
  I0722 19:33:32.693292 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3046-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/22/25 19:33:32.693
  I0722 19:33:32.693393 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=crd-publish-openapi-8986 explain e2e-test-crd-publish-openapi-3046-crds'
  I0722 19:33:32.733641 21 builder.go:146] stderr: ""
  I0722 19:33:32.733685 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3046-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0722 19:33:33.999309 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8986" for this suite. @ 07/22/25 19:33:34.007
• [4.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/22/25 19:33:34.015
  I0722 19:33:34.015231 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:33:34.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:34.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:34.034
  STEP: Creating configMap with name projected-configmap-test-volume-map-998e7834-5ef2-4bff-bf32-2ab71653bda0 @ 07/22/25 19:33:34.037
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:33:34.043
  STEP: Saw pod success @ 07/22/25 19:33:36.068
  I0722 19:33:36.075473 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-configmaps-c132f25b-60b5-4bb1-9cc0-01f9581b7858 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:33:36.082
  I0722 19:33:36.099161 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3876" for this suite. @ 07/22/25 19:33:36.102
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/22/25 19:33:36.111
  I0722 19:33:36.111747 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 19:33:36.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:36.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:36.134
  STEP: create the container @ 07/22/25 19:33:36.138
  W0722 19:33:36.150275      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/22/25 19:33:36.15
  STEP: get the container status @ 07/22/25 19:33:39.171
  STEP: the container should be terminated @ 07/22/25 19:33:39.175
  STEP: the termination message should be set @ 07/22/25 19:33:39.175
  I0722 19:33:39.175515 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/22/25 19:33:39.175
  I0722 19:33:39.191562 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7962" for this suite. @ 07/22/25 19:33:39.196
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/22/25 19:33:39.206
  I0722 19:33:39.206154 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:33:39.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:39.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:39.224
  STEP: Creating the pod @ 07/22/25 19:33:39.227
  I0722 19:33:41.771618 21 pod_client.go:173] Successfully updated pod "labelsupdate5b7b17b7-e3c5-49cb-bb2a-18c4a2c83be3"
  I0722 19:33:45.796139 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9454" for this suite. @ 07/22/25 19:33:45.8
• [6.603 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/22/25 19:33:45.809
  I0722 19:33:45.809449 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:33:45.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:45.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:45.827
  STEP: Creating projection with secret that has name secret-emptykey-test-f0cc5cde-56c8-4c83-aa72-dc69ff152d5f @ 07/22/25 19:33:45.83
  I0722 19:33:45.832647 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4376" for this suite. @ 07/22/25 19:33:45.901
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/22/25 19:33:45.91
  I0722 19:33:45.910829 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/22/25 19:33:45.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:45.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:45.928
  STEP: Setting up server cert @ 07/22/25 19:33:45.931
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/22/25 19:33:46.061
  STEP: Deploying the custom resource conversion webhook pod @ 07/22/25 19:33:46.068
  STEP: Wait for the deployment to be ready @ 07/22/25 19:33:46.082
  I0722 19:33:46.093277 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:33:48.107
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:33:48.122
  I0722 19:33:49.122774 21 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/22/25 19:33:49.132
  I0722 19:33:49.132272 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Creating a custom resource conversion webhook @ 07/22/25 19:33:49.647
  STEP: Watching with field selectors @ 07/22/25 19:33:51.686
  STEP: Registering informers with field selectors @ 07/22/25 19:33:51.697
  STEP: Creating custom resources @ 07/22/25 19:33:51.697
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/22/25 19:33:51.718
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/22/25 19:33:51.723
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/22/25 19:33:51.727
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/22/25 19:33:51.731
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/22/25 19:33:51.734
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/22/25 19:33:51.74
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/22/25 19:33:51.74
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/22/25 19:33:51.74
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/22/25 19:33:51.74
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/22/25 19:33:51.74
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/22/25 19:33:51.754
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/22/25 19:33:51.77
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/22/25 19:33:51.774
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/22/25 19:33:51.778
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/22/25 19:33:51.783
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/22/25 19:33:51.783
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/22/25 19:33:51.783
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/22/25 19:33:51.783
  I0722 19:33:52.346329 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-271" for this suite. @ 07/22/25 19:33:52.35
• [6.450 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/22/25 19:33:52.36
  I0722 19:33:52.360456 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:33:52.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:52.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:52.376
  STEP: Create a pod @ 07/22/25 19:33:52.379
  STEP: patching /status @ 07/22/25 19:33:54.397
  I0722 19:33:54.408022 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0722 19:33:54.408152 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6306" for this suite. @ 07/22/25 19:33:54.412
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/22/25 19:33:54.42
  I0722 19:33:54.420290 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename limitrange @ 07/22/25 19:33:54.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:33:54.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:33:54.439
  STEP: Creating a LimitRange @ 07/22/25 19:33:54.442
  STEP: Setting up watch @ 07/22/25 19:33:54.442
  STEP: Submitting a LimitRange @ 07/22/25 19:33:54.548
  STEP: Verifying LimitRange creation was observed @ 07/22/25 19:33:54.554
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/22/25 19:33:54.554
  I0722 19:33:54.557679 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0722 19:33:54.557704 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/22/25 19:33:54.557
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/22/25 19:33:54.564
  I0722 19:33:54.567292 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0722 19:33:54.567311 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/22/25 19:33:54.567
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/22/25 19:33:54.576
  I0722 19:33:54.579358 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0722 19:33:54.579381 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/22/25 19:33:54.579
  STEP: Failing to create a Pod with more than max resources @ 07/22/25 19:33:54.581
  STEP: Updating a LimitRange @ 07/22/25 19:33:54.583
  STEP: Verifying LimitRange updating is effective @ 07/22/25 19:33:54.591
  STEP: Creating a Pod with less than former min resources @ 07/22/25 19:33:56.596
  STEP: Failing to create a Pod with more than max resources @ 07/22/25 19:33:56.603
  STEP: Deleting a LimitRange @ 07/22/25 19:33:56.607
  STEP: Verifying the LimitRange was deleted @ 07/22/25 19:33:56.614
  I0722 19:34:01.620941 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/22/25 19:34:01.62
  I0722 19:34:01.631196 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1826" for this suite. @ 07/22/25 19:34:01.636
• [7.223 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/22/25 19:34:01.643
  I0722 19:34:01.643412 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 19:34:01.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:01.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:01.66
  I0722 19:34:01.664218 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0722 19:34:01.674002 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0722 19:34:06.680622 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 19:34:06.68
  I0722 19:34:06.680695 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0722 19:34:06.686118 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0722 19:34:06.697031 21 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0722 19:34:08.706791 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0722 19:34:08.710824 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0722 19:34:08.721647 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da2c977d-93a4-46c6-8aff-e63640f29315",
      ResourceVersion: (string) (len=5) "27964",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888809646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 19:34:08.725777 21 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3fff68a-3ecb-4685-a483-0e0cde7627c6",
      ResourceVersion: (string) (len=5) "27954",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888809646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "da2c977d-93a4-46c6-8aff-e63640f29315",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 32 63 39 37  37 64 2d 39 33 61 34 2d  |\"da2c977d-93a4-|
              00000120  34 36 63 36 2d 38 61 66  66 2d 65 36 33 36 34 30  |46c6-8aff-e63640|
              00000130  66 32 39 33 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f29315\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 19:34:08.726281 21 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0722 19:34:08.726508 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba39e928-be36-4900-a272-97d9be90b603",
      ResourceVersion: (string) (len=5) "27963",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888809641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "da2c977d-93a4-46c6-8aff-e63640f29315",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 61 32 63 39 37 37  |"uid\":\"da2c977|
              000000b0  64 2d 39 33 61 34 2d 34  36 63 36 2d 38 61 66 66  |d-93a4-46c6-8aff|
              000000c0  2d 65 36 33 36 34 30 66  32 39 33 31 35 5c 22 7d  |-e63640f29315\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 19:34:08.732215 21 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-jkwj4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-jkwj4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2700a83-526a-474a-b1a5-81056db99667",
      ResourceVersion: (string) (len=5) "27953",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888809646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "e3fff68a-3ecb-4685-a483-0e0cde7627c6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 33  66 66 66 36 38 61 2d 33  |d\":\"e3fff68a-3|
              00000090  65 63 62 2d 34 36 38 35  2d 61 34 38 33 2d 30 65  |ecb-4685-a483-0e|
              000000a0  30 63 64 65 37 36 32 37  63 36 5c 22 7d 22 3a 7b  |0cde7627c6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 34 35 5c 22 7d 22 3a  |2.168.12.45\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hx6qg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hx6qg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809647,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888809646,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888809646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888809647,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://37811fbcc247a39c2b1fdb15bb8281975ee5f26571a0e0064d8e75d9ea804f69",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hx6qg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:34:08.733485 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8206" for this suite. @ 07/22/25 19:34:08.738
• [7.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/22/25 19:34:08.744
  I0722 19:34:08.744090 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:34:08.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:08.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:08.76
  STEP: Creating configMap with name configmap-projected-all-test-volume-9a0a5ee5-8ac5-4358-812a-8497ff99125b @ 07/22/25 19:34:08.763
  STEP: Creating secret with name secret-projected-all-test-volume-1a9796e6-2f03-431e-968b-e488fca62e73 @ 07/22/25 19:34:08.77
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/22/25 19:34:08.775
  W0722 19:34:08.782670      21 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 07/22/25 19:34:12.799
  I0722 19:34:12.803250 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod projected-volume-e7dbd94b-ffb8-4f0e-9776-5f8815d06b79 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:34:12.81
  I0722 19:34:12.830997 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3506" for this suite. @ 07/22/25 19:34:12.835
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/22/25 19:34:12.843
  I0722 19:34:12.843325 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename proxy @ 07/22/25 19:34:12.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:12.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:12.861
  I0722 19:34:12.864545 21 proxy.go:387] Creating pod...
  I0722 19:34:14.887353 21 proxy.go:411] Creating service...
  I0722 19:34:14.900431 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=DELETE
  I0722 19:34:14.909454 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 19:34:14.909485 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=OPTIONS
  I0722 19:34:14.914980 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 19:34:14.915007 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=PATCH
  I0722 19:34:14.919280 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 19:34:14.919305 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=POST
  I0722 19:34:14.923832 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 19:34:14.923857 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=PUT
  I0722 19:34:14.927350 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 19:34:14.927372 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=DELETE
  I0722 19:34:14.932251 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 19:34:14.932275 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0722 19:34:14.937415 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 19:34:14.937432 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=PATCH
  I0722 19:34:14.942174 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 19:34:14.942206 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=POST
  I0722 19:34:14.947121 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 19:34:14.947144 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=PUT
  I0722 19:34:14.952618 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 19:34:14.952655 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=GET
  I0722 19:34:14.955835 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0722 19:34:14.955871 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=GET
  I0722 19:34:14.963242 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0722 19:34:14.963279 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/pods/agnhost/proxy?method=HEAD
  I0722 19:34:14.966887 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0722 19:34:14.966908 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4835/services/e2e-proxy-test-service/proxy?method=HEAD
  I0722 19:34:14.971282 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0722 19:34:14.971385 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4835" for this suite. @ 07/22/25 19:34:14.975
• [2.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/22/25 19:34:14.983
  I0722 19:34:14.983199 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 19:34:14.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:14.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:15.001
  I0722 19:34:17.049431 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-616" for this suite. @ 07/22/25 19:34:17.054
• [2.079 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 07/22/25 19:34:17.061
  I0722 19:34:17.061846 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 19:34:17.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:17.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:17.08
  I0722 19:34:17.086210 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 19:34:17.160181 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0722 19:34:17.163991 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-31-147 before test
  I0722 19:34:17.168542 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fwkc7 from ingress-nginx-kubernetes-worker started at 2025-07-22 18:54:19 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.168560 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:34:17.168568 21 predicates.go:957] calico-node-9tfhx from kube-system started at 2025-07-22 18:36:14 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.168574 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:34:17.168587 21 predicates.go:957] agnhost from proxy-4835 started at 2025-07-22 19:34:12 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.168593 21 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0722 19:34:17.168600 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-07-22 18:39:33 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.168605 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 19:34:17.168612 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-8ghhb from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:34:17.168624 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:34:17.168629 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 19:34:17.168635 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-73 before test
  I0722 19:34:17.173195 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-sz9hn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.173208 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:34:17.173215 21 predicates.go:957] calico-node-q2c6n from kube-system started at 2025-07-22 18:35:46 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.173219 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:34:17.173225 21 predicates.go:957] coredns-5d946bb58-zcb2f from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.173229 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0722 19:34:17.173235 21 predicates.go:957] kube-state-metrics-b84f44f45-l28nc from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.173241 21 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0722 19:34:17.173246 21 predicates.go:957] metrics-server-v0.7.2-7d878b47f8-gh9ww from kube-system started at 2025-07-22 18:32:29 +0000 UTC (2 container statuses recorded)
  I0722 19:34:17.173251 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0722 19:34:17.173256 21 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0722 19:34:17.173262 21 predicates.go:957] dashboard-metrics-scraper-5cf87bc988-t8js5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.173267 21 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0722 19:34:17.173277 21 predicates.go:957] kubernetes-dashboard-6858576c98-ckql5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.173282 21 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0722 19:34:17.173287 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-kdz76 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:34:17.173292 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:34:17.173297 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 19:34:17.173304 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-7-234 before test
  I0722 19:34:17.176738 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qgccn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:55 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.176757 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:34:17.176766 21 predicates.go:957] calico-node-hp9wd from kube-system started at 2025-07-22 18:35:32 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.176771 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:34:17.176777 21 predicates.go:957] busybox-readonly-fs2191349f-0940-4917-9128-9b7fbfac48d4 from kubelet-test-616 started at 2025-07-22 19:34:15 +0000 UTC (1 container statuses recorded)
  I0722 19:34:17.176782 21 predicates.go:959] 	Container busybox-readonly-fs2191349f-0940-4917-9128-9b7fbfac48d4 ready: true, restart count 0
  I0722 19:34:17.176788 21 predicates.go:957] sonobuoy-e2e-job-5e6356138b464fd4 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:34:17.176797 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0722 19:34:17.176803 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:34:17.176809 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-fprks from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:34:17.176826 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:34:17.176831 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/22/25 19:34:17.176
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/22/25 19:34:19.201
  STEP: Trying to apply a random label on the found node. @ 07/22/25 19:34:19.218
  STEP: verifying the node has the label kubernetes.io/e2e-30408562-a88e-4e55-89b9-cb47f1deddb8 42 @ 07/22/25 19:34:19.227
  STEP: Trying to relaunch the pod, now with labels. @ 07/22/25 19:34:19.231
  STEP: removing the label kubernetes.io/e2e-30408562-a88e-4e55-89b9-cb47f1deddb8 off the node ip-172-31-31-147 @ 07/22/25 19:34:21.254
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-30408562-a88e-4e55-89b9-cb47f1deddb8 @ 07/22/25 19:34:21.272
  I0722 19:34:21.277692 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3655" for this suite. @ 07/22/25 19:34:21.285
• [4.236 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/22/25 19:34:21.297
  I0722 19:34:21.297592 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:34:21.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:21.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:21.321
  STEP: Creating configMap with name configmap-test-volume-map-5455f207-8c96-45d9-b924-1fb61da79387 @ 07/22/25 19:34:21.33
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:34:21.336
  STEP: Saw pod success @ 07/22/25 19:34:25.374
  I0722 19:34:25.378546 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-d865362c-4be0-40ae-aa72-777514888530 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:34:25.385
  I0722 19:34:25.402197 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3649" for this suite. @ 07/22/25 19:34:25.406
• [4.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/22/25 19:34:25.413
  I0722 19:34:25.413113 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename server-version @ 07/22/25 19:34:25.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:25.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:25.43
  STEP: Request ServerVersion @ 07/22/25 19:34:25.433
  STEP: Confirm major version @ 07/22/25 19:34:25.434
  I0722 19:34:25.434583 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/22/25 19:34:25.434
  I0722 19:34:25.434613 21 server_version.go:58] cleanMinorVersion: 32
  I0722 19:34:25.434622 21 server_version.go:62] Minor version: 32
  I0722 19:34:25.434688 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6580" for this suite. @ 07/22/25 19:34:25.507
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 07/22/25 19:34:25.516
  I0722 19:34:25.516076 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:34:25.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:25.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:25.529
  STEP: Creating a ResourceQuota with terminating scope @ 07/22/25 19:34:25.533
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 19:34:25.538
  STEP: Creating a ResourceQuota with not terminating scope @ 07/22/25 19:34:27.543
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 19:34:27.548
  STEP: Creating a long running pod @ 07/22/25 19:34:29.554
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/22/25 19:34:29.569
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/22/25 19:34:31.575
  STEP: Deleting the pod @ 07/22/25 19:34:33.581
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 19:34:33.591
  STEP: Creating a terminating pod @ 07/22/25 19:34:35.596
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/22/25 19:34:35.61
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/22/25 19:34:37.615
  STEP: Deleting the pod @ 07/22/25 19:34:39.62
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 19:34:39.633
  I0722 19:34:41.639441 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-612" for this suite. @ 07/22/25 19:34:41.644
• [16.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/22/25 19:34:41.652
  I0722 19:34:41.652193 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename subjectreview @ 07/22/25 19:34:41.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:41.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:41.67
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3172" @ 07/22/25 19:34:41.673
  I0722 19:34:41.679002 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3172:e2e"
  I0722 19:34:41.679025 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3172"}
  I0722 19:34:41.679033 21 subjectreviews.go:71] saUID: "59cc4f73-9642-4412-81a0-b8638da5ad98"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3172:e2e" @ 07/22/25 19:34:41.679
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3172:e2e" @ 07/22/25 19:34:41.679
  I0722 19:34:41.680943 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3172:e2e" api 'list' configmaps in "subjectreview-3172" namespace @ 07/22/25 19:34:41.68
  I0722 19:34:41.682335 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3172:e2e" @ 07/22/25 19:34:41.682
  I0722 19:34:41.684813 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0722 19:34:41.684829 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0722 19:34:41.684898 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3172" for this suite. @ 07/22/25 19:34:41.745
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 07/22/25 19:34:41.755
  I0722 19:34:41.755484 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:34:41.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:41.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:41.771
  STEP: creating a replication controller @ 07/22/25 19:34:41.774
  I0722 19:34:41.774725 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 create -f -'
  I0722 19:34:41.861869 21 builder.go:146] stderr: ""
  I0722 19:34:41.861903 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 19:34:41.861
  I0722 19:34:41.861979 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:34:41.909444 21 builder.go:146] stderr: ""
  I0722 19:34:41.909478 21 builder.go:147] stdout: "update-demo-nautilus-8mjdd update-demo-nautilus-kjjqq "
  I0722 19:34:41.909529 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:41.951327 21 builder.go:146] stderr: ""
  I0722 19:34:41.951359 21 builder.go:147] stdout: ""
  I0722 19:34:41.951368 21 kubectl.go:2509] update-demo-nautilus-8mjdd is created but not running
  I0722 19:34:46.951545 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:34:46.998746 21 builder.go:146] stderr: ""
  I0722 19:34:46.998781 21 builder.go:147] stdout: "update-demo-nautilus-8mjdd update-demo-nautilus-kjjqq "
  I0722 19:34:46.998843 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:47.047159 21 builder.go:146] stderr: ""
  I0722 19:34:47.047195 21 builder.go:147] stdout: "true"
  I0722 19:34:47.047236 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:34:47.091576 21 builder.go:146] stderr: ""
  I0722 19:34:47.091613 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:34:47.091628 21 kubectl.go:2400] validating pod update-demo-nautilus-8mjdd
  I0722 19:34:47.096943 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:34:47.096990 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:34:47.097000 21 kubectl.go:2527] update-demo-nautilus-8mjdd is verified up and running
  I0722 19:34:47.097038 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-kjjqq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:47.138736 21 builder.go:146] stderr: ""
  I0722 19:34:47.138765 21 builder.go:147] stdout: "true"
  I0722 19:34:47.138854 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-kjjqq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:34:47.182832 21 builder.go:146] stderr: ""
  I0722 19:34:47.182865 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:34:47.182877 21 kubectl.go:2400] validating pod update-demo-nautilus-kjjqq
  I0722 19:34:47.187797 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:34:47.187854 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:34:47.187867 21 kubectl.go:2527] update-demo-nautilus-kjjqq is verified up and running
  STEP: scaling down the replication controller @ 07/22/25 19:34:47.187
  I0722 19:34:47.188742 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0722 19:34:47.188773 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0722 19:34:48.247086 21 builder.go:146] stderr: ""
  I0722 19:34:48.247122 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 19:34:48.247
  I0722 19:34:48.247211 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:34:48.293613 21 builder.go:146] stderr: ""
  I0722 19:34:48.293647 21 builder.go:147] stdout: "update-demo-nautilus-8mjdd "
  I0722 19:34:48.293908 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:48.337948 21 builder.go:146] stderr: ""
  I0722 19:34:48.337989 21 builder.go:147] stdout: "true"
  I0722 19:34:48.338027 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:34:48.382567 21 builder.go:146] stderr: ""
  I0722 19:34:48.382600 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:34:48.382611 21 kubectl.go:2400] validating pod update-demo-nautilus-8mjdd
  I0722 19:34:48.387020 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:34:48.387079 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:34:48.387093 21 kubectl.go:2527] update-demo-nautilus-8mjdd is verified up and running
  STEP: scaling up the replication controller @ 07/22/25 19:34:48.387
  I0722 19:34:48.387806 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0722 19:34:48.387831 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0722 19:34:49.443523 21 builder.go:146] stderr: ""
  I0722 19:34:49.443573 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/22/25 19:34:49.443
  I0722 19:34:49.443657 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:34:49.488665 21 builder.go:146] stderr: ""
  I0722 19:34:49.488704 21 builder.go:147] stdout: "update-demo-nautilus-78clx update-demo-nautilus-8mjdd "
  I0722 19:34:49.488745 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-78clx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:49.530293 21 builder.go:146] stderr: ""
  I0722 19:34:49.530327 21 builder.go:147] stdout: ""
  I0722 19:34:49.530336 21 kubectl.go:2509] update-demo-nautilus-78clx is created but not running
  I0722 19:34:54.534131 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0722 19:34:54.582304 21 builder.go:146] stderr: ""
  I0722 19:34:54.582340 21 builder.go:147] stdout: "update-demo-nautilus-78clx update-demo-nautilus-8mjdd "
  I0722 19:34:54.582387 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-78clx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:54.624914 21 builder.go:146] stderr: ""
  I0722 19:34:54.624952 21 builder.go:147] stdout: "true"
  I0722 19:34:54.624990 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-78clx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:34:54.679581 21 builder.go:146] stderr: ""
  I0722 19:34:54.679622 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:34:54.679634 21 kubectl.go:2400] validating pod update-demo-nautilus-78clx
  I0722 19:34:54.689086 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:34:54.689138 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:34:54.689148 21 kubectl.go:2527] update-demo-nautilus-78clx is verified up and running
  I0722 19:34:54.689182 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0722 19:34:54.755653 21 builder.go:146] stderr: ""
  I0722 19:34:54.755839 21 builder.go:147] stdout: "true"
  I0722 19:34:54.755881 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods update-demo-nautilus-8mjdd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0722 19:34:54.821474 21 builder.go:146] stderr: ""
  I0722 19:34:54.821656 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0722 19:34:54.821670 21 kubectl.go:2400] validating pod update-demo-nautilus-8mjdd
  I0722 19:34:54.828017 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0722 19:34:54.828082 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0722 19:34:54.828093 21 kubectl.go:2527] update-demo-nautilus-8mjdd is verified up and running
  STEP: using delete to clean up resources @ 07/22/25 19:34:54.828
  I0722 19:34:54.828157 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 delete --grace-period=0 --force -f -'
  I0722 19:34:54.902494 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:34:54.902670 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0722 19:34:54.902714 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get rc,svc -l name=update-demo --no-headers'
  I0722 19:34:54.997821 21 builder.go:146] stderr: "No resources found in kubectl-8241 namespace.\n"
  I0722 19:34:54.998318 21 builder.go:147] stdout: ""
  I0722 19:34:54.998395 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8241 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0722 19:34:55.085490 21 builder.go:146] stderr: ""
  I0722 19:34:55.085678 21 builder.go:147] stdout: ""
  I0722 19:34:55.085939 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8241" for this suite. @ 07/22/25 19:34:55.091
• [13.342 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/22/25 19:34:55.097
  I0722 19:34:55.097419 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:34:55.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:55.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:55.115
  STEP: Creating configMap with name projected-configmap-test-volume-3591129a-1b88-4b55-b700-1c4e58d5e5ad @ 07/22/25 19:34:55.123
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:34:55.131
  STEP: Saw pod success @ 07/22/25 19:34:57.152
  I0722 19:34:57.156246 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-configmaps-f2d5911e-800b-4447-ab03-bc0e91fb7bac container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:34:57.163
  I0722 19:34:57.179705 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9676" for this suite. @ 07/22/25 19:34:57.183
• [2.093 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 07/22/25 19:34:57.19
  I0722 19:34:57.190104 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:34:57.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:34:57.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:34:57.21
  STEP: Setting up server cert @ 07/22/25 19:34:57.232
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:34:57.369
  STEP: Deploying the webhook pod @ 07/22/25 19:34:57.376
  STEP: Wait for the deployment to be ready @ 07/22/25 19:34:57.392
  I0722 19:34:57.401442 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:34:59.415
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:34:59.425
  I0722 19:35:00.426777 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/22/25 19:35:00.436
  I0722 19:35:00.482290 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9868" for this suite. @ 07/22/25 19:35:00.486
  STEP: Destroying namespace "webhook-markers-1237" for this suite. @ 07/22/25 19:35:00.493
• [3.309 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/22/25 19:35:00.499
  I0722 19:35:00.499283 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/22/25 19:35:00.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:35:00.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:35:00.518
  I0722 19:35:00.520892 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 19:36:00.521817 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0722 19:36:00.527257 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/22/25 19:36:00.527
  I0722 19:36:00.744903 21 taints.go:463] Pod1 is running on ip-172-31-31-147. Tainting Node
  I0722 19:36:02.968368 21 taints.go:471] Pod2 is running on ip-172-31-31-147. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/22/25 19:36:02.968
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 19:36:02.979
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/22/25 19:36:02.986
  I0722 19:36:08.996467 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0722 19:36:29.022997 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/22/25 19:36:29.035
  I0722 19:36:29.039791 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-629" for this suite. @ 07/22/25 19:36:29.042
• [88.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/22/25 19:36:29.053
  I0722 19:36:29.053174 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename controllerrevisions @ 07/22/25 19:36:29.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:36:29.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:36:29.089
  STEP: Creating DaemonSet "e2e-pw4qf-daemon-set" @ 07/22/25 19:36:29.136
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 19:36:29.146
  I0722 19:36:29.220459 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:36:29.220503 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:36:29.225077 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pw4qf-daemon-set: 0
  I0722 19:36:29.225098 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  I0722 19:36:30.151992 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:36:30.152035 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:36:30.156451 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pw4qf-daemon-set: 2
  I0722 19:36:30.156474 21 fixtures.go:131] Node ip-172-31-7-234 is running 0 daemon pod, expected 1
  I0722 19:36:31.152547 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:36:31.152601 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 19:36:31.157386 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pw4qf-daemon-set: 3
  I0722 19:36:31.157406 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pw4qf-daemon-set
  STEP: Confirm DaemonSet "e2e-pw4qf-daemon-set" successfully created with "daemonset-name=e2e-pw4qf-daemon-set" label @ 07/22/25 19:36:31.16
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pw4qf-daemon-set" @ 07/22/25 19:36:31.167
  I0722 19:36:31.172388 21 controller_revision.go:162] Located ControllerRevision: "e2e-pw4qf-daemon-set-68b68899d8"
  STEP: Patching ControllerRevision "e2e-pw4qf-daemon-set-68b68899d8" @ 07/22/25 19:36:31.175
  I0722 19:36:31.182216 21 controller_revision.go:173] e2e-pw4qf-daemon-set-68b68899d8 has been patched
  STEP: Create a new ControllerRevision @ 07/22/25 19:36:31.182
  I0722 19:36:31.188088 21 controller_revision.go:191] Created ControllerRevision: e2e-pw4qf-daemon-set-649947d786
  STEP: Confirm that there are two ControllerRevisions @ 07/22/25 19:36:31.188
  I0722 19:36:31.188136 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 19:36:31.191957 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pw4qf-daemon-set-68b68899d8" @ 07/22/25 19:36:31.191
  STEP: Confirm that there is only one ControllerRevision @ 07/22/25 19:36:31.199
  I0722 19:36:31.199329 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 19:36:31.202508 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pw4qf-daemon-set-649947d786" @ 07/22/25 19:36:31.206
  I0722 19:36:31.217315 21 controller_revision.go:220] e2e-pw4qf-daemon-set-649947d786 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/22/25 19:36:31.217
  W0722 19:36:31.225764      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/22/25 19:36:31.225
  I0722 19:36:31.225873 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 19:36:31.254380 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pw4qf-daemon-set-649947d786=updated" @ 07/22/25 19:36:31.254
  STEP: Confirm that there is only one ControllerRevision @ 07/22/25 19:36:31.266
  I0722 19:36:31.266314 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0722 19:36:31.272467 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0722 19:36:31.276222 21 controller_revision.go:246] ControllerRevision "e2e-pw4qf-daemon-set-79f46496dc" has revision 3
  STEP: Deleting DaemonSet "e2e-pw4qf-daemon-set" @ 07/22/25 19:36:31.28
  STEP: deleting DaemonSet.extensions e2e-pw4qf-daemon-set in namespace controllerrevisions-9571, will wait for the garbage collector to delete the pods @ 07/22/25 19:36:31.28
  I0722 19:36:31.343030 21 resources.go:139] Deleting DaemonSet.extensions e2e-pw4qf-daemon-set took: 8.367866ms
  I0722 19:36:31.443160 21 resources.go:163] Terminating DaemonSet.extensions e2e-pw4qf-daemon-set pods took: 100.123351ms
  I0722 19:36:33.749247 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pw4qf-daemon-set: 0
  I0722 19:36:33.749281 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pw4qf-daemon-set
  I0722 19:36:33.754083 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28956"},"items":null}

  I0722 19:36:33.757539 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28956"},"items":null}

  I0722 19:36:33.772563 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9571" for this suite. @ 07/22/25 19:36:33.776
• [4.731 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 07/22/25 19:36:33.783
  I0722 19:36:33.783887 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:36:33.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:36:33.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:36:33.801
  STEP: creating all guestbook components @ 07/22/25 19:36:33.807
  I0722 19:36:33.807461 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0722 19:36:33.807523 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 create -f -'
  I0722 19:36:33.904478 21 builder.go:146] stderr: ""
  I0722 19:36:33.904824 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0722 19:36:33.905022 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0722 19:36:33.905279 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 create -f -'
  I0722 19:36:33.998966 21 builder.go:146] stderr: ""
  I0722 19:36:33.999014 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0722 19:36:33.999149 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0722 19:36:33.999212 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 create -f -'
  I0722 19:36:34.083658 21 builder.go:146] stderr: ""
  I0722 19:36:34.083751 21 builder.go:147] stdout: "service/frontend created\n"
  I0722 19:36:34.083817 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0722 19:36:34.083933 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 create -f -'
  I0722 19:36:34.151697 21 builder.go:146] stderr: ""
  I0722 19:36:34.151790 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0722 19:36:34.151851 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0722 19:36:34.151928 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 create -f -'
  I0722 19:36:34.213259 21 builder.go:146] stderr: ""
  I0722 19:36:34.213315 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0722 19:36:34.213378 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0722 19:36:34.213444 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 create -f -'
  I0722 19:36:34.277847 21 builder.go:146] stderr: ""
  I0722 19:36:34.277891 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/22/25 19:36:34.277
  I0722 19:36:34.277932 21 kubectl.go:2279] Waiting for all frontend pods to be Running.
  I0722 19:36:39.332189 21 kubectl.go:2283] Waiting for frontend to serve content.
  I0722 19:36:39.342731 21 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0722 19:36:39.352653 21 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/22/25 19:36:39.363
  I0722 19:36:39.363586 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0722 19:36:39.421797 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:36:39.421879 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 19:36:39.421
  I0722 19:36:39.421985 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0722 19:36:39.483094 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:36:39.483132 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 19:36:39.483
  I0722 19:36:39.483247 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0722 19:36:39.538780 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:36:39.538822 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 19:36:39.538
  I0722 19:36:39.538940 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0722 19:36:39.585611 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:36:39.585650 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 19:36:39.585
  I0722 19:36:39.585848 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0722 19:36:39.642320 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:36:39.642360 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/22/25 19:36:39.642
  I0722 19:36:39.642484 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0722 19:36:39.705218 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:36:39.705284 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0722 19:36:39.705582 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1057" for this suite. @ 07/22/25 19:36:39.71
• [5.934 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/22/25 19:36:39.718
  I0722 19:36:39.718735 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:36:39.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:36:39.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:36:39.748
  STEP: Creating secret with name secret-test-map-a44a1e64-b5b5-4222-a269-8fa169400612 @ 07/22/25 19:36:39.752
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:36:39.762
  STEP: Saw pod success @ 07/22/25 19:36:43.796
  I0722 19:36:43.801744 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-secrets-32111d8a-9dd2-4c04-89be-faec6ff96896 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:36:43.813
  I0722 19:36:43.831200 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4369" for this suite. @ 07/22/25 19:36:43.835
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 07/22/25 19:36:43.842
  I0722 19:36:43.842331 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 19:36:43.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:36:43.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:36:43.861
  STEP: Creating service test in namespace statefulset-3700 @ 07/22/25 19:36:43.864
  STEP: Creating statefulset ss in namespace statefulset-3700 @ 07/22/25 19:36:43.87
  I0722 19:36:43.884119 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0722 19:36:53.885835 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/22/25 19:36:53.893
  STEP: updating a scale subresource @ 07/22/25 19:36:53.897
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/22/25 19:36:53.902
  STEP: Patch a scale subresource @ 07/22/25 19:36:53.906
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/22/25 19:36:53.911
  I0722 19:36:53.921075 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3700
  I0722 19:36:53.926803 21 rest.go:152] Scaling statefulset ss to 0
  I0722 19:37:03.974482 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 19:37:03.978454 21 rest.go:90] Deleting statefulset ss
  I0722 19:37:03.994828 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3700" for this suite. @ 07/22/25 19:37:03.999
• [20.165 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/22/25 19:37:04.007
  I0722 19:37:04.007802 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename discovery @ 07/22/25 19:37:04.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:37:04.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:37:04.026
  STEP: Setting up server cert @ 07/22/25 19:37:04.031
  I0722 19:37:04.158450 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0722 19:37:04.159818 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0722 19:37:04.159841 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0722 19:37:04.159848 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0722 19:37:04.159855 21 discovery.go:139] Checking APIGroup: apps
  I0722 19:37:04.161033 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0722 19:37:04.161061 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0722 19:37:04.161068 21 discovery.go:154] apps/v1 matches apps/v1
  I0722 19:37:04.161073 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0722 19:37:04.162486 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0722 19:37:04.162504 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0722 19:37:04.162510 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0722 19:37:04.162516 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0722 19:37:04.163646 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0722 19:37:04.163658 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0722 19:37:04.163666 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0722 19:37:04.163672 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0722 19:37:04.164729 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0722 19:37:04.164741 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0722 19:37:04.164747 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0722 19:37:04.164753 21 discovery.go:139] Checking APIGroup: autoscaling
  I0722 19:37:04.165845 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0722 19:37:04.165855 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0722 19:37:04.165861 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0722 19:37:04.165867 21 discovery.go:139] Checking APIGroup: batch
  I0722 19:37:04.166957 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0722 19:37:04.166980 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0722 19:37:04.166986 21 discovery.go:154] batch/v1 matches batch/v1
  I0722 19:37:04.166992 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0722 19:37:04.168392 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0722 19:37:04.168416 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0722 19:37:04.168423 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0722 19:37:04.168430 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0722 19:37:04.169588 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0722 19:37:04.169614 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0722 19:37:04.169621 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0722 19:37:04.169628 21 discovery.go:139] Checking APIGroup: policy
  I0722 19:37:04.170783 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0722 19:37:04.170794 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0722 19:37:04.170801 21 discovery.go:154] policy/v1 matches policy/v1
  I0722 19:37:04.170807 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0722 19:37:04.172181 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0722 19:37:04.172201 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0722 19:37:04.172212 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0722 19:37:04.172219 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0722 19:37:04.173417 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0722 19:37:04.173431 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0722 19:37:04.173438 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0722 19:37:04.173446 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0722 19:37:04.174543 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0722 19:37:04.174555 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0722 19:37:04.174561 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0722 19:37:04.174567 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0722 19:37:04.175666 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0722 19:37:04.175684 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0722 19:37:04.175690 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0722 19:37:04.175696 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0722 19:37:04.176749 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0722 19:37:04.176760 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0722 19:37:04.176767 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0722 19:37:04.176773 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0722 19:37:04.177876 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0722 19:37:04.177894 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0722 19:37:04.177903 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0722 19:37:04.177921 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0722 19:37:04.178955 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0722 19:37:04.178974 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0722 19:37:04.178983 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0722 19:37:04.178989 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0722 19:37:04.180106 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0722 19:37:04.180115 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0722 19:37:04.180121 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0722 19:37:04.180136 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0722 19:37:04.181557 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0722 19:37:04.181582 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0722 19:37:04.181590 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0722 19:37:04.181596 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0722 19:37:04.182904 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0722 19:37:04.182923 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0722 19:37:04.182930 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0722 19:37:04.183016 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7573" for this suite. @ 07/22/25 19:37:04.187
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/22/25 19:37:04.196
  I0722 19:37:04.196210 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:37:04.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:37:04.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:37:04.21
  STEP: Creating configMap with name projected-configmap-test-volume-d01c3ca0-fbbe-4b0b-809e-60ad79938e6a @ 07/22/25 19:37:04.214
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:37:04.219
  STEP: Saw pod success @ 07/22/25 19:37:06.239
  I0722 19:37:06.242862 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-configmaps-997d246e-429e-4ec6-ada8-02064b88d0d2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:37:06.252
  I0722 19:37:06.268797 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9150" for this suite. @ 07/22/25 19:37:06.273
• [2.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/22/25 19:37:06.28
  I0722 19:37:06.281015 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename subpath @ 07/22/25 19:37:06.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:37:06.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:37:06.297
  STEP: Setting up data @ 07/22/25 19:37:06.3
  STEP: Creating pod pod-subpath-test-downwardapi-jgxx @ 07/22/25 19:37:06.313
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 19:37:06.313
  STEP: Saw pod success @ 07/22/25 19:37:28.392
  I0722 19:37:28.396525 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-subpath-test-downwardapi-jgxx container test-container-subpath-downwardapi-jgxx: <nil>
  STEP: delete the pod @ 07/22/25 19:37:28.408
  STEP: Deleting pod pod-subpath-test-downwardapi-jgxx @ 07/22/25 19:37:28.429
  I0722 19:37:28.429250 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-jgxx" in namespace "subpath-4662"
  I0722 19:37:28.433247 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4662" for this suite. @ 07/22/25 19:37:28.438
• [22.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/22/25 19:37:28.445
  I0722 19:37:28.445611 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:37:28.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:37:28.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:37:28.467
  STEP: Setting up server cert @ 07/22/25 19:37:28.491
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:37:28.771
  STEP: Deploying the webhook pod @ 07/22/25 19:37:28.778
  STEP: Wait for the deployment to be ready @ 07/22/25 19:37:28.795
  I0722 19:37:28.804290 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:37:30.818
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:37:30.829
  I0722 19:37:31.829106 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/22/25 19:37:31.838
  STEP: verifying the mutating webhook match conditions @ 07/22/25 19:37:31.847
  STEP: updating the mutating webhook match conditions @ 07/22/25 19:37:31.85
  STEP: verifying the mutating webhook match conditions @ 07/22/25 19:37:31.859
  I0722 19:37:31.910694 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6414" for this suite. @ 07/22/25 19:37:31.915
  STEP: Destroying namespace "webhook-markers-2414" for this suite. @ 07/22/25 19:37:31.923
• [3.485 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/22/25 19:37:31.93
  I0722 19:37:31.930625 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename volumeattachment @ 07/22/25 19:37:31.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:37:31.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:37:31.948
  STEP: Create VolumeAttachment "va-e2e-vjsgk" on node "ip-172-31-31-147" @ 07/22/25 19:37:32.015
  STEP: Get VolumeAttachment "va-e2e-vjsgk" on node "ip-172-31-31-147" @ 07/22/25 19:37:32.022
  STEP: Patch VolumeAttachment "va-e2e-vjsgk" on node "ip-172-31-31-147" @ 07/22/25 19:37:32.025
  STEP: List VolumeAttachments with "va-e2e-vjsgk=patched" label @ 07/22/25 19:37:32.033
  STEP: Delete VolumeAttachment "va-e2e-vjsgk" on node "ip-172-31-31-147" @ 07/22/25 19:37:32.037
  STEP: Confirm deletion of VolumeAttachment "va-e2e-vjsgk" on node "ip-172-31-31-147" @ 07/22/25 19:37:32.044
  STEP: Create VolumeAttachment "va-e2e-s5654" on node "ip-172-31-29-40" @ 07/22/25 19:37:32.116
  STEP: Update the VolumeAttachment "va-e2e-s5654" on node "ip-172-31-29-40" with label "va-e2e=updated" @ 07/22/25 19:37:32.123
  STEP: Create VolumeAttachment "va-e2e-x6v4r" on node "ip-172-31-31-147" @ 07/22/25 19:37:32.217
  STEP: Update the VolumeAttachment "va-e2e-x6v4r" on node "ip-172-31-31-147" with label "va-e2e=updated" @ 07/22/25 19:37:32.223
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/22/25 19:37:32.234
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/22/25 19:37:32.247
  I0722 19:37:32.252091 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8951" for this suite. @ 07/22/25 19:37:32.318
• [0.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 07/22/25 19:37:32.326
  I0722 19:37:32.326823 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:37:32.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:37:32.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:37:32.345
  I0722 19:38:32.363636 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-145" for this suite. @ 07/22/25 19:38:32.367
• [60.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/22/25 19:38:32.374
  I0722 19:38:32.374850 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 19:38:32.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:38:32.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:38:32.39
  I0722 19:38:32.394169 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  W0722 19:38:34.933818      21 warnings.go:70] unknown field "alpha"
  W0722 19:38:34.933840      21 warnings.go:70] unknown field "beta"
  W0722 19:38:34.933843      21 warnings.go:70] unknown field "delta"
  W0722 19:38:34.933846      21 warnings.go:70] unknown field "epsilon"
  W0722 19:38:34.933848      21 warnings.go:70] unknown field "gamma"
  I0722 19:38:35.486180 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8951" for this suite. @ 07/22/25 19:38:35.49
• [3.124 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 07/22/25 19:38:35.499
  I0722 19:38:35.499439 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:38:35.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:38:35.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:38:35.517
  STEP: Creating pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809 @ 07/22/25 19:38:35.52
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 19:38:37.536
  I0722 19:38:37.540121 21 container_probe.go:1749] Initial restart count of pod busybox-31141277-4afb-4bec-916b-641f37ca007f is 0
  I0722 19:38:37.544092 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:39.550570 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:41.556094 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:43.561528 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:45.566886 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:47.572338 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:49.577739 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:51.583462 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:53.589342 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:55.594392 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:57.601404 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:38:59.606688 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:01.612409 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:03.617808 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:05.622435 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:07.628382 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:09.635383 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:11.640222 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:13.645899 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:15.651093 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:17.656847 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:19.662183 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:21.667180 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:23.672678 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:25.677674 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:27.683921 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:29.688974 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:31.695086 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:33.701533 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:35.707235 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:37.713819 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:39.718933 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:41.725254 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:43.731214 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:45.735752 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:47.741306 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:49.747408 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:51.752705 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:53.757856 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:55.763251 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:57.770336 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:39:59.776348 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:01.782966 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:03.788487 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:05.794622 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:07.801546 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:09.806853 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:11.812508 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:13.818943 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:15.825215 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:17.831620 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:19.837304 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:21.842933 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:23.848504 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:25.853816 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:27.860556 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:29.866122 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:31.872372 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:33.877806 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:35.883345 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:37.890140 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:39.895526 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:41.902319 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:43.908906 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:45.913698 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:47.920233 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:49.925790 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:51.931752 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:53.938492 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:55.944113 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:57.949574 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:40:59.956189 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:01.961828 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:03.967262 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:05.972205 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:07.979130 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:09.985264 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:11.991566 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:13.997815 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:16.003023 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:18.008935 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:20.014703 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:22.020216 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:24.025893 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:26.032489 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:28.038441 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:30.044258 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:32.049891 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:34.056074 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:36.060620 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:38.065712 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:40.071216 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:42.077955 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:44.083726 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:46.090247 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:48.095895 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:50.102201 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:52.107616 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:54.113901 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:56.118506 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:41:58.124834 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:00.130317 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:02.136202 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:04.141933 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:06.147184 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:08.153022 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:10.158988 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:12.164947 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:14.170356 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:16.175698 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:18.182406 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:20.188212 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:22.194350 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:24.200628 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:26.205614 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:28.211772 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:30.216555 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:32.221751 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:34.227359 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  I0722 19:42:36.233115 21 container_probe.go:1759] Get pod busybox-31141277-4afb-4bec-916b-641f37ca007f in namespace container-probe-1809
  STEP: deleting the pod @ 07/22/25 19:42:38.234
  I0722 19:42:38.250351 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1809" for this suite. @ 07/22/25 19:42:38.255
• [242.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 07/22/25 19:42:38.262
  I0722 19:42:38.262564 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:42:38.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:42:38.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:42:38.281
  STEP: Creating pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973 @ 07/22/25 19:42:38.284
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 19:42:40.305
  I0722 19:42:40.310431 21 container_probe.go:1749] Initial restart count of pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f is 0
  I0722 19:42:40.313769 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:42.321423 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:44.326895 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:46.332657 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:48.338481 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:50.344896 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:52.350138 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:54.355758 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:56.361170 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:42:58.366661 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:00.372852 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:02.378827 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:04.383971 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:06.389818 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:08.395601 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:10.400745 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:12.407472 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:14.412872 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:16.419172 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:18.425897 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:20.431525 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:22.436926 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:24.441799 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:26.446823 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:28.453554 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:30.458806 21 container_probe.go:1759] Get pod busybox-cd21e161-27c0-4899-ac89-f52fdb00779f in namespace container-probe-2973
  I0722 19:43:30.458847 21 container_probe.go:1763] Restart count of pod container-probe-2973/busybox-cd21e161-27c0-4899-ac89-f52fdb00779f is now 1 (50.148382798s elapsed)
  STEP: deleting the pod @ 07/22/25 19:43:30.458
  I0722 19:43:30.475930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2973" for this suite. @ 07/22/25 19:43:30.48
• [52.225 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/22/25 19:43:30.488
  I0722 19:43:30.488188 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename events @ 07/22/25 19:43:30.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:30.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:30.506
  STEP: Create set of events @ 07/22/25 19:43:30.51
  STEP: get a list of Events with a label in the current namespace @ 07/22/25 19:43:30.526
  STEP: delete a list of events @ 07/22/25 19:43:30.53
  I0722 19:43:30.530602 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/22/25 19:43:30.551
  I0722 19:43:30.555619 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1646" for this suite. @ 07/22/25 19:43:30.582
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/22/25 19:43:30.589
  I0722 19:43:30.589761 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename events @ 07/22/25 19:43:30.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:30.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:30.606
  STEP: Create set of events @ 07/22/25 19:43:30.608
  I0722 19:43:30.616731 21 core_events.go:198] created test-event-1
  I0722 19:43:30.621390 21 core_events.go:198] created test-event-2
  I0722 19:43:30.626392 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/22/25 19:43:30.626
  STEP: delete collection of events @ 07/22/25 19:43:30.63
  I0722 19:43:30.630128 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/22/25 19:43:30.649
  I0722 19:43:30.649865 21 core_events.go:230] requesting list of events to confirm quantity
  I0722 19:43:30.654324 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4561" for this suite. @ 07/22/25 19:43:30.683
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/22/25 19:43:30.692
  I0722 19:43:30.692127 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 19:43:30.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:30.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:30.712
  I0722 19:43:32.737824 21 delete.go:62] Deleting pod "var-expansion-c9207583-3ba8-4ca2-8278-eadbf14c7f57" in namespace "var-expansion-8659"
  I0722 19:43:32.747310 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-c9207583-3ba8-4ca2-8278-eadbf14c7f57" to be fully deleted
  I0722 19:43:34.757275 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8659" for this suite. @ 07/22/25 19:43:34.762
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/22/25 19:43:34.771
  I0722 19:43:34.771803 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:43:34.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:34.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:34.789
  I0722 19:43:34.792541 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: creating the pod @ 07/22/25 19:43:34.792
  STEP: submitting the pod to kubernetes @ 07/22/25 19:43:34.792
  I0722 19:43:36.834227 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4132" for this suite. @ 07/22/25 19:43:36.839
• [2.076 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/22/25 19:43:36.848
  I0722 19:43:36.848196 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename certificates @ 07/22/25 19:43:36.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:36.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:36.87
  STEP: getting /apis @ 07/22/25 19:43:37.179
  STEP: getting /apis/certificates.k8s.io @ 07/22/25 19:43:37.183
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/22/25 19:43:37.184
  STEP: creating @ 07/22/25 19:43:37.185
  STEP: getting @ 07/22/25 19:43:37.204
  STEP: listing @ 07/22/25 19:43:37.208
  STEP: watching @ 07/22/25 19:43:37.212
  I0722 19:43:37.212833 21 certificates.go:316] starting watch
  STEP: patching @ 07/22/25 19:43:37.214
  STEP: updating @ 07/22/25 19:43:37.222
  I0722 19:43:37.227906 21 certificates.go:332] waiting for watch events with expected annotations
  I0722 19:43:37.227946 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/22/25 19:43:37.228
  STEP: patching /approval @ 07/22/25 19:43:37.232
  STEP: updating /approval @ 07/22/25 19:43:37.239
  STEP: getting /status @ 07/22/25 19:43:37.247
  STEP: patching /status @ 07/22/25 19:43:37.252
  STEP: updating /status @ 07/22/25 19:43:37.26
  STEP: deleting @ 07/22/25 19:43:37.267
  STEP: deleting a collection @ 07/22/25 19:43:37.281
  I0722 19:43:37.302614 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7067" for this suite. @ 07/22/25 19:43:37.307
• [0.466 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 07/22/25 19:43:37.314
  I0722 19:43:37.314094 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:43:37.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:37.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:37.33
  STEP: creating a Service @ 07/22/25 19:43:37.337
  STEP: watching for the Service to be added @ 07/22/25 19:43:37.352
  I0722 19:43:37.354420 21 service.go:3425] Found Service test-service-jxgcc in namespace services-5886 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30646}]
  I0722 19:43:37.354448 21 service.go:3432] Service test-service-jxgcc created
  STEP: Getting /status @ 07/22/25 19:43:37.354
  I0722 19:43:37.359655 21 service.go:3443] Service test-service-jxgcc has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/22/25 19:43:37.359
  STEP: watching for the Service to be patched @ 07/22/25 19:43:37.368
  I0722 19:43:37.370389 21 service.go:3466] observed Service test-service-jxgcc in namespace services-5886 with annotations: map[] & LoadBalancer: {[]}
  I0722 19:43:37.370427 21 service.go:3469] Found Service test-service-jxgcc in namespace services-5886 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0047ed2a0 []}]}
  I0722 19:43:37.370437 21 service.go:3476] Service test-service-jxgcc has service status patched
  STEP: updating the ServiceStatus @ 07/22/25 19:43:37.37
  I0722 19:43:37.381786 21 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/22/25 19:43:37.381
  I0722 19:43:37.383345 21 service.go:3507] Observed Service test-service-jxgcc in namespace services-5886 with annotations: map[] & Conditions: []
  I0722 19:43:37.383369 21 service.go:3518] Observed Service test-service-jxgcc in namespace services-5886 with annotations: map[patchedstatus:true] & Conditions: []
  I0722 19:43:37.383391 21 service.go:3514] Found Service test-service-jxgcc in namespace services-5886 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0722 19:43:37.383402 21 service.go:3525] Service test-service-jxgcc has service status updated
  STEP: patching the service @ 07/22/25 19:43:37.383
  STEP: watching for the Service to be patched @ 07/22/25 19:43:37.394
  I0722 19:43:37.395852 21 service.go:3548] observed Service test-service-jxgcc in namespace services-5886 with labels: map[test-service-static:true]
  I0722 19:43:37.395900 21 service.go:3548] observed Service test-service-jxgcc in namespace services-5886 with labels: map[test-service-static:true]
  I0722 19:43:37.395950 21 service.go:3548] observed Service test-service-jxgcc in namespace services-5886 with labels: map[test-service-static:true]
  I0722 19:43:37.395991 21 service.go:3551] Found Service test-service-jxgcc in namespace services-5886 with labels: map[test-service:patched test-service-static:true]
  I0722 19:43:37.396004 21 service.go:3558] Service test-service-jxgcc patched
  STEP: deleting the service @ 07/22/25 19:43:37.396
  STEP: watching for the Service to be deleted @ 07/22/25 19:43:37.417
  I0722 19:43:37.419387 21 service.go:3582] Observed event: ADDED
  I0722 19:43:37.419413 21 service.go:3582] Observed event: MODIFIED
  I0722 19:43:37.419516 21 service.go:3582] Observed event: MODIFIED
  I0722 19:43:37.419533 21 service.go:3582] Observed event: MODIFIED
  I0722 19:43:37.419557 21 service.go:3578] Found Service test-service-jxgcc in namespace services-5886 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0722 19:43:37.419568 21 service.go:3587] Service test-service-jxgcc deleted
  I0722 19:43:37.419662 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5886" for this suite. @ 07/22/25 19:43:37.424
• [0.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/22/25 19:43:37.431
  I0722 19:43:37.431308 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:43:37.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:37.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:37.449
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/22/25 19:43:37.452
  STEP: Saw pod success @ 07/22/25 19:43:41.482
  I0722 19:43:41.487292 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-dcd66563-b37a-4d95-8a00-1ea6d1cfe0d2 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:43:41.505
  I0722 19:43:41.525835 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4184" for this suite. @ 07/22/25 19:43:41.53
• [4.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/22/25 19:43:41.537
  I0722 19:43:41.537326 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/22/25 19:43:41.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:41.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:41.555
  STEP: mirroring a new custom Endpoint @ 07/22/25 19:43:41.568
  I0722 19:43:41.578997 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/22/25 19:43:43.586
  STEP: mirroring deletion of a custom Endpoint @ 07/22/25 19:43:43.596
  I0722 19:43:43.612259 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6591" for this suite. @ 07/22/25 19:43:43.618
• [2.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/22/25 19:43:43.626
  I0722 19:43:43.626090 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:43:43.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:43.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:43.641
  STEP: Creating the pod @ 07/22/25 19:43:43.646
  I0722 19:43:46.198406 21 pod_client.go:173] Successfully updated pod "annotationupdate61e7bf1b-6279-4664-b071-991314fe667d"
  I0722 19:43:48.215839 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-370" for this suite. @ 07/22/25 19:43:48.22
• [4.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 07/22/25 19:43:48.23
  I0722 19:43:48.230710 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename security-context-test @ 07/22/25 19:43:48.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:48.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:48.249
  I0722 19:43:52.281796 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-752" for this suite. @ 07/22/25 19:43:52.286
• [4.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 07/22/25 19:43:52.293
  I0722 19:43:52.293841 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:43:52.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:52.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:52.323
  STEP: Setting up server cert @ 07/22/25 19:43:52.349
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:43:52.509
  STEP: Deploying the webhook pod @ 07/22/25 19:43:52.515
  STEP: Wait for the deployment to be ready @ 07/22/25 19:43:52.53
  I0722 19:43:52.541909 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:43:54.556
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:43:54.568
  I0722 19:43:55.568894 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/22/25 19:43:55.578
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/22/25 19:43:55.597
  STEP: Creating a configMap that should not be mutated @ 07/22/25 19:43:55.605
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/22/25 19:43:55.618
  STEP: Creating a configMap that should be mutated @ 07/22/25 19:43:55.626
  I0722 19:43:55.693377 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5046" for this suite. @ 07/22/25 19:43:55.698
  STEP: Destroying namespace "webhook-markers-2566" for this suite. @ 07/22/25 19:43:55.71
• [3.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 07/22/25 19:43:55.719
  I0722 19:43:55.719714 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 19:43:55.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:43:55.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:43:55.737
  I0722 19:43:55.756038 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0722 19:44:55.762499 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/22/25 19:44:55.767
  I0722 19:44:55.767359 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/22/25 19:44:55.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:44:55.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:44:55.786
  STEP: Finding an available node @ 07/22/25 19:44:55.789
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/22/25 19:44:55.789
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/22/25 19:44:57.813
  I0722 19:44:57.825514 21 preemption.go:709] found a healthy node: ip-172-31-31-147
  STEP: Adding a custom resource @ 07/22/25 19:44:57.83
  I0722 19:45:03.905588 21 preemption.go:828] pods created so far: [1 1 1]
  I0722 19:45:03.905614 21 preemption.go:829] length of pods created so far: 3
  I0722 19:45:05.919814 21 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 07/22/25 19:45:12.92
  STEP: Removing a custom resource @ 07/22/25 19:45:12.987
  STEP: Removing a custom resource @ 07/22/25 19:45:12.996
  STEP: Removing a custom resource @ 07/22/25 19:45:13.005
  I0722 19:45:13.015518 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4063" for this suite. @ 07/22/25 19:45:13.019
  I0722 19:45:13.026387 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5685" for this suite. @ 07/22/25 19:45:13.121
• [77.410 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/22/25 19:45:13.129
  I0722 19:45:13.129625 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:45:13.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:45:13.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:45:13.148
  STEP: creating a Pod with a static label @ 07/22/25 19:45:13.157
  STEP: watching for Pod to be ready @ 07/22/25 19:45:13.166
  I0722 19:45:13.168112 21 pods.go:945] observed Pod pod-test in namespace pods-6758 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0722 19:45:13.171332 21 pods.go:945] observed Pod pod-test in namespace pods-6758 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC  }]
  I0722 19:45:13.192941 21 pods.go:945] observed Pod pod-test in namespace pods-6758 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC  }]
  I0722 19:45:14.530564 21 pods.go:948] Found Pod pod-test in namespace pods-6758 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:14 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-07-22 19:45:13 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/22/25 19:45:14.534
  STEP: getting the Pod and ensuring that it's patched @ 07/22/25 19:45:14.545
  STEP: replacing the Pod's status Ready condition to False @ 07/22/25 19:45:14.551
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/22/25 19:45:14.565
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/22/25 19:45:14.565
  STEP: watching for the Pod to be deleted @ 07/22/25 19:45:14.577
  I0722 19:45:14.579620 21 pods.go:1058] observed event type MODIFIED
  I0722 19:45:16.536527 21 pods.go:1058] observed event type MODIFIED
  I0722 19:45:16.680370 21 pods.go:1058] observed event type MODIFIED
  I0722 19:45:17.536859 21 pods.go:1058] observed event type MODIFIED
  I0722 19:45:17.547389 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6758" for this suite. @ 07/22/25 19:45:17.552
• [4.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/22/25 19:45:17.559
  I0722 19:45:17.559864 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 19:45:17.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:45:17.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:45:17.579
  STEP: create the rc @ 07/22/25 19:45:17.654
  W0722 19:45:17.663076      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/22/25 19:45:23.671
  STEP: wait for the rc to be deleted @ 07/22/25 19:45:23.694
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/22/25 19:45:28.703
  STEP: Gathering metrics @ 07/22/25 19:45:58.714
  W0722 19:45:58.719987      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 19:45:58.720015 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 19:45:58.720085 21 delete.go:95] Deleting pod "simpletest.rc-2bstt" in namespace "gc-453"
  I0722 19:45:58.736490 21 delete.go:95] Deleting pod "simpletest.rc-2fgqr" in namespace "gc-453"
  I0722 19:45:58.750074 21 delete.go:95] Deleting pod "simpletest.rc-2j9cr" in namespace "gc-453"
  I0722 19:45:58.763314 21 delete.go:95] Deleting pod "simpletest.rc-2lk5g" in namespace "gc-453"
  I0722 19:45:58.780699 21 delete.go:95] Deleting pod "simpletest.rc-2xbv4" in namespace "gc-453"
  I0722 19:45:58.795988 21 delete.go:95] Deleting pod "simpletest.rc-422dp" in namespace "gc-453"
  I0722 19:45:58.809540 21 delete.go:95] Deleting pod "simpletest.rc-45h46" in namespace "gc-453"
  I0722 19:45:58.827604 21 delete.go:95] Deleting pod "simpletest.rc-4tk6r" in namespace "gc-453"
  I0722 19:45:58.841036 21 delete.go:95] Deleting pod "simpletest.rc-4vfmw" in namespace "gc-453"
  I0722 19:45:58.855699 21 delete.go:95] Deleting pod "simpletest.rc-5nn2b" in namespace "gc-453"
  I0722 19:45:58.870027 21 delete.go:95] Deleting pod "simpletest.rc-6c4vw" in namespace "gc-453"
  I0722 19:45:58.885102 21 delete.go:95] Deleting pod "simpletest.rc-7kvln" in namespace "gc-453"
  I0722 19:45:58.898240 21 delete.go:95] Deleting pod "simpletest.rc-7r29r" in namespace "gc-453"
  I0722 19:45:58.913444 21 delete.go:95] Deleting pod "simpletest.rc-8j9pm" in namespace "gc-453"
  I0722 19:45:58.930669 21 delete.go:95] Deleting pod "simpletest.rc-9547t" in namespace "gc-453"
  I0722 19:45:58.946499 21 delete.go:95] Deleting pod "simpletest.rc-9h8p4" in namespace "gc-453"
  I0722 19:45:58.963291 21 delete.go:95] Deleting pod "simpletest.rc-9lc9m" in namespace "gc-453"
  I0722 19:45:58.978105 21 delete.go:95] Deleting pod "simpletest.rc-9sqbq" in namespace "gc-453"
  I0722 19:45:58.992118 21 delete.go:95] Deleting pod "simpletest.rc-b9vzp" in namespace "gc-453"
  I0722 19:45:59.004752 21 delete.go:95] Deleting pod "simpletest.rc-bqt7r" in namespace "gc-453"
  I0722 19:45:59.020471 21 delete.go:95] Deleting pod "simpletest.rc-c2hw9" in namespace "gc-453"
  I0722 19:45:59.034408 21 delete.go:95] Deleting pod "simpletest.rc-c7hsd" in namespace "gc-453"
  I0722 19:45:59.049508 21 delete.go:95] Deleting pod "simpletest.rc-cj6dl" in namespace "gc-453"
  I0722 19:45:59.068893 21 delete.go:95] Deleting pod "simpletest.rc-ckkk5" in namespace "gc-453"
  I0722 19:45:59.080902 21 delete.go:95] Deleting pod "simpletest.rc-cxhbl" in namespace "gc-453"
  I0722 19:45:59.096124 21 delete.go:95] Deleting pod "simpletest.rc-dnjcv" in namespace "gc-453"
  I0722 19:45:59.110328 21 delete.go:95] Deleting pod "simpletest.rc-dsjh8" in namespace "gc-453"
  I0722 19:45:59.127150 21 delete.go:95] Deleting pod "simpletest.rc-dx57k" in namespace "gc-453"
  I0722 19:45:59.141870 21 delete.go:95] Deleting pod "simpletest.rc-f4srp" in namespace "gc-453"
  I0722 19:45:59.155752 21 delete.go:95] Deleting pod "simpletest.rc-f7mtw" in namespace "gc-453"
  I0722 19:45:59.182196 21 delete.go:95] Deleting pod "simpletest.rc-fc94k" in namespace "gc-453"
  I0722 19:45:59.205516 21 delete.go:95] Deleting pod "simpletest.rc-fh575" in namespace "gc-453"
  I0722 19:45:59.222089 21 delete.go:95] Deleting pod "simpletest.rc-ftrpd" in namespace "gc-453"
  I0722 19:45:59.245595 21 delete.go:95] Deleting pod "simpletest.rc-fwglr" in namespace "gc-453"
  I0722 19:45:59.261401 21 delete.go:95] Deleting pod "simpletest.rc-g9kxw" in namespace "gc-453"
  I0722 19:45:59.277199 21 delete.go:95] Deleting pod "simpletest.rc-g9w2t" in namespace "gc-453"
  I0722 19:45:59.290254 21 delete.go:95] Deleting pod "simpletest.rc-gfxbc" in namespace "gc-453"
  I0722 19:45:59.304451 21 delete.go:95] Deleting pod "simpletest.rc-grkj2" in namespace "gc-453"
  I0722 19:45:59.317414 21 delete.go:95] Deleting pod "simpletest.rc-h5rcq" in namespace "gc-453"
  I0722 19:45:59.331689 21 delete.go:95] Deleting pod "simpletest.rc-hbqq2" in namespace "gc-453"
  I0722 19:45:59.346197 21 delete.go:95] Deleting pod "simpletest.rc-hjxb9" in namespace "gc-453"
  I0722 19:45:59.362228 21 delete.go:95] Deleting pod "simpletest.rc-hpbhg" in namespace "gc-453"
  I0722 19:45:59.375252 21 delete.go:95] Deleting pod "simpletest.rc-j9dxq" in namespace "gc-453"
  I0722 19:45:59.388446 21 delete.go:95] Deleting pod "simpletest.rc-jcf2l" in namespace "gc-453"
  I0722 19:45:59.403427 21 delete.go:95] Deleting pod "simpletest.rc-jgbwr" in namespace "gc-453"
  I0722 19:45:59.423847 21 delete.go:95] Deleting pod "simpletest.rc-k49k6" in namespace "gc-453"
  I0722 19:45:59.439169 21 delete.go:95] Deleting pod "simpletest.rc-kbkq5" in namespace "gc-453"
  I0722 19:45:59.457537 21 delete.go:95] Deleting pod "simpletest.rc-kdd79" in namespace "gc-453"
  I0722 19:45:59.472265 21 delete.go:95] Deleting pod "simpletest.rc-kjxxt" in namespace "gc-453"
  I0722 19:45:59.487761 21 delete.go:95] Deleting pod "simpletest.rc-kwmrp" in namespace "gc-453"
  I0722 19:45:59.510284 21 delete.go:95] Deleting pod "simpletest.rc-kzg62" in namespace "gc-453"
  I0722 19:45:59.523545 21 delete.go:95] Deleting pod "simpletest.rc-l5g8m" in namespace "gc-453"
  I0722 19:45:59.536690 21 delete.go:95] Deleting pod "simpletest.rc-l88qk" in namespace "gc-453"
  I0722 19:45:59.558089 21 delete.go:95] Deleting pod "simpletest.rc-llvt8" in namespace "gc-453"
  I0722 19:45:59.568200 21 delete.go:95] Deleting pod "simpletest.rc-mfjkm" in namespace "gc-453"
  I0722 19:45:59.583484 21 delete.go:95] Deleting pod "simpletest.rc-mfwfr" in namespace "gc-453"
  I0722 19:45:59.601512 21 delete.go:95] Deleting pod "simpletest.rc-mjvb2" in namespace "gc-453"
  I0722 19:45:59.614620 21 delete.go:95] Deleting pod "simpletest.rc-mqjwt" in namespace "gc-453"
  I0722 19:45:59.633179 21 delete.go:95] Deleting pod "simpletest.rc-n7l7g" in namespace "gc-453"
  I0722 19:45:59.650001 21 delete.go:95] Deleting pod "simpletest.rc-nh6rg" in namespace "gc-453"
  I0722 19:45:59.668237 21 delete.go:95] Deleting pod "simpletest.rc-nnjck" in namespace "gc-453"
  I0722 19:45:59.682901 21 delete.go:95] Deleting pod "simpletest.rc-nx4ml" in namespace "gc-453"
  I0722 19:45:59.697851 21 delete.go:95] Deleting pod "simpletest.rc-nxz6n" in namespace "gc-453"
  I0722 19:45:59.714363 21 delete.go:95] Deleting pod "simpletest.rc-pb5tb" in namespace "gc-453"
  I0722 19:45:59.733184 21 delete.go:95] Deleting pod "simpletest.rc-phmhr" in namespace "gc-453"
  I0722 19:45:59.752494 21 delete.go:95] Deleting pod "simpletest.rc-pzvhv" in namespace "gc-453"
  I0722 19:45:59.769677 21 delete.go:95] Deleting pod "simpletest.rc-q44w6" in namespace "gc-453"
  I0722 19:45:59.784693 21 delete.go:95] Deleting pod "simpletest.rc-q9jvb" in namespace "gc-453"
  I0722 19:45:59.797730 21 delete.go:95] Deleting pod "simpletest.rc-qbs4q" in namespace "gc-453"
  I0722 19:45:59.815659 21 delete.go:95] Deleting pod "simpletest.rc-qjj87" in namespace "gc-453"
  I0722 19:45:59.830334 21 delete.go:95] Deleting pod "simpletest.rc-qngcp" in namespace "gc-453"
  I0722 19:45:59.872628 21 delete.go:95] Deleting pod "simpletest.rc-rbptb" in namespace "gc-453"
  I0722 19:45:59.922795 21 delete.go:95] Deleting pod "simpletest.rc-rmmtr" in namespace "gc-453"
  I0722 19:45:59.970658 21 delete.go:95] Deleting pod "simpletest.rc-rrmzb" in namespace "gc-453"
  I0722 19:46:00.025378 21 delete.go:95] Deleting pod "simpletest.rc-rvgrf" in namespace "gc-453"
  I0722 19:46:00.073749 21 delete.go:95] Deleting pod "simpletest.rc-s5pfc" in namespace "gc-453"
  I0722 19:46:00.125339 21 delete.go:95] Deleting pod "simpletest.rc-s5ts4" in namespace "gc-453"
  I0722 19:46:00.173075 21 delete.go:95] Deleting pod "simpletest.rc-scvw2" in namespace "gc-453"
  I0722 19:46:00.232476 21 delete.go:95] Deleting pod "simpletest.rc-shcph" in namespace "gc-453"
  I0722 19:46:00.272913 21 delete.go:95] Deleting pod "simpletest.rc-slmbj" in namespace "gc-453"
  I0722 19:46:00.325037 21 delete.go:95] Deleting pod "simpletest.rc-sqddb" in namespace "gc-453"
  I0722 19:46:00.370828 21 delete.go:95] Deleting pod "simpletest.rc-sqxx5" in namespace "gc-453"
  I0722 19:46:00.420532 21 delete.go:95] Deleting pod "simpletest.rc-sv44x" in namespace "gc-453"
  I0722 19:46:00.472735 21 delete.go:95] Deleting pod "simpletest.rc-t556d" in namespace "gc-453"
  I0722 19:46:00.522271 21 delete.go:95] Deleting pod "simpletest.rc-t97jl" in namespace "gc-453"
  I0722 19:46:00.571811 21 delete.go:95] Deleting pod "simpletest.rc-v24vc" in namespace "gc-453"
  I0722 19:46:00.622527 21 delete.go:95] Deleting pod "simpletest.rc-v2wqk" in namespace "gc-453"
  I0722 19:46:00.675615 21 delete.go:95] Deleting pod "simpletest.rc-vnmf9" in namespace "gc-453"
  I0722 19:46:00.721959 21 delete.go:95] Deleting pod "simpletest.rc-vr9c4" in namespace "gc-453"
  I0722 19:46:00.772751 21 delete.go:95] Deleting pod "simpletest.rc-vttln" in namespace "gc-453"
  I0722 19:46:00.822947 21 delete.go:95] Deleting pod "simpletest.rc-wbf7h" in namespace "gc-453"
  I0722 19:46:00.872483 21 delete.go:95] Deleting pod "simpletest.rc-wnn4p" in namespace "gc-453"
  I0722 19:46:00.926107 21 delete.go:95] Deleting pod "simpletest.rc-x6qjq" in namespace "gc-453"
  I0722 19:46:00.983879 21 delete.go:95] Deleting pod "simpletest.rc-xbhwj" in namespace "gc-453"
  I0722 19:46:01.021664 21 delete.go:95] Deleting pod "simpletest.rc-xbzbc" in namespace "gc-453"
  I0722 19:46:01.075006 21 delete.go:95] Deleting pod "simpletest.rc-xh64n" in namespace "gc-453"
  I0722 19:46:01.123013 21 delete.go:95] Deleting pod "simpletest.rc-xhtgl" in namespace "gc-453"
  I0722 19:46:01.171611 21 delete.go:95] Deleting pod "simpletest.rc-xjr9d" in namespace "gc-453"
  I0722 19:46:01.218438 21 delete.go:95] Deleting pod "simpletest.rc-xldwz" in namespace "gc-453"
  I0722 19:46:01.274494 21 delete.go:95] Deleting pod "simpletest.rc-zv9tj" in namespace "gc-453"
  I0722 19:46:01.322564 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-453" for this suite. @ 07/22/25 19:46:01.364
• [43.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/22/25 19:46:01.421
  I0722 19:46:01.421228 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:46:01.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:01.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:01.47
  STEP: Creating secret with name secret-test-ddbc672e-87e1-4f1b-801d-8d72095f5de8 @ 07/22/25 19:46:01.475
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:46:01.48
  STEP: Saw pod success @ 07/22/25 19:46:05.509
  I0722 19:46:05.513288 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-secrets-8d409c3f-0d66-4e21-8ef8-a30a603960b5 container secret-env-test: <nil>
  STEP: delete the pod @ 07/22/25 19:46:05.523
  I0722 19:46:05.543711 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2163" for this suite. @ 07/22/25 19:46:05.548
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/22/25 19:46:05.556
  I0722 19:46:05.556949 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 19:46:05.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:05.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:05.578
  STEP: Creating ReplicationController "e2e-rc-s7sbk" @ 07/22/25 19:46:05.583
  I0722 19:46:05.592159 21 rc.go:792] Get Replication Controller "e2e-rc-s7sbk" to confirm replicas
  I0722 19:46:06.592356 21 rc.go:792] Get Replication Controller "e2e-rc-s7sbk" to confirm replicas
  I0722 19:46:06.597589 21 rc.go:801] Found 1 replicas for "e2e-rc-s7sbk" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-s7sbk" @ 07/22/25 19:46:06.597
  STEP: Updating a scale subresource @ 07/22/25 19:46:06.601
  STEP: Verifying replicas where modified for replication controller "e2e-rc-s7sbk" @ 07/22/25 19:46:06.607
  I0722 19:46:06.607934 21 rc.go:792] Get Replication Controller "e2e-rc-s7sbk" to confirm replicas
  I0722 19:46:07.608111 21 rc.go:792] Get Replication Controller "e2e-rc-s7sbk" to confirm replicas
  I0722 19:46:07.612310 21 rc.go:801] Found 2 replicas for "e2e-rc-s7sbk" replication controller
  I0722 19:46:07.612464 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-287" for this suite. @ 07/22/25 19:46:07.617
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 07/22/25 19:46:07.625
  I0722 19:46:07.625122 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:46:07.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:07.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:07.643
  STEP: create deployment with httpd image @ 07/22/25 19:46:07.646
  I0722 19:46:07.646713 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-2260 create -f -'
  I0722 19:46:07.714019 21 builder.go:146] stderr: ""
  I0722 19:46:07.714078 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/22/25 19:46:07.714
  I0722 19:46:07.714158 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-2260 diff -f -'
  I0722 19:46:12.015167 21 builder.go:135] rc: 1
  I0722 19:46:12.015248 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-2260 delete -f -'
  I0722 19:46:12.067918 21 builder.go:146] stderr: ""
  I0722 19:46:12.067956 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0722 19:46:12.068125 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2260" for this suite. @ 07/22/25 19:46:12.071
• [4.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/22/25 19:46:12.08
  I0722 19:46:12.080853 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:46:12.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:12.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:12.105
  STEP: Creating secret with name secret-test-b85c4478-fc6f-4ced-910a-f30fa2f06f61 @ 07/22/25 19:46:12.108
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:46:12.114
  STEP: Saw pod success @ 07/22/25 19:46:14.133
  I0722 19:46:14.136362 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-secrets-d3cada23-1ca4-48a0-bd27-abfc584092b6 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:46:14.142
  I0722 19:46:14.162684 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4100" for this suite. @ 07/22/25 19:46:14.17
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/22/25 19:46:14.178
  I0722 19:46:14.178205 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename disruption @ 07/22/25 19:46:14.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:14.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:14.195
  STEP: Waiting for the pdb to be processed @ 07/22/25 19:46:14.204
  STEP: Waiting for all pods to be running @ 07/22/25 19:46:16.241
  I0722 19:46:16.251510 21 disruption.go:691] running pods: 0 < 3
  I0722 19:46:18.251616 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4544" for this suite. @ 07/22/25 19:46:18.256
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/22/25 19:46:18.265
  I0722 19:46:18.265661 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:46:18.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:18.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:18.281
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/22/25 19:46:18.285
  STEP: Saw pod success @ 07/22/25 19:46:20.303
  I0722 19:46:20.307480 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-4b20bb55-ad1a-4d87-b414-e981007958a2 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:46:20.315
  I0722 19:46:20.332813 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8229" for this suite. @ 07/22/25 19:46:20.337
• [2.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/22/25 19:46:20.347
  I0722 19:46:20.347156 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:46:20.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:20.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:20.368
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/22/25 19:46:20.371
  STEP: Saw pod success @ 07/22/25 19:46:24.396
  I0722 19:46:24.400294 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-5193c68a-7150-4b55-a4be-d5e871215b19 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:46:24.412
  I0722 19:46:24.432906 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4082" for this suite. @ 07/22/25 19:46:24.437
• [4.097 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/22/25 19:46:24.444
  I0722 19:46:24.444636 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename proxy @ 07/22/25 19:46:24.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:24.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:24.461
  I0722 19:46:24.464776 21 proxy.go:293] Creating pod...
  I0722 19:46:26.489210 21 proxy.go:317] Creating service...
  I0722 19:46:26.502260 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/DELETE
  I0722 19:46:26.508119 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 19:46:26.508180 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/GET
  I0722 19:46:26.513568 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0722 19:46:26.513596 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/HEAD
  I0722 19:46:26.517492 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0722 19:46:26.517509 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/OPTIONS
  I0722 19:46:26.522012 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 19:46:26.522074 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/PATCH
  I0722 19:46:26.526559 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 19:46:26.526584 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/POST
  I0722 19:46:26.530516 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 19:46:26.530549 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/pods/agnhost/proxy/some/path/with/PUT
  I0722 19:46:26.534602 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 19:46:26.534616 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/DELETE
  I0722 19:46:26.539608 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0722 19:46:26.539629 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/GET
  I0722 19:46:26.545512 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0722 19:46:26.545549 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/HEAD
  I0722 19:46:26.552189 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0722 19:46:26.552210 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/OPTIONS
  I0722 19:46:26.557038 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0722 19:46:26.557089 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/PATCH
  I0722 19:46:26.562214 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0722 19:46:26.562254 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/POST
  I0722 19:46:26.568477 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0722 19:46:26.568510 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-440/services/test-service/proxy/some/path/with/PUT
  I0722 19:46:26.574670 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0722 19:46:26.574795 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-440" for this suite. @ 07/22/25 19:46:26.579
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/22/25 19:46:26.589
  I0722 19:46:26.589721 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 19:46:26.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:26.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:26.609
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/22/25 19:46:26.612
  STEP: Saw pod success @ 07/22/25 19:46:30.64
  I0722 19:46:30.645556 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-24cf44ff-c62c-4e0b-8a62-14443a1f3dc6 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 19:46:30.652
  I0722 19:46:30.675930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9543" for this suite. @ 07/22/25 19:46:30.681
• [4.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/22/25 19:46:30.691
  I0722 19:46:30.691972 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 19:46:30.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:30.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:30.717
  STEP: Creating replication controller my-hostname-basic-759a4d5f-4fb3-4fff-bb17-680eb09be4bf @ 07/22/25 19:46:30.721
  I0722 19:46:30.730959 21 resource.go:87] Pod name my-hostname-basic-759a4d5f-4fb3-4fff-bb17-680eb09be4bf: Found 0 pods out of 1
  I0722 19:46:35.735784 21 resource.go:87] Pod name my-hostname-basic-759a4d5f-4fb3-4fff-bb17-680eb09be4bf: Found 1 pods out of 1
  I0722 19:46:35.735820 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-759a4d5f-4fb3-4fff-bb17-680eb09be4bf" are running
  I0722 19:46:35.742079 21 rc.go:523] Pod "my-hostname-basic-759a4d5f-4fb3-4fff-bb17-680eb09be4bf-hv9tj" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:46:31 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:46:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:46:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:46:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:46:30 +0000 UTC Reason: Message:}])
  I0722 19:46:35.742100 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/22/25 19:46:35.742
  I0722 19:46:35.850567 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7622" for this suite. @ 07/22/25 19:46:35.857
• [5.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/22/25 19:46:35.867
  I0722 19:46:35.867542 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 19:46:35.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:35.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:35.911
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/22/25 19:46:35.915
  I0722 19:46:35.944546 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 19:46:35.944
  STEP: getting scale subresource @ 07/22/25 19:46:37.962
  STEP: updating a scale subresource @ 07/22/25 19:46:37.966
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/22/25 19:46:37.972
  STEP: Patch a scale subresource @ 07/22/25 19:46:37.979
  I0722 19:46:38.008478 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5781" for this suite. @ 07/22/25 19:46:38.013
• [2.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/22/25 19:46:38.025
  I0722 19:46:38.025216 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/22/25 19:46:38.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:38.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:38.05
  STEP: Creating 50 configmaps @ 07/22/25 19:46:38.055
  STEP: Creating RC which spawns configmap-volume pods @ 07/22/25 19:46:38.316
  I0722 19:46:38.402307 21 resource.go:87] Pod name wrapped-volume-race-ad6aeca4-d0c9-4269-b46b-638590c80ede: Found 4 pods out of 5
  I0722 19:46:43.408626 21 resource.go:87] Pod name wrapped-volume-race-ad6aeca4-d0c9-4269-b46b-638590c80ede: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/22/25 19:46:43.408
  STEP: Creating RC which spawns configmap-volume pods @ 07/22/25 19:46:43.431
  I0722 19:46:43.456330 21 resource.go:87] Pod name wrapped-volume-race-029ec05b-0213-4339-beb5-19b7ab229d80: Found 1 pods out of 5
  I0722 19:46:48.465329 21 resource.go:87] Pod name wrapped-volume-race-029ec05b-0213-4339-beb5-19b7ab229d80: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/22/25 19:46:48.465
  STEP: Creating RC which spawns configmap-volume pods @ 07/22/25 19:46:48.49
  I0722 19:46:48.512563 21 resource.go:87] Pod name wrapped-volume-race-74e0a34f-69b4-49f8-9f27-7b3730f92e16: Found 1 pods out of 5
  I0722 19:46:53.520569 21 resource.go:87] Pod name wrapped-volume-race-74e0a34f-69b4-49f8-9f27-7b3730f92e16: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/22/25 19:46:53.52
  STEP: deleting ReplicationController wrapped-volume-race-74e0a34f-69b4-49f8-9f27-7b3730f92e16 in namespace emptydir-wrapper-5625, will wait for the garbage collector to delete the pods @ 07/22/25 19:46:53.544
  I0722 19:46:53.608189 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-74e0a34f-69b4-49f8-9f27-7b3730f92e16 took: 9.661792ms
  I0722 19:46:53.708564 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-74e0a34f-69b4-49f8-9f27-7b3730f92e16 pods took: 100.370649ms
  STEP: deleting ReplicationController wrapped-volume-race-029ec05b-0213-4339-beb5-19b7ab229d80 in namespace emptydir-wrapper-5625, will wait for the garbage collector to delete the pods @ 07/22/25 19:46:55.308
  I0722 19:46:55.372787 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-029ec05b-0213-4339-beb5-19b7ab229d80 took: 9.037699ms
  I0722 19:46:55.473804 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-029ec05b-0213-4339-beb5-19b7ab229d80 pods took: 101.012008ms
  STEP: deleting ReplicationController wrapped-volume-race-ad6aeca4-d0c9-4269-b46b-638590c80ede in namespace emptydir-wrapper-5625, will wait for the garbage collector to delete the pods @ 07/22/25 19:46:56.474
  I0722 19:46:56.540828 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-ad6aeca4-d0c9-4269-b46b-638590c80ede took: 10.749379ms
  I0722 19:46:56.641197 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-ad6aeca4-d0c9-4269-b46b-638590c80ede pods took: 100.366714ms
  STEP: Cleaning up the configMaps @ 07/22/25 19:46:57.741
  I0722 19:46:58.100689 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5625" for this suite. @ 07/22/25 19:46:58.105
• [20.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/22/25 19:46:58.115
  I0722 19:46:58.115461 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:46:58.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:46:58.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:46:58.136
  STEP: Creating configMap with name configmap-test-volume-map-36b4cd9d-8629-458e-9820-c0e04bae3c24 @ 07/22/25 19:46:58.139
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:46:58.144
  STEP: Saw pod success @ 07/22/25 19:47:02.173
  I0722 19:47:02.178317 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-58316001-5ae8-478a-a63f-9fd859a83802 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:47:02.184
  I0722 19:47:02.205542 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7364" for this suite. @ 07/22/25 19:47:02.21
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 07/22/25 19:47:02.22
  I0722 19:47:02.220516 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 19:47:02.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:47:02.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:47:02.239
  STEP: Setting up server cert @ 07/22/25 19:47:02.264
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 19:47:02.537
  STEP: Deploying the webhook pod @ 07/22/25 19:47:02.544
  STEP: Wait for the deployment to be ready @ 07/22/25 19:47:02.56
  I0722 19:47:02.574170 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/22/25 19:47:04.589
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 19:47:04.602
  I0722 19:47:05.602501 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/22/25 19:47:05.612
  STEP: verifying the validating webhook match conditions @ 07/22/25 19:47:05.62
  STEP: updating the validating webhook match conditions @ 07/22/25 19:47:05.624
  STEP: verifying the validating webhook match conditions @ 07/22/25 19:47:05.633
  I0722 19:47:05.681843 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6420" for this suite. @ 07/22/25 19:47:05.685
  STEP: Destroying namespace "webhook-markers-1414" for this suite. @ 07/22/25 19:47:05.696
• [3.483 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/22/25 19:47:05.703
  I0722 19:47:05.703253 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/22/25 19:47:05.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:47:05.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:47:05.719
  STEP: Setting up the test @ 07/22/25 19:47:05.723
  STEP: Creating hostNetwork=false pod @ 07/22/25 19:47:05.723
  STEP: Creating hostNetwork=true pod @ 07/22/25 19:47:07.748
  STEP: Running the test @ 07/22/25 19:47:09.773
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/22/25 19:47:09.773
  I0722 19:47:09.773364 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.773381 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.773416 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0722 19:47:09.811328 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:09.811381 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.811389 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.811442 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0722 19:47:09.844730 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:09.844816 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.844827 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.844883 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0722 19:47:09.876722 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:09.876767 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.876775 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.876839 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0722 19:47:09.913964 21 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/22/25 19:47:09.914
  I0722 19:47:09.914035 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.914082 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.914133 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0722 19:47:09.946617 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:09.946661 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.946671 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.946722 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0722 19:47:09.976756 21 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/22/25 19:47:09.976
  I0722 19:47:09.976866 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:09.976874 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:09.976921 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0722 19:47:10.011484 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:10.011535 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:10.011544 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:10.011624 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0722 19:47:10.041087 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:10.041134 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:10.041143 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:10.041195 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0722 19:47:10.084672 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:10.084744 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1208 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:47:10.084754 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:47:10.084825 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1208/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0722 19:47:10.112849 21 exec_util.go:108] Exec stderr: ""
  I0722 19:47:10.113004 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1208" for this suite. @ 07/22/25 19:47:10.119
• [4.425 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 07/22/25 19:47:10.128
  I0722 19:47:10.128737 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 19:47:10.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:47:10.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:47:10.146
  STEP: Creating service test in namespace statefulset-6546 @ 07/22/25 19:47:10.149
  STEP: Creating a new StatefulSet @ 07/22/25 19:47:10.156
  I0722 19:47:10.171257 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0722 19:47:20.174114 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 19:47:20.174143 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 19:47:20.174151 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0722 19:47:20.184607 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-6546 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 19:47:20.267020 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 19:47:20.267085 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 19:47:20.267097 21 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/22/25 19:47:30.278
  I0722 19:47:30.288287 21 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 07/22/25 19:47:30.288
  STEP: Updating Pods in reverse ordinal order @ 07/22/25 19:47:40.3
  I0722 19:47:40.303989 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-6546 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 19:47:40.383156 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 19:47:40.383192 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 19:47:40.383201 21 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 19:47:50.401226 21 wait.go:158] Waiting for StatefulSet statefulset-6546/ss2 to complete update
  STEP: Rolling back to a previous revision @ 07/22/25 19:48:00.403
  I0722 19:48:00.403408 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-6546 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0722 19:48:00.478425 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0722 19:48:00.478508 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0722 19:48:00.478518 21 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0722 19:48:10.501314 21 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/22/25 19:48:20.512
  I0722 19:48:20.515568 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=statefulset-6546 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0722 19:48:20.599241 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0722 19:48:20.599278 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0722 19:48:20.599288 21 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0722 19:48:30.616833 21 statefulset.go:138] Deleting all statefulset in ns statefulset-6546
  I0722 19:48:30.620744 21 rest.go:152] Scaling statefulset ss2 to 0
  I0722 19:48:40.639868 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 19:48:40.643538 21 rest.go:90] Deleting statefulset ss2
  I0722 19:48:40.664515 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6546" for this suite. @ 07/22/25 19:48:40.674
• [90.555 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/22/25 19:48:40.683
  I0722 19:48:40.683794 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 19:48:40.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:48:40.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:48:40.707
  I0722 19:48:40.711186 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0722 19:48:40.725158 21 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 07/22/25 19:48:42.744
  STEP: updating a scale subresource @ 07/22/25 19:48:42.748
  STEP: verifying the deployment Spec.Replicas was modified @ 07/22/25 19:48:42.756
  STEP: Patch a scale subresource @ 07/22/25 19:48:42.76
  I0722 19:48:42.784033 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6432",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ac65d5e-4586-4288-b048-c4b6da3c6c6c",
      ResourceVersion: (string) (len=5) "35853",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888810520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 19:48:42.792768 21 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6432",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00be9832-15e8-4984-b3b2-0bddedbe362c",
      ResourceVersion: (string) (len=5) "35860",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888810520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9ac65d5e-4586-4288-b048-c4b6da3c6c6c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 63 36 35 64  35 65 2d 34 35 38 36 2d  |\"9ac65d5e-4586-|
              00000120  34 32 38 38 2d 62 30 34  38 2d 63 34 62 36 64 61  |4288-b048-c4b6da|
              00000130  33 63 36 63 36 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3c6c6c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 19:48:42.804014 21 deployment.go:68] Pod "test-new-deployment-685b768f58-2cjsh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-2cjsh",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6432",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d2de750-2e87-4aa4-b829-78fc2a2c9aa4",
      ResourceVersion: (string) (len=5) "35862",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888810522,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "00be9832-15e8-4984-b3b2-0bddedbe362c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  62 65 39 38 33 32 2d 31  |d\":\"00be9832-1|
              00000090  35 65 38 2d 34 39 38 34  2d 62 33 62 32 2d 30 62  |5e8-4984-b3b2-0b|
              000000a0  64 64 65 64 62 65 33 36  32 63 5c 22 7d 22 3a 7b  |ddedbe362c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5qwz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5qwz5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888810522,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5qwz5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:48:42.805432 21 deployment.go:68] Pod "test-new-deployment-685b768f58-ms6tr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-ms6tr",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6432",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dab1afc6-0014-4799-96a3-d7245d0c2ac6",
      ResourceVersion: (string) (len=5) "35847",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888810520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "00be9832-15e8-4984-b3b2-0bddedbe362c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  62 65 39 38 33 32 2d 31  |d\":\"00be9832-1|
              00000090  35 65 38 2d 34 39 38 34  2d 62 33 62 32 2d 30 62  |5e8-4984-b3b2-0b|
              000000a0  64 64 65 64 62 65 33 36  32 63 5c 22 7d 22 3a 7b  |ddedbe362c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 31 34 38 5c 22 7d  |2.168.183.148\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bphjl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bphjl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888810520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) (len=15) "192.168.183.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888810520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888810521,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f10eb8405d68eb0955ff2f1b76e538a5b9ffdb7acc47b483e436e9c2a8d2f549",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bphjl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 19:48:42.806585 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6432" for this suite. @ 07/22/25 19:48:42.816
• [2.150 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/22/25 19:48:42.833
  I0722 19:48:42.833829 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 19:48:42.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:48:42.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:48:42.861
  I0722 19:48:42.865619 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  I0722 19:48:45.957102 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3011" for this suite. @ 07/22/25 19:48:45.962
• [3.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/22/25 19:48:45.969
  I0722 19:48:45.969741 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 19:48:45.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:48:45.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:48:45.986
  STEP: creating the pod @ 07/22/25 19:48:45.989
  STEP: submitting the pod to kubernetes @ 07/22/25 19:48:45.989
  STEP: verifying the pod is in kubernetes @ 07/22/25 19:48:48.014
  STEP: updating the pod @ 07/22/25 19:48:48.017
  I0722 19:48:48.532431 21 pod_client.go:173] Successfully updated pod "pod-update-3527f4e9-c205-48f1-8eba-414d889dca4c"
  STEP: verifying the updated pod is in kubernetes @ 07/22/25 19:48:48.536
  I0722 19:48:48.543599 21 pods.go:391] Pod update OK
  I0722 19:48:48.543697 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3214" for this suite. @ 07/22/25 19:48:48.549
• [2.586 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 07/22/25 19:48:48.555
  I0722 19:48:48.555617 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:48:48.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:48:48.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:48:48.572
  STEP: creating service multi-endpoint-test in namespace services-8243 @ 07/22/25 19:48:48.576
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8243 to expose endpoints map[] @ 07/22/25 19:48:48.591
  I0722 19:48:48.596551 21 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0722 19:48:49.607722 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-8243 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8243 @ 07/22/25 19:48:49.607
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8243 to expose endpoints map[pod1:[100]] @ 07/22/25 19:48:51.638
  I0722 19:48:51.652451 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-8243 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8243 @ 07/22/25 19:48:51.652
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8243 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/22/25 19:48:53.672
  I0722 19:48:53.714130 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-8243 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/22/25 19:48:53.714
  I0722 19:48:53.714197 21 resource.go:361] Creating new exec pod
  I0722 19:48:56.734172 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-8243 exec execpodcw8gw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0722 19:48:56.815711 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.203) 80 port [tcp/http] succeeded!\n"
  I0722 19:48:56.815753 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:48:56.815873 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-8243 exec execpodcw8gw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.203 80'
  I0722 19:48:56.899266 21 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.203 80\nConnection to 10.152.183.203 80 port [tcp/http] succeeded!\n"
  I0722 19:48:56.899306 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:48:56.899400 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-8243 exec execpodcw8gw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0722 19:48:56.983033 21 builder.go:146] stderr: "+ + ncecho -v hostName -t -w 2\n multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.203) 81 port [tcp/*] succeeded!\n"
  I0722 19:48:56.983101 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:48:56.983173 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-8243 exec execpodcw8gw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.203 81'
  I0722 19:48:57.066261 21 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.203 81\nConnection to 10.152.183.203 81 port [tcp/*] succeeded!\n"
  I0722 19:48:57.066365 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8243 @ 07/22/25 19:48:57.066
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8243 to expose endpoints map[pod2:[101]] @ 07/22/25 19:48:57.08
  I0722 19:48:58.106579 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-8243 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8243 @ 07/22/25 19:48:58.106
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8243 to expose endpoints map[] @ 07/22/25 19:48:58.119
  I0722 19:48:59.149280 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-8243 exposes endpoints map[]
  I0722 19:48:59.167383 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8243" for this suite. @ 07/22/25 19:48:59.171
• [10.624 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 07/22/25 19:48:59.179
  I0722 19:48:59.179299 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 19:48:59.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:48:59.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:48:59.2
  STEP: Counting existing ResourceQuota @ 07/22/25 19:48:59.205
  STEP: Creating a ResourceQuota @ 07/22/25 19:49:04.211
  STEP: Ensuring resource quota status is calculated @ 07/22/25 19:49:04.218
  I0722 19:49:06.224543 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5638" for this suite. @ 07/22/25 19:49:06.229
• [7.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 07/22/25 19:49:06.236
  I0722 19:49:06.236316 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 19:49:06.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:49:06.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:49:06.256
  I0722 19:49:06.259398 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 19:49:06.334971 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0722 19:49:06.340042 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-31-147 before test
  I0722 19:49:06.345498 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-6bwvp from ingress-nginx-kubernetes-worker started at 2025-07-22 19:36:29 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.345516 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:49:06.345523 21 predicates.go:957] calico-node-9tfhx from kube-system started at 2025-07-22 18:36:14 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.345528 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:49:06.345534 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-07-22 18:39:33 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.345540 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 19:49:06.345546 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-8ghhb from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:49:06.345551 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:49:06.345556 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 19:49:06.345562 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-73 before test
  I0722 19:49:06.349922 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-sz9hn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.349938 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:49:06.349945 21 predicates.go:957] calico-node-q2c6n from kube-system started at 2025-07-22 18:35:46 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.349950 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:49:06.349957 21 predicates.go:957] coredns-5d946bb58-zcb2f from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.349962 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0722 19:49:06.349968 21 predicates.go:957] kube-state-metrics-b84f44f45-l28nc from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.349973 21 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0722 19:49:06.349978 21 predicates.go:957] metrics-server-v0.7.2-7d878b47f8-gh9ww from kube-system started at 2025-07-22 18:32:29 +0000 UTC (2 container statuses recorded)
  I0722 19:49:06.349989 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0722 19:49:06.349994 21 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0722 19:49:06.350000 21 predicates.go:957] dashboard-metrics-scraper-5cf87bc988-t8js5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.350006 21 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0722 19:49:06.350012 21 predicates.go:957] kubernetes-dashboard-6858576c98-ckql5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.350022 21 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0722 19:49:06.350028 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-kdz76 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:49:06.350033 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:49:06.350037 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 19:49:06.350062 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-7-234 before test
  I0722 19:49:06.353766 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qgccn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:55 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.353782 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:49:06.353789 21 predicates.go:957] calico-node-hp9wd from kube-system started at 2025-07-22 18:35:32 +0000 UTC (1 container statuses recorded)
  I0722 19:49:06.353795 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:49:06.353802 21 predicates.go:957] sonobuoy-e2e-job-5e6356138b464fd4 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:49:06.353807 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0722 19:49:06.353813 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:49:06.353818 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-fprks from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:49:06.353824 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:49:06.353830 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/22/25 19:49:06.353
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/22/25 19:49:08.38
  STEP: Trying to apply a random label on the found node. @ 07/22/25 19:49:08.401
  STEP: verifying the node has the label kubernetes.io/e2e-f53de270-acea-4371-a01f-2277269ba702 95 @ 07/22/25 19:49:08.413
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/22/25 19:49:08.416
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.31.147 on the node which pod4 resides and expect not scheduled @ 07/22/25 19:49:10.436
  STEP: removing the label kubernetes.io/e2e-f53de270-acea-4371-a01f-2277269ba702 off the node ip-172-31-31-147 @ 07/22/25 19:54:10.446
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f53de270-acea-4371-a01f-2277269ba702 @ 07/22/25 19:54:10.46
  I0722 19:54:10.466692 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8744" for this suite. @ 07/22/25 19:54:10.476
• [304.251 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 07/22/25 19:54:10.487
  I0722 19:54:10.487498 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename job @ 07/22/25 19:54:10.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:10.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:10.505
  STEP: Creating a job @ 07/22/25 19:54:10.508
  STEP: Ensuring active pods == parallelism @ 07/22/25 19:54:10.514
  STEP: delete a job @ 07/22/25 19:54:12.525
  STEP: deleting Job.batch foo in namespace job-5909, will wait for the garbage collector to delete the pods @ 07/22/25 19:54:12.525
  I0722 19:54:12.588713 21 resources.go:139] Deleting Job.batch foo took: 8.691433ms
  I0722 19:54:12.689235 21 resources.go:163] Terminating Job.batch foo pods took: 100.517097ms
  STEP: Ensuring job was deleted @ 07/22/25 19:54:13.789
  I0722 19:54:13.793591 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5909" for this suite. @ 07/22/25 19:54:13.798
• [3.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 07/22/25 19:54:13.807
  I0722 19:54:13.807814 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:54:13.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:13.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:13.827
  STEP: fetching services @ 07/22/25 19:54:13.831
  I0722 19:54:13.835179 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7383" for this suite. @ 07/22/25 19:54:13.899
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/22/25 19:54:13.908
  I0722 19:54:13.908411 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sysctl @ 07/22/25 19:54:13.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:13.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:13.927
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/22/25 19:54:13.93
  I0722 19:54:13.937487 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1915" for this suite. @ 07/22/25 19:54:14
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/22/25 19:54:14.009
  I0722 19:54:14.009780 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 19:54:14.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:14.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:14.029
  STEP: creating a ReplicationController @ 07/22/25 19:54:14.035
  STEP: waiting for RC to be added @ 07/22/25 19:54:14.042
  STEP: waiting for available Replicas @ 07/22/25 19:54:14.042
  STEP: patching ReplicationController @ 07/22/25 19:54:15.512
  STEP: waiting for RC to be modified @ 07/22/25 19:54:15.522
  STEP: patching ReplicationController status @ 07/22/25 19:54:15.523
  STEP: waiting for RC to be modified @ 07/22/25 19:54:15.531
  STEP: waiting for available Replicas @ 07/22/25 19:54:15.531
  STEP: fetching ReplicationController status @ 07/22/25 19:54:15.536
  STEP: patching ReplicationController scale @ 07/22/25 19:54:15.54
  STEP: waiting for RC to be modified @ 07/22/25 19:54:15.548
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/22/25 19:54:15.548
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/22/25 19:54:16.826
  STEP: updating ReplicationController status @ 07/22/25 19:54:16.831
  STEP: waiting for RC to be modified @ 07/22/25 19:54:16.837
  STEP: listing all ReplicationControllers @ 07/22/25 19:54:16.837
  STEP: checking that ReplicationController has expected values @ 07/22/25 19:54:16.841
  STEP: deleting ReplicationControllers by collection @ 07/22/25 19:54:16.841
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/22/25 19:54:16.853
  I0722 19:54:16.881346 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0722 19:54:16.881444      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6428" for this suite. @ 07/22/25 19:54:16.886
• [2.885 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 07/22/25 19:54:16.894
  I0722 19:54:16.894445 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:54:16.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:16.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:16.914
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4733 @ 07/22/25 19:54:16.916
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/22/25 19:54:16.929
  STEP: creating service externalsvc in namespace services-4733 @ 07/22/25 19:54:16.929
  STEP: creating replication controller externalsvc in namespace services-4733 @ 07/22/25 19:54:16.945
  I0722 19:54:16.954955      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4733, replica count: 2
  E0722 19:54:17.881914      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:18.882503      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:19.882626      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:20.005757      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/22/25 19:54:20.011
  I0722 19:54:20.028153 21 resource.go:361] Creating new exec pod
  E0722 19:54:20.883191      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:21.883412      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:22.047434 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-4733 exec execpod5zc6d -- /bin/sh -x -c nslookup clusterip-service.services-4733.svc.cluster.local'
  I0722 19:54:22.190628 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-4733.svc.cluster.local\n"
  I0722 19:54:22.190724 21 builder.go:147] stdout: "Server:\t\t10.152.183.45\nAddress:\t10.152.183.45#53\n\nclusterip-service.services-4733.svc.cluster.local\tcanonical name = externalsvc.services-4733.svc.cluster.local.\nName:\texternalsvc.services-4733.svc.cluster.local\nAddress: 10.152.183.39\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4733, will wait for the garbage collector to delete the pods @ 07/22/25 19:54:22.19
  I0722 19:54:22.251541 21 resources.go:139] Deleting ReplicationController externalsvc took: 6.694779ms
  I0722 19:54:22.352395 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.849022ms
  E0722 19:54:22.883731      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:23.884249      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:24.873443 21 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  E0722 19:54:24.884584      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:24.889475 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4733" for this suite. @ 07/22/25 19:54:24.893
• [8.005 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/22/25 19:54:24.9
  I0722 19:54:24.900181 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:54:24.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:24.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:24.917
  STEP: Creating configMap configmap-7078/configmap-test-0c448a4b-3358-4504-9e66-25224ddb3bb0 @ 07/22/25 19:54:24.921
  STEP: Creating a pod to test consume configMaps @ 07/22/25 19:54:24.925
  E0722 19:54:25.884747      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:26.884834      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:54:26.944
  I0722 19:54:26.949210 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-configmaps-ade1e592-7206-4183-bec0-8103f351a73d container env-test: <nil>
  STEP: delete the pod @ 07/22/25 19:54:26.966
  I0722 19:54:26.984858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7078" for this suite. @ 07/22/25 19:54:26.991
• [2.099 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/22/25 19:54:26.999
  I0722 19:54:26.999395 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 19:54:26.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:27.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:27.017
  STEP: create the rc @ 07/22/25 19:54:27.091
  W0722 19:54:27.099258      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0722 19:54:27.885006      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:28.892885      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:29.893436      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:30.894343      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:31.902800      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:32.900166      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/22/25 19:54:33.107
  STEP: wait for the rc to be deleted @ 07/22/25 19:54:33.119
  E0722 19:54:33.900522      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:34.130277 21 garbage_collector.go:670] 80 pods remaining
  I0722 19:54:34.130309 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0722 19:54:34.130315 21 garbage_collector.go:678] 
  E0722 19:54:34.901200      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:35.136544 21 garbage_collector.go:670] 71 pods remaining
  I0722 19:54:35.136582 21 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0722 19:54:35.136588 21 garbage_collector.go:678] 
  E0722 19:54:35.901361      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:36.129959 21 garbage_collector.go:670] 60 pods remaining
  I0722 19:54:36.129984 21 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0722 19:54:36.129990 21 garbage_collector.go:678] 
  E0722 19:54:36.902291      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:37.157157 21 garbage_collector.go:670] 40 pods remaining
  I0722 19:54:37.157201 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0722 19:54:37.157208 21 garbage_collector.go:678] 
  E0722 19:54:37.903298      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:38.135592 21 garbage_collector.go:670] 31 pods remaining
  I0722 19:54:38.135647 21 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0722 19:54:38.135653 21 garbage_collector.go:678] 
  E0722 19:54:38.904288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:39.129994 21 garbage_collector.go:670] 20 pods remaining
  I0722 19:54:39.130021 21 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0722 19:54:39.130026 21 garbage_collector.go:678] 
  E0722 19:54:39.905292      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/22/25 19:54:40.129
  W0722 19:54:40.141618      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0722 19:54:40.141655 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0722 19:54:40.142024 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6550" for this suite. @ 07/22/25 19:54:40.151
• [13.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/22/25 19:54:40.16
  I0722 19:54:40.160239 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename csi-storageclass @ 07/22/25 19:54:40.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:40.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:40.2
  STEP: Creating a StorageClass @ 07/22/25 19:54:40.207
  STEP: Get StorageClass "e2e-44vzg" @ 07/22/25 19:54:40.216
  STEP: Patching the StorageClass "e2e-44vzg" @ 07/22/25 19:54:40.221
  STEP: Delete StorageClass "e2e-44vzg" @ 07/22/25 19:54:40.237
  STEP: Confirm deletion of StorageClass "e2e-44vzg" @ 07/22/25 19:54:40.25
  STEP: Create a replacement StorageClass @ 07/22/25 19:54:40.261
  STEP: Updating StorageClass "e2e-v2-bc4kq" @ 07/22/25 19:54:40.273
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-bc4kq=updated" @ 07/22/25 19:54:40.29
  STEP: Deleting StorageClass "e2e-v2-bc4kq" via DeleteCollection @ 07/22/25 19:54:40.297
  STEP: Confirm deletion of StorageClass "e2e-v2-bc4kq" @ 07/22/25 19:54:40.308
  I0722 19:54:40.316164 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4617" for this suite. @ 07/22/25 19:54:40.326
• [0.178 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/22/25 19:54:40.344
  I0722 19:54:40.344441 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 19:54:40.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:40.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:40.388
  I0722 19:54:40.401388 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2063" for this suite. @ 07/22/25 19:54:40.424
• [0.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 07/22/25 19:54:40.431
  I0722 19:54:40.431803 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:54:40.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:40.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:40.463
  STEP: creating service in namespace services-7537 @ 07/22/25 19:54:40.472
  STEP: creating service affinity-clusterip-transition in namespace services-7537 @ 07/22/25 19:54:40.472
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7537 @ 07/22/25 19:54:40.486
  I0722 19:54:40.496088      21 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7537, replica count: 3
  E0722 19:54:40.905787      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:41.906809      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:42.907446      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:43.547098      21 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:54:43.556589 21 resource.go:361] Creating new exec pod
  E0722 19:54:43.907947      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:44.908010      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:45.908215      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:46.577964 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7537 exec execpod-affinity6gqmq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0722 19:54:46.657349 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.101) 80 port [tcp/http] succeeded!\n"
  I0722 19:54:46.657399 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:54:46.657477 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7537 exec execpod-affinity6gqmq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.101 80'
  I0722 19:54:46.733502 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.101 80\nConnection to 10.152.183.101 80 port [tcp/http] succeeded!\n"
  I0722 19:54:46.733549 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 19:54:46.744678 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7537 exec execpod-affinity6gqmq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.101:80/ ; done'
  I0722 19:54:46.880275 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n"
  I0722 19:54:46.880342 21 builder.go:147] stdout: "\naffinity-clusterip-transition-vr854\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-vr854\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-vr854\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-fhz99\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-fhz99"
  I0722 19:54:46.880356 21 service.go:242] Received response from host: affinity-clusterip-transition-vr854
  I0722 19:54:46.880363 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:46.880370 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:46.880376 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:46.880383 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:46.880394 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880399 21 service.go:242] Received response from host: affinity-clusterip-transition-vr854
  I0722 19:54:46.880404 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880410 21 service.go:242] Received response from host: affinity-clusterip-transition-vr854
  I0722 19:54:46.880470 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880477 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880482 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880489 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880496 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.880542 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:46.880549 21 service.go:242] Received response from host: affinity-clusterip-transition-fhz99
  I0722 19:54:46.890239 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7537 exec execpod-affinity6gqmq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.101:80/ ; done'
  E0722 19:54:46.908970      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:47.014376 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.101:80/\n"
  I0722 19:54:47.014419 21 builder.go:147] stdout: "\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld\naffinity-clusterip-transition-wp6ld"
  I0722 19:54:47.014433 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014442 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014448 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014453 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014459 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014465 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014471 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014483 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014488 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014493 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014499 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014506 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014512 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014517 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014523 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014529 21 service.go:242] Received response from host: affinity-clusterip-transition-wp6ld
  I0722 19:54:47.014597 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7537, will wait for the garbage collector to delete the pods @ 07/22/25 19:54:47.03
  I0722 19:54:47.091439 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 7.486983ms
  I0722 19:54:47.192171 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.7276ms
  E0722 19:54:47.909193      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:48.909786      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:49.910736      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:54:50.213615 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7537" for this suite. @ 07/22/25 19:54:50.218
• [9.793 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/22/25 19:54:50.224
  I0722 19:54:50.224902 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 19:54:50.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:54:50.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:54:50.242
  STEP: Performing setup for networking test in namespace pod-network-test-3256 @ 07/22/25 19:54:50.245
  STEP: creating a selector @ 07/22/25 19:54:50.245
  STEP: Creating the service pods in kubernetes @ 07/22/25 19:54:50.245
  I0722 19:54:50.245872 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0722 19:54:50.911271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:51.911671      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:52.912383      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:53.912598      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:54.913239      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:55.913424      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:56.913856      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:57.914072      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:58.915035      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:54:59.915184      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:00.915424      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:01.915619      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:02.916366      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:03.916629      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/22/25 19:55:04.425
  E0722 19:55:04.917245      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:05.917320      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:06.449684 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0722 19:55:06.449711 21 networking.go:42] Breadth first check of 192.168.183.137 on host 172.31.31.147...
  I0722 19:55:06.453816 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.157:9080/dial?request=hostname&protocol=udp&host=192.168.183.137&port=8081&tries=1'] Namespace:pod-network-test-3256 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:55:06.453838 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:55:06.453875 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3256/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.183.137%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 19:55:06.489540 21 utils.go:356] Waiting for responses: map[]
  I0722 19:55:06.489571 21 utils.go:360] reached 192.168.183.137 after 0/1 tries
  I0722 19:55:06.489580 21 networking.go:42] Breadth first check of 192.168.231.10 on host 172.31.68.73...
  I0722 19:55:06.493830 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.157:9080/dial?request=hostname&protocol=udp&host=192.168.231.10&port=8081&tries=1'] Namespace:pod-network-test-3256 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:55:06.493851 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:55:06.493887 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3256/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.231.10%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 19:55:06.530130 21 utils.go:356] Waiting for responses: map[]
  I0722 19:55:06.530153 21 utils.go:360] reached 192.168.231.10 after 0/1 tries
  I0722 19:55:06.530161 21 networking.go:42] Breadth first check of 192.168.12.29 on host 172.31.7.234...
  I0722 19:55:06.533968 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.157:9080/dial?request=hostname&protocol=udp&host=192.168.12.29&port=8081&tries=1'] Namespace:pod-network-test-3256 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:55:06.533988 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:55:06.534029 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3256/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.12.29%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 19:55:06.570654 21 utils.go:356] Waiting for responses: map[]
  I0722 19:55:06.570683 21 utils.go:360] reached 192.168.12.29 after 0/1 tries
  I0722 19:55:06.570693 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0722 19:55:06.570786 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3256" for this suite. @ 07/22/25 19:55:06.576
• [16.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/22/25 19:55:06.584
  I0722 19:55:06.584728 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 19:55:06.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:55:06.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:55:06.604
  STEP: apply creating a deployment @ 07/22/25 19:55:06.607
  I0722 19:55:06.622502 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2714" for this suite. @ 07/22/25 19:55:06.677
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/22/25 19:55:06.685
  I0722 19:55:06.685728 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 19:55:06.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:55:06.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:55:06.702
  I0722 19:55:06.705289 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-bc4f8b75-862c-4e30-bf8a-5130c4beecd5
  I0722 19:55:06.717529 21 resource.go:87] Pod name my-hostname-basic-bc4f8b75-862c-4e30-bf8a-5130c4beecd5: Found 0 pods out of 1
  E0722 19:55:06.917965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:07.918029      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:08.918206      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:09.918278      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:10.919278      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:11.723496 21 resource.go:87] Pod name my-hostname-basic-bc4f8b75-862c-4e30-bf8a-5130c4beecd5: Found 1 pods out of 1
  I0722 19:55:11.723534 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-bc4f8b75-862c-4e30-bf8a-5130c4beecd5" is running
  I0722 19:55:11.727988 21 replica_set.go:220] Pod "my-hostname-basic-bc4f8b75-862c-4e30-bf8a-5130c4beecd5-2jprw" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:55:08 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:55:06 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:55:08 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:55:08 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-22 19:55:06 +0000 UTC Reason: Message:}])
  I0722 19:55:11.728010 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/22/25 19:55:11.728
  I0722 19:55:11.740266 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2065" for this suite. @ 07/22/25 19:55:11.745
• [5.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 07/22/25 19:55:11.752
  I0722 19:55:11.752240 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 19:55:11.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:55:11.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:55:11.773
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7288 @ 07/22/25 19:55:11.777
  STEP: changing the ExternalName service to type=ClusterIP @ 07/22/25 19:55:11.784
  STEP: creating replication controller externalname-service in namespace services-7288 @ 07/22/25 19:55:11.796
  I0722 19:55:11.806126      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7288, replica count: 2
  E0722 19:55:11.919584      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:12.919694      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:13.919775      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:14.857111      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:55:14.857150 21 resource.go:361] Creating new exec pod
  E0722 19:55:14.920256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:15.920345      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:16.921153      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:17.879492 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0722 19:55:17.922182      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:17.967396 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.69) 80 port [tcp/http] succeeded!\n"
  I0722 19:55:17.967442 21 builder.go:147] stdout: ""
  I0722 19:55:18.880172 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0722 19:55:18.922571      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:19.016880 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.69) 80 port [tcp/http] succeeded!\n"
  I0722 19:55:19.016938 21 builder.go:147] stdout: ""
  I0722 19:55:19.879655 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0722 19:55:19.924227      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:19.993757 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.69) 80 port [tcp/http] succeeded!\n"
  I0722 19:55:19.993811 21 builder.go:147] stdout: ""
  I0722 19:55:20.879552 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0722 19:55:20.925024      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:20.990477 21 builder.go:146] stderr: "+ + nc -v -t -w 2 externalname-service 80\necho hostName\nConnection to externalname-service (10.152.183.69) 80 port [tcp/http] succeeded!\n"
  I0722 19:55:20.990719 21 builder.go:147] stdout: ""
  I0722 19:55:21.880295 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0722 19:55:21.926193      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:21.995260 21 builder.go:146] stderr: "+ + nc -v -t -w 2 externalname-serviceecho hostName\n 80\nConnection to externalname-service (10.152.183.69) 80 port [tcp/http] succeeded!\n"
  I0722 19:55:21.995304 21 builder.go:147] stdout: "externalname-service-97s6j"
  I0722 19:55:21.995375 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.69 80'
  I0722 19:55:22.105559 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.69 80\nConnection to 10.152.183.69 80 port [tcp/http] succeeded!\n"
  I0722 19:55:22.105607 21 builder.go:147] stdout: ""
  E0722 19:55:22.926458      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:22.995413 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.69 80'
  I0722 19:55:23.103726 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.69 80\nConnection to 10.152.183.69 80 port [tcp/http] succeeded!\n"
  I0722 19:55:23.103783 21 builder.go:147] stdout: ""
  E0722 19:55:23.926482      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:55:23.995704 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7288 exec execpodbw59m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.69 80'
  I0722 19:55:24.087436 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.69 80\nConnection to 10.152.183.69 80 port [tcp/http] succeeded!\n"
  I0722 19:55:24.087487 21 builder.go:147] stdout: "externalname-service-jzh98"
  I0722 19:55:24.087585 21 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0722 19:55:24.113854 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7288" for this suite. @ 07/22/25 19:55:24.12
• [12.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/22/25 19:55:24.13
  I0722 19:55:24.130091 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename subpath @ 07/22/25 19:55:24.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:55:24.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:55:24.15
  STEP: Setting up data @ 07/22/25 19:55:24.153
  STEP: Creating pod pod-subpath-test-projected-xvxz @ 07/22/25 19:55:24.164
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 19:55:24.164
  E0722 19:55:24.927402      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:25.927503      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:26.927589      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:27.927712      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:28.928327      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:29.928389      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:30.929279      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:31.929369      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:32.929466      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:33.929555      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:34.930281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:35.930382      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:36.930548      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:37.930610      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:38.930790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:39.931040      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:40.931342      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:41.931506      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:42.931596      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:43.931726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:44.931928      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:45.932037      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:46.932126      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:47.932256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:55:48.246
  I0722 19:55:48.250787 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-subpath-test-projected-xvxz container test-container-subpath-projected-xvxz: <nil>
  STEP: delete the pod @ 07/22/25 19:55:48.259
  STEP: Deleting pod pod-subpath-test-projected-xvxz @ 07/22/25 19:55:48.277
  I0722 19:55:48.277598 21 delete.go:62] Deleting pod "pod-subpath-test-projected-xvxz" in namespace "subpath-4880"
  I0722 19:55:48.281537 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4880" for this suite. @ 07/22/25 19:55:48.286
• [24.166 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/22/25 19:55:48.295
  I0722 19:55:48.295748 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 19:55:48.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:55:48.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:55:48.316
  STEP: Creating secret with name s-test-opt-del-13d99c9d-1cf9-46f5-8b79-bf443a74710a @ 07/22/25 19:55:48.387
  STEP: Creating secret with name s-test-opt-upd-de9b9524-770a-44c0-a673-b515039c827f @ 07/22/25 19:55:48.393
  STEP: Creating the pod @ 07/22/25 19:55:48.399
  E0722 19:55:48.932565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:49.932647      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-13d99c9d-1cf9-46f5-8b79-bf443a74710a @ 07/22/25 19:55:50.445
  STEP: Updating secret s-test-opt-upd-de9b9524-770a-44c0-a673-b515039c827f @ 07/22/25 19:55:50.452
  STEP: Creating secret with name s-test-opt-create-cdde1409-7bf1-4366-90da-7bab887e7705 @ 07/22/25 19:55:50.457
  STEP: waiting to observe update in volume @ 07/22/25 19:55:50.462
  E0722 19:55:50.932723      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:51.932942      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:52.933588      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:53.933809      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:54.934418      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:55.935282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:56.935419      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:57.935507      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:58.936278      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:55:59.936423      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:00.937311      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:01.937405      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:02.938273      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:03.938360      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:04.939272      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:05.939341      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:06.939548      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:07.939622      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:08.940283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:09.940355      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:10.940499      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:11.940726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:12.941699      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:13.941822      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:14.942541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:15.942652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:16.942760      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:17.942831      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:18.943889      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:19.944127      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:20.944223      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:21.944314      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:22.944886      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:23.944988      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:24.946001      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:25.946173      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:26.946205      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:27.947280      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:28.948275      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:29.948586      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:30.948547      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:31.948623      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:32.949615      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:33.949706      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:34.949817      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:35.949907      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:36.950714      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:37.950892      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:38.951078      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:39.952234      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:40.952801      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:41.953012      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:42.953921      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:43.954008      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:44.954448      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:45.954545      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:46.955526      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:47.955776      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:48.955909      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:49.955979      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:50.957085      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:51.957354      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:52.957832      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:53.958248      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:54.959012      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:55.959189      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:56.960099      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:57.960278      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:58.961363      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:56:59.961456      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:00.961795      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:01.961980      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:02.962179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:03.962377      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:04.962861      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:05.963016      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:06.963583      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:07.963800      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:08.964243      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:09.965277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:10.965883      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:11.966087      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:12.966386      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:13.966514      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:14.967065      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:15.967160      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:16.967898      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:17.968015      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:18.865659 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6721" for this suite. @ 07/22/25 19:57:18.871
• [90.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/22/25 19:57:18.881
  I0722 19:57:18.881431 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/22/25 19:57:18.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:18.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:18.899
  STEP: creating a target pod @ 07/22/25 19:57:18.903
  E0722 19:57:18.968400      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:19.969267      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/22/25 19:57:20.93
  E0722 19:57:20.969363      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:21.969437      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/22/25 19:57:22.952
  I0722 19:57:22.952829 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4650 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 19:57:22.952845 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 19:57:22.952878 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4650/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  E0722 19:57:22.969807      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:22.986630 21 exec_util.go:108] Exec stderr: ""
  I0722 19:57:23.003066 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4650" for this suite. @ 07/22/25 19:57:23.008
• [4.135 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 07/22/25 19:57:23.016
  I0722 19:57:23.016238 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 19:57:23.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:23.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:23.034
  STEP: Creating pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960 @ 07/22/25 19:57:23.037
  E0722 19:57:23.970209      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:24.970271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 19:57:25.057
  I0722 19:57:25.061783 21 container_probe.go:1749] Initial restart count of pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e is 0
  I0722 19:57:25.065379 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:25.971259      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:26.971396      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:27.070975 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:27.971600      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:28.972358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:29.076905 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:29.973329      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:30.973481      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:31.082518 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:31.973549      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:32.973667      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:33.087000 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:33.973991      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:34.974159      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:35.091692 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:35.974214      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:36.974392      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:37.098496 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:37.975283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:38.975356      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:39.105396 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:39.976371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:40.976455      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:41.110686 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:41.976657      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:42.976867      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:43.116738 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  E0722 19:57:43.977216      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:44.977359      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:45.122164 21 container_probe.go:1759] Get pod liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e in namespace container-probe-2960
  I0722 19:57:45.122200 21 container_probe.go:1763] Restart count of pod container-probe-2960/liveness-8b945075-7c62-4aea-b0ea-5d70764a1b6e is now 1 (20.060390407s elapsed)
  STEP: deleting the pod @ 07/22/25 19:57:45.122
  I0722 19:57:45.139883 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2960" for this suite. @ 07/22/25 19:57:45.145
• [22.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/22/25 19:57:45.154
  I0722 19:57:45.154480 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 19:57:45.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:45.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:45.172
  STEP: Deleting RuntimeClass runtimeclass-6609-delete-me @ 07/22/25 19:57:45.181
  STEP: Waiting for the RuntimeClass to disappear @ 07/22/25 19:57:45.187
  I0722 19:57:45.198697 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6609" for this suite. @ 07/22/25 19:57:45.252
• [0.106 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/22/25 19:57:45.26
  I0722 19:57:45.261424 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:57:45.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:45.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:45.281
  STEP: Creating projection with secret that has name projected-secret-test-map-407dc830-f173-4a8b-9981-a8aac937db23 @ 07/22/25 19:57:45.284
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:57:45.291
  E0722 19:57:45.978276      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:46.978351      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:47.978478      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:48.978547      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:57:49.318
  I0722 19:57:49.322872 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-secrets-4a39d7f3-fbc1-46b8-bf1c-f716eb4dbbc7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:57:49.33
  I0722 19:57:49.347336 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9499" for this suite. @ 07/22/25 19:57:49.352
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/22/25 19:57:49.359
  I0722 19:57:49.359518 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 19:57:49.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:49.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:49.378
  STEP: Creating configMap that has name configmap-test-emptyKey-13f91cf3-fcd5-47c0-becf-90d59a9db7cb @ 07/22/25 19:57:49.381
  I0722 19:57:49.383615 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5273" for this suite. @ 07/22/25 19:57:49.453
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/22/25 19:57:49.463
  I0722 19:57:49.463165 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/22/25 19:57:49.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:49.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:49.485
  STEP: creating the policy @ 07/22/25 19:57:49.494
  STEP: waiting until the marker is denied @ 07/22/25 19:57:49.512
  STEP: testing a replicated Deployment to be allowed @ 07/22/25 19:57:49.721
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/22/25 19:57:49.735
  I0722 19:57:49.799915 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7418" for this suite. @ 07/22/25 19:57:49.804
• [0.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/22/25 19:57:49.814
  I0722 19:57:49.814272 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:57:49.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:49.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:49.834
  STEP: Creating secret with name projected-secret-test-1ea89c9d-3c27-43f4-afb8-d54704e3e368 @ 07/22/25 19:57:49.837
  STEP: Creating a pod to test consume secrets @ 07/22/25 19:57:49.842
  E0722 19:57:49.978684      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:50.978763      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:57:51.866
  I0722 19:57:51.870461 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-secrets-788d6d0a-def0-4526-97bb-9c39ae3e2b83 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 19:57:51.877
  I0722 19:57:51.896793 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9256" for this suite. @ 07/22/25 19:57:51.9
• [2.095 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/22/25 19:57:51.908
  I0722 19:57:51.909011 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 19:57:51.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:51.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:51.928
  STEP: Create a ReplicaSet @ 07/22/25 19:57:51.932
  STEP: Verify that the required pods have come up @ 07/22/25 19:57:51.937
  I0722 19:57:51.942075 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0722 19:57:51.979256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:52.979368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:53.979495      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:54.979756      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:55.979763      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:57:56.945949 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/22/25 19:57:56.945
  I0722 19:57:56.949798 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/22/25 19:57:56.949
  STEP: DeleteCollection of the ReplicaSets @ 07/22/25 19:57:56.953
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/22/25 19:57:56.961
  I0722 19:57:56.967758 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6145" for this suite. @ 07/22/25 19:57:56.977
  E0722 19:57:56.979893      21 retrywatcher.go:160] "Watch failed" err="context canceled"
• [5.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/22/25 19:57:56.997
  I0722 19:57:56.997611 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 19:57:56.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:57:57.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:57:57.014
  I0722 19:57:57.018377 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 19:57:57.980904      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:57:58.980984      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0722 19:57:59.556631      21 warnings.go:70] unknown field "alpha"
  W0722 19:57:59.556653      21 warnings.go:70] unknown field "beta"
  W0722 19:57:59.556656      21 warnings.go:70] unknown field "delta"
  W0722 19:57:59.556659      21 warnings.go:70] unknown field "epsilon"
  W0722 19:57:59.556662      21 warnings.go:70] unknown field "gamma"
  E0722 19:57:59.981218      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:00.107330 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4889" for this suite. @ 07/22/25 19:58:00.112
• [3.123 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/22/25 19:58:00.12
  I0722 19:58:00.120965 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replicaset @ 07/22/25 19:58:00.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:00.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:00.139
  I0722 19:58:00.158676 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0722 19:58:00.981342      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:01.981422      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:02.981571      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:03.981641      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:04.981827      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:05.163064 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 19:58:05.163
  STEP: Scaling up "test-rs" replicaset @ 07/22/25 19:58:05.163
  I0722 19:58:05.173651 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/22/25 19:58:05.173
  I0722 19:58:05.183389 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7341 with ReadyReplicas 1, AvailableReplicas 1
  I0722 19:58:05.194420 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7341 with ReadyReplicas 1, AvailableReplicas 1
  I0722 19:58:05.214618 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7341 with ReadyReplicas 1, AvailableReplicas 1
  I0722 19:58:05.221254 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7341 with ReadyReplicas 1, AvailableReplicas 1
  I0722 19:58:05.919739 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7341 with ReadyReplicas 2, AvailableReplicas 2
  E0722 19:58:05.981897      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:06.045357 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7341 with ReadyReplicas 3 found true
  I0722 19:58:06.045502 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7341" for this suite. @ 07/22/25 19:58:06.05
• [5.936 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/22/25 19:58:06.057
  I0722 19:58:06.057684 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 19:58:06.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:06.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:06.077
  STEP: create the container @ 07/22/25 19:58:06.081
  W0722 19:58:06.089760      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/22/25 19:58:06.089
  E0722 19:58:06.982099      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:07.982311      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:08.982380      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/22/25 19:58:09.11
  STEP: the container should be terminated @ 07/22/25 19:58:09.114
  STEP: the termination message should be set @ 07/22/25 19:58:09.114
  I0722 19:58:09.114185 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/22/25 19:58:09.114
  I0722 19:58:09.138206 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2468" for this suite. @ 07/22/25 19:58:09.142
• [3.094 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/22/25 19:58:09.151
  I0722 19:58:09.151532 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 19:58:09.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:09.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:09.17
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 19:58:09.245
  E0722 19:58:09.982594      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:10.982678      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/22/25 19:58:11.27
  E0722 19:58:11.982843      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:12.983010      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/22/25 19:58:13.296
  E0722 19:58:13.983243      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:14.983358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/22/25 19:58:15.315
  I0722 19:58:15.331188 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7133" for this suite. @ 07/22/25 19:58:15.336
• [6.192 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/22/25 19:58:15.343
  I0722 19:58:15.343460 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename containers @ 07/22/25 19:58:15.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:15.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:15.36
  STEP: Creating a pod to test override command @ 07/22/25 19:58:15.363
  E0722 19:58:15.983522      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:16.983723      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:17.984672      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:18.984779      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:58:19.388
  I0722 19:58:19.392428 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod client-containers-50a73570-d9eb-4001-b674-c282402f6590 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 19:58:19.399
  I0722 19:58:19.420277 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1579" for this suite. @ 07/22/25 19:58:19.425
• [4.089 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/22/25 19:58:19.432
  I0722 19:58:19.432799 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:58:19.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:19.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:19.452
  STEP: Creating a pod to test downward api env vars @ 07/22/25 19:58:19.455
  E0722 19:58:19.984889      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:20.985017      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:21.985891      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:22.985987      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:58:23.483
  I0722 19:58:23.488496 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downward-api-f2043ac8-1163-4411-bdbf-8c6abb90a5e7 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 19:58:23.495
  I0722 19:58:23.516403 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-991" for this suite. @ 07/22/25 19:58:23.521
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/22/25 19:58:23.529
  I0722 19:58:23.529220 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/22/25 19:58:23.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:23.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:23.55
  STEP: create the container to handle the HTTPGet hook request. @ 07/22/25 19:58:23.622
  E0722 19:58:23.986292      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:24.986547      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/22/25 19:58:25.647
  E0722 19:58:25.987206      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:26.987236      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/22/25 19:58:27.669
  STEP: delete the pod with lifecycle hook @ 07/22/25 19:58:27.677
  E0722 19:58:27.987440      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:28.987652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:29.696443 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6941" for this suite. @ 07/22/25 19:58:29.701
• [6.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/22/25 19:58:29.711
  I0722 19:58:29.711546 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename init-container @ 07/22/25 19:58:29.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:29.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:29.733
  STEP: creating the pod @ 07/22/25 19:58:29.737
  I0722 19:58:29.737241 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0722 19:58:29.988181      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:30.989081      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:31.990073      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:32.728363 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7967" for this suite. @ 07/22/25 19:58:32.732
• [3.027 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/22/25 19:58:32.738
  I0722 19:58:32.738857 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubelet-test @ 07/22/25 19:58:32.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:32.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:32.759
  STEP: Waiting for pod completion @ 07/22/25 19:58:32.772
  E0722 19:58:32.990669      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:33.990908      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:34.794299 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6632" for this suite. @ 07/22/25 19:58:34.799
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/22/25 19:58:34.806
  I0722 19:58:34.806937 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/22/25 19:58:34.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:34.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:34.83
  I0722 19:58:34.835236 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 19:58:34.991726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:35.859421 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-68" for this suite. @ 07/22/25 19:58:35.864
• [1.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/22/25 19:58:35.872
  I0722 19:58:35.872807 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 19:58:35.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:35.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:35.891
  STEP: Creating the pod @ 07/22/25 19:58:35.894
  E0722 19:58:35.992632      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:36.992764      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:37.993530      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:38.444694 21 pod_client.go:173] Successfully updated pod "annotationupdate835f8640-5f7d-4acb-891a-2b22cf92eaf2"
  E0722 19:58:38.993657      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:39.994275      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:40.460726 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-179" for this suite. @ 07/22/25 19:58:40.466
• [4.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 07/22/25 19:58:40.475
  I0722 19:58:40.475988 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 19:58:40.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:40.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:40.496
  STEP: creating the pod @ 07/22/25 19:58:40.499
  I0722 19:58:40.499798 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 create -f -'
  I0722 19:58:40.589669 21 builder.go:146] stderr: ""
  I0722 19:58:40.589706 21 builder.go:147] stdout: "pod/pause created\n"
  E0722 19:58:40.995196      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:41.995377      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/22/25 19:58:42.599
  I0722 19:58:42.599559 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 label pods pause testing-label=testing-label-value'
  I0722 19:58:42.676341 21 builder.go:146] stderr: ""
  I0722 19:58:42.676377 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/22/25 19:58:42.676
  I0722 19:58:42.676471 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 get pod pause -L testing-label'
  I0722 19:58:42.721591 21 builder.go:146] stderr: ""
  I0722 19:58:42.721632 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/22/25 19:58:42.721
  I0722 19:58:42.721720 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 label pods pause testing-label-'
  I0722 19:58:42.772727 21 builder.go:146] stderr: ""
  I0722 19:58:42.772768 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/22/25 19:58:42.772
  I0722 19:58:42.772861 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 get pod pause -L testing-label'
  I0722 19:58:42.815608 21 builder.go:146] stderr: ""
  I0722 19:58:42.815646 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/22/25 19:58:42.815
  I0722 19:58:42.815780 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 delete --grace-period=0 --force -f -'
  I0722 19:58:42.871726 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0722 19:58:42.871761 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0722 19:58:42.871824 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 get rc,svc -l name=pause --no-headers'
  I0722 19:58:42.924446 21 builder.go:146] stderr: "No resources found in kubectl-8248 namespace.\n"
  I0722 19:58:42.924487 21 builder.go:147] stdout: ""
  I0722 19:58:42.924536 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-8248 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0722 19:58:42.966879 21 builder.go:146] stderr: ""
  I0722 19:58:42.966920 21 builder.go:147] stdout: ""
  I0722 19:58:42.967038 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8248" for this suite. @ 07/22/25 19:58:42.972
• [2.505 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/22/25 19:58:42.981
  I0722 19:58:42.981371 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 19:58:42.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:42.995
  E0722 19:58:42.995958      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:43
  I0722 19:58:43.011465 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9208" for this suite. @ 07/22/25 19:58:43.073
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/22/25 19:58:43.081
  I0722 19:58:43.081240 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 19:58:43.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:43.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:43.098
  STEP: Creating a pod to test downward api env vars @ 07/22/25 19:58:43.101
  E0722 19:58:43.996370      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:44.996531      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:45.997008      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:46.997211      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 19:58:47.133
  I0722 19:58:47.138233 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod downward-api-dec2d678-f4e1-4b7a-977f-6c966e75a6cb container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 19:58:47.147
  I0722 19:58:47.170505 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4793" for this suite. @ 07/22/25 19:58:47.175
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/22/25 19:58:47.182
  I0722 19:58:47.182897 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename proxy @ 07/22/25 19:58:47.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:47.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:47.201
  STEP: starting an echo server on multiple ports @ 07/22/25 19:58:47.217
  STEP: creating replication controller proxy-service-hg7n2 in namespace proxy-9503 @ 07/22/25 19:58:47.218
  I0722 19:58:47.228420      21 runners.go:193] Created replication controller with name: proxy-service-hg7n2, namespace: proxy-9503, replica count: 1
  E0722 19:58:47.997306      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:48.279582      21 runners.go:193] proxy-service-hg7n2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0722 19:58:48.998089      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:49.280191      21 runners.go:193] proxy-service-hg7n2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 19:58:49.284887 21 proxy.go:230] setup took 2.079500201s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/22/25 19:58:49.284
  I0722 19:58:49.290592 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.444446ms)
  I0722 19:58:49.292355 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.930705ms)
  I0722 19:58:49.292361 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 7.031114ms)
  I0722 19:58:49.292908 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.751173ms)
  I0722 19:58:49.292909 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 7.472041ms)
  I0722 19:58:49.292931 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.622435ms)
  I0722 19:58:49.293106 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 8.006448ms)
  I0722 19:58:49.293346 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 8.374508ms)
  I0722 19:58:49.293500 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 8.10915ms)
  I0722 19:58:49.293602 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 8.397681ms)
  I0722 19:58:49.293723 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 8.431482ms)
  I0722 19:58:49.295585 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 10.184375ms)
  I0722 19:58:49.295851 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 10.583133ms)
  I0722 19:58:49.296026 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 10.675652ms)
  I0722 19:58:49.296027 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 10.656888ms)
  I0722 19:58:49.296095 21 proxy.go:558] (0) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 10.856703ms)
  I0722 19:58:49.300785 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.340968ms)
  I0722 19:58:49.301490 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.141785ms)
  I0722 19:58:49.302130 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 5.805894ms)
  I0722 19:58:49.302538 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 6.236573ms)
  I0722 19:58:49.302560 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.35783ms)
  I0722 19:58:49.302573 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 6.315835ms)
  I0722 19:58:49.302608 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.187174ms)
  I0722 19:58:49.302619 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.439084ms)
  I0722 19:58:49.302629 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 6.249533ms)
  I0722 19:58:49.302803 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 6.436125ms)
  I0722 19:58:49.303203 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.075072ms)
  I0722 19:58:49.303247 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.012113ms)
  I0722 19:58:49.303371 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.25078ms)
  I0722 19:58:49.304025 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.748198ms)
  I0722 19:58:49.304314 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.858695ms)
  I0722 19:58:49.304458 21 proxy.go:558] (1) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 8.060539ms)
  I0722 19:58:49.308659 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.174371ms)
  I0722 19:58:49.308935 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 4.293892ms)
  I0722 19:58:49.309311 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.650621ms)
  I0722 19:58:49.309566 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.869063ms)
  I0722 19:58:49.309783 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.970729ms)
  I0722 19:58:49.310137 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 5.603985ms)
  I0722 19:58:49.310321 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 5.488581ms)
  I0722 19:58:49.310658 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.979312ms)
  I0722 19:58:49.310728 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.947491ms)
  I0722 19:58:49.310750 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.988887ms)
  I0722 19:58:49.310828 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 6.107081ms)
  I0722 19:58:49.310828 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 6.226853ms)
  I0722 19:58:49.311220 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 6.428516ms)
  I0722 19:58:49.311605 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.111357ms)
  I0722 19:58:49.311972 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.401156ms)
  I0722 19:58:49.312334 21 proxy.go:558] (2) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.593034ms)
  I0722 19:58:49.316117 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 3.761406ms)
  I0722 19:58:49.316144 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 3.707743ms)
  I0722 19:58:49.316705 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.287258ms)
  I0722 19:58:49.316722 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 4.125423ms)
  I0722 19:58:49.317138 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.601612ms)
  I0722 19:58:49.317636 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.966399ms)
  I0722 19:58:49.318269 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.56027ms)
  I0722 19:58:49.318942 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 6.386603ms)
  I0722 19:58:49.319460 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.806664ms)
  I0722 19:58:49.319491 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.875345ms)
  I0722 19:58:49.319873 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.384672ms)
  I0722 19:58:49.320061 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.492295ms)
  I0722 19:58:49.320467 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.771959ms)
  I0722 19:58:49.321980 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 9.343573ms)
  I0722 19:58:49.322609 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 10.091694ms)
  I0722 19:58:49.322714 21 proxy.go:558] (3) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 10.242656ms)
  I0722 19:58:49.328170 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 5.144965ms)
  I0722 19:58:49.328170 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.40921ms)
  I0722 19:58:49.329138 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 6.037028ms)
  I0722 19:58:49.330224 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.369986ms)
  I0722 19:58:49.330237 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.428942ms)
  I0722 19:58:49.330277 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 7.533158ms)
  I0722 19:58:49.330588 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.640683ms)
  I0722 19:58:49.330950 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 8.06882ms)
  I0722 19:58:49.330948 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.829136ms)
  I0722 19:58:49.330966 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 8.045661ms)
  I0722 19:58:49.330973 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 8.069436ms)
  I0722 19:58:49.330977 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.971075ms)
  I0722 19:58:49.331098 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 8.117916ms)
  I0722 19:58:49.332022 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 9.057762ms)
  I0722 19:58:49.332195 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 9.108709ms)
  I0722 19:58:49.332548 21 proxy.go:558] (4) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 9.504391ms)
  I0722 19:58:49.335877 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 3.303267ms)
  I0722 19:58:49.336716 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 4.082393ms)
  I0722 19:58:49.336999 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.294993ms)
  I0722 19:58:49.338128 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 5.369795ms)
  I0722 19:58:49.338205 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.305918ms)
  I0722 19:58:49.338225 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 5.281423ms)
  I0722 19:58:49.338495 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.671585ms)
  I0722 19:58:49.338645 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.67763ms)
  I0722 19:58:49.338753 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.906856ms)
  I0722 19:58:49.338794 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 6.114006ms)
  I0722 19:58:49.339724 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 6.919557ms)
  I0722 19:58:49.339741 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 6.744876ms)
  I0722 19:58:49.339750 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 6.827004ms)
  I0722 19:58:49.339758 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 6.891902ms)
  I0722 19:58:49.339933 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.049852ms)
  I0722 19:58:49.340600 21 proxy.go:558] (5) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.822922ms)
  I0722 19:58:49.344650 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.024796ms)
  I0722 19:58:49.345026 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 4.30178ms)
  I0722 19:58:49.345487 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.744641ms)
  I0722 19:58:49.345488 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 4.565904ms)
  I0722 19:58:49.345954 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 5.098699ms)
  I0722 19:58:49.346495 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 5.591657ms)
  I0722 19:58:49.346608 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.942256ms)
  I0722 19:58:49.346668 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.875919ms)
  I0722 19:58:49.346686 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.751793ms)
  I0722 19:58:49.346823 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.008967ms)
  I0722 19:58:49.347457 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 6.586593ms)
  I0722 19:58:49.347711 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 6.753739ms)
  I0722 19:58:49.348071 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.238134ms)
  I0722 19:58:49.348378 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.677108ms)
  I0722 19:58:49.348466 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.703716ms)
  I0722 19:58:49.348630 21 proxy.go:558] (6) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.742917ms)
  I0722 19:58:49.352750 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 3.984176ms)
  I0722 19:58:49.353070 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.093819ms)
  I0722 19:58:49.354196 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.268714ms)
  I0722 19:58:49.354436 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.419776ms)
  I0722 19:58:49.354662 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 6.006597ms)
  I0722 19:58:49.354678 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.804195ms)
  I0722 19:58:49.354700 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.670575ms)
  I0722 19:58:49.354923 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.933129ms)
  I0722 19:58:49.355093 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.251966ms)
  I0722 19:58:49.355120 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 6.262408ms)
  I0722 19:58:49.355133 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 6.240884ms)
  I0722 19:58:49.355291 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 6.201293ms)
  I0722 19:58:49.355435 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 6.633001ms)
  I0722 19:58:49.355770 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 6.700585ms)
  I0722 19:58:49.356422 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.512475ms)
  I0722 19:58:49.356439 21 proxy.go:558] (7) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.769344ms)
  I0722 19:58:49.360556 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.073708ms)
  I0722 19:58:49.360556 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 3.91105ms)
  I0722 19:58:49.361319 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 4.756811ms)
  I0722 19:58:49.362139 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.550255ms)
  I0722 19:58:49.362431 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 5.705335ms)
  I0722 19:58:49.362648 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 5.90535ms)
  I0722 19:58:49.362696 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.22685ms)
  I0722 19:58:49.363349 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 6.737096ms)
  I0722 19:58:49.363358 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 6.840816ms)
  I0722 19:58:49.363685 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 6.926042ms)
  I0722 19:58:49.363840 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.064706ms)
  I0722 19:58:49.364121 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.465439ms)
  I0722 19:58:49.364122 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.423467ms)
  I0722 19:58:49.364395 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 7.573675ms)
  I0722 19:58:49.364421 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.632412ms)
  I0722 19:58:49.364528 21 proxy.go:558] (8) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.853662ms)
  I0722 19:58:49.368001 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 3.301349ms)
  I0722 19:58:49.369144 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.26183ms)
  I0722 19:58:49.369156 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.420029ms)
  I0722 19:58:49.369374 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.451692ms)
  I0722 19:58:49.369389 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.675662ms)
  I0722 19:58:49.369432 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.569315ms)
  I0722 19:58:49.370107 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 5.552904ms)
  I0722 19:58:49.370293 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.498501ms)
  I0722 19:58:49.370292 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.455242ms)
  I0722 19:58:49.370308 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 5.334088ms)
  I0722 19:58:49.370501 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 5.689537ms)
  I0722 19:58:49.370501 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.596463ms)
  I0722 19:58:49.370717 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 5.941816ms)
  I0722 19:58:49.371375 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 6.741055ms)
  I0722 19:58:49.371868 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 6.920569ms)
  I0722 19:58:49.372094 21 proxy.go:558] (9) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.098295ms)
  I0722 19:58:49.376448 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.123811ms)
  I0722 19:58:49.376467 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.318817ms)
  I0722 19:58:49.377606 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 5.14412ms)
  I0722 19:58:49.377619 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.248153ms)
  I0722 19:58:49.377785 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.261232ms)
  I0722 19:58:49.377842 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.334794ms)
  I0722 19:58:49.378888 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.709583ms)
  I0722 19:58:49.379110 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 6.996707ms)
  I0722 19:58:49.379508 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.247756ms)
  I0722 19:58:49.379526 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 7.243173ms)
  I0722 19:58:49.379535 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.110561ms)
  I0722 19:58:49.379556 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.203226ms)
  I0722 19:58:49.379569 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 7.127393ms)
  I0722 19:58:49.379581 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.107262ms)
  I0722 19:58:49.379854 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.616271ms)
  I0722 19:58:49.380111 21 proxy.go:558] (10) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.719966ms)
  I0722 19:58:49.384457 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.322797ms)
  I0722 19:58:49.384466 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 4.203938ms)
  I0722 19:58:49.384981 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.595879ms)
  I0722 19:58:49.385098 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 4.784131ms)
  I0722 19:58:49.385702 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 5.503362ms)
  I0722 19:58:49.385708 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.36128ms)
  I0722 19:58:49.385725 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 5.428536ms)
  I0722 19:58:49.385724 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.279929ms)
  I0722 19:58:49.386870 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 6.451708ms)
  I0722 19:58:49.386940 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 6.574316ms)
  I0722 19:58:49.387298 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.837184ms)
  I0722 19:58:49.387502 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.169265ms)
  I0722 19:58:49.387513 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.261315ms)
  I0722 19:58:49.387850 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.680204ms)
  I0722 19:58:49.387911 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.511353ms)
  I0722 19:58:49.388069 21 proxy.go:558] (11) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.792163ms)
  I0722 19:58:49.391707 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 3.597882ms)
  I0722 19:58:49.392278 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 3.949146ms)
  I0722 19:58:49.392364 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.222134ms)
  I0722 19:58:49.393024 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 4.600209ms)
  I0722 19:58:49.393136 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.774043ms)
  I0722 19:58:49.393429 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.957557ms)
  I0722 19:58:49.393435 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.993425ms)
  I0722 19:58:49.393532 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 5.287289ms)
  I0722 19:58:49.394095 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.752339ms)
  I0722 19:58:49.395007 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 6.728298ms)
  I0722 19:58:49.395022 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.801438ms)
  I0722 19:58:49.395037 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 6.580759ms)
  I0722 19:58:49.395220 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.022372ms)
  I0722 19:58:49.395544 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.236314ms)
  I0722 19:58:49.395842 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.439643ms)
  I0722 19:58:49.395853 21 proxy.go:558] (12) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.472839ms)
  I0722 19:58:49.400507 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.577939ms)
  I0722 19:58:49.400762 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 4.876622ms)
  I0722 19:58:49.401198 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.211211ms)
  I0722 19:58:49.401307 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 5.219238ms)
  I0722 19:58:49.401373 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 5.106598ms)
  I0722 19:58:49.401527 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.222741ms)
  I0722 19:58:49.401649 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.397088ms)
  I0722 19:58:49.401663 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 5.472599ms)
  I0722 19:58:49.402591 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 6.308093ms)
  I0722 19:58:49.402873 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.647411ms)
  I0722 19:58:49.403099 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 6.994075ms)
  I0722 19:58:49.403343 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.13709ms)
  I0722 19:58:49.403813 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.777014ms)
  I0722 19:58:49.403949 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.801506ms)
  I0722 19:58:49.403957 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.946268ms)
  I0722 19:58:49.404190 21 proxy.go:558] (13) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 8.0198ms)
  I0722 19:58:49.407831 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 3.501051ms)
  I0722 19:58:49.409409 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.194222ms)
  I0722 19:58:49.409417 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 5.113225ms)
  I0722 19:58:49.410188 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.753582ms)
  I0722 19:58:49.410204 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 5.659493ms)
  I0722 19:58:49.410604 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 6.24485ms)
  I0722 19:58:49.410726 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 6.164229ms)
  I0722 19:58:49.411287 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 6.831998ms)
  I0722 19:58:49.411292 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 6.782463ms)
  I0722 19:58:49.411543 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.265805ms)
  I0722 19:58:49.411632 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.158242ms)
  I0722 19:58:49.412037 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.658422ms)
  I0722 19:58:49.412065 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 7.577599ms)
  I0722 19:58:49.412212 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.815546ms)
  I0722 19:58:49.412330 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 7.806302ms)
  I0722 19:58:49.412410 21 proxy.go:558] (14) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 8.172961ms)
  I0722 19:58:49.415589 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 3.132268ms)
  I0722 19:58:49.416995 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 4.426426ms)
  I0722 19:58:49.417190 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 4.468746ms)
  I0722 19:58:49.417420 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.798051ms)
  I0722 19:58:49.418004 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.33578ms)
  I0722 19:58:49.418457 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.856193ms)
  I0722 19:58:49.418759 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 6.328112ms)
  I0722 19:58:49.418826 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.010587ms)
  I0722 19:58:49.419147 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 6.350956ms)
  I0722 19:58:49.419208 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 6.328435ms)
  I0722 19:58:49.419872 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 7.172312ms)
  I0722 19:58:49.419878 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.097182ms)
  I0722 19:58:49.420112 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.581688ms)
  I0722 19:58:49.420169 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.522547ms)
  I0722 19:58:49.420251 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.500335ms)
  I0722 19:58:49.420601 21 proxy.go:558] (15) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 7.756527ms)
  I0722 19:58:49.425398 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.765438ms)
  I0722 19:58:49.425498 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 4.795222ms)
  I0722 19:58:49.426379 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 5.479721ms)
  I0722 19:58:49.426434 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 5.467174ms)
  I0722 19:58:49.426483 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 5.605022ms)
  I0722 19:58:49.427702 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 6.711468ms)
  I0722 19:58:49.427716 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 6.916368ms)
  I0722 19:58:49.427733 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 6.949949ms)
  I0722 19:58:49.428440 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.577936ms)
  I0722 19:58:49.428736 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 7.973698ms)
  I0722 19:58:49.428739 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 7.788614ms)
  I0722 19:58:49.428914 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 8.19849ms)
  I0722 19:58:49.428935 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 8.094073ms)
  I0722 19:58:49.429108 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 8.171481ms)
  I0722 19:58:49.429231 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 8.413068ms)
  I0722 19:58:49.429439 21 proxy.go:558] (16) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 8.521167ms)
  I0722 19:58:49.434375 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 4.61802ms)
  I0722 19:58:49.434665 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.952503ms)
  I0722 19:58:49.436172 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 6.401591ms)
  I0722 19:58:49.436172 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.516612ms)
  I0722 19:58:49.436188 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 6.608327ms)
  I0722 19:58:49.436198 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 6.724815ms)
  I0722 19:58:49.436202 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 6.567139ms)
  I0722 19:58:49.436714 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 7.11877ms)
  I0722 19:58:49.437090 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 7.36151ms)
  I0722 19:58:49.437473 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.918432ms)
  I0722 19:58:49.437583 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 7.80048ms)
  I0722 19:58:49.437667 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 7.866649ms)
  I0722 19:58:49.437771 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 8.073734ms)
  I0722 19:58:49.437821 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 8.142499ms)
  I0722 19:58:49.438003 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 8.382441ms)
  I0722 19:58:49.438216 21 proxy.go:558] (17) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 8.694708ms)
  I0722 19:58:49.442060 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 3.794806ms)
  I0722 19:58:49.442250 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 3.872175ms)
  I0722 19:58:49.442681 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.181911ms)
  I0722 19:58:49.442932 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 4.372894ms)
  I0722 19:58:49.442946 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.507143ms)
  I0722 19:58:49.443362 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 5.005057ms)
  I0722 19:58:49.443464 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.914862ms)
  I0722 19:58:49.443513 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 5.117956ms)
  I0722 19:58:49.444497 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 6.008685ms)
  I0722 19:58:49.444842 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 6.320634ms)
  I0722 19:58:49.445241 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 6.928269ms)
  I0722 19:58:49.445286 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 6.865448ms)
  I0722 19:58:49.445302 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 6.850743ms)
  I0722 19:58:49.445674 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.429774ms)
  I0722 19:58:49.445683 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.351165ms)
  I0722 19:58:49.445932 21 proxy.go:558] (18) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 7.463136ms)
  I0722 19:58:49.449859 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 3.696717ms)
  I0722 19:58:49.450121 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:162/proxy/: bar (200; 4.163349ms)
  I0722 19:58:49.450591 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.4682ms)
  I0722 19:58:49.450782 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:460/proxy/: tls baz (200; 4.535339ms)
  I0722 19:58:49.450939 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc/proxy/rewriteme">test</a> (200; 4.836649ms)
  I0722 19:58:49.451093 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:160/proxy/: foo (200; 4.813089ms)
  I0722 19:58:49.451173 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/http:proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">... (200; 4.963893ms)
  I0722 19:58:49.451356 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:462/proxy/: tls qux (200; 5.375812ms)
  I0722 19:58:49.451582 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname1/proxy/: foo (200; 5.415176ms)
  I0722 19:58:49.451739 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/https:proxy-service-hg7n2-hdjcc:443/proxy/tlsrewritem... (200; 5.443836ms)
  I0722 19:58:49.452889 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname2/proxy/: tls qux (200; 6.697775ms)
  I0722 19:58:49.453036 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname1/proxy/: foo (200; 6.772772ms)
  I0722 19:58:49.453039 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/: <a href="/api/v1/namespaces/proxy-9503/pods/proxy-service-hg7n2-hdjcc:1080/proxy/rewriteme">test<... (200; 6.676066ms)
  I0722 19:58:49.453355 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/services/http:proxy-service-hg7n2:portname2/proxy/: bar (200; 7.325152ms)
  I0722 19:58:49.453544 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/services/https:proxy-service-hg7n2:tlsportname1/proxy/: tls baz (200; 7.223942ms)
  I0722 19:58:49.453671 21 proxy.go:558] (19) /api/v1/namespaces/proxy-9503/services/proxy-service-hg7n2:portname2/proxy/: bar (200; 7.334701ms)
  STEP: deleting ReplicationController proxy-service-hg7n2 in namespace proxy-9503, will wait for the garbage collector to delete the pods @ 07/22/25 19:58:49.453
  I0722 19:58:49.517291 21 resources.go:139] Deleting ReplicationController proxy-service-hg7n2 took: 8.42278ms
  I0722 19:58:49.617746 21 resources.go:163] Terminating ReplicationController proxy-service-hg7n2 pods took: 100.451154ms
  E0722 19:58:49.998470      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:50.998591      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:51.718232 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9503" for this suite. @ 07/22/25 19:58:51.723
• [4.550 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 07/22/25 19:58:51.732
  I0722 19:58:51.732850 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 19:58:51.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:51.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:51.749
  STEP: set up a multi version CRD @ 07/22/25 19:58:51.752
  I0722 19:58:51.752647 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 19:58:51.998897      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:52.998872      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:53.999824      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/22/25 19:58:54.886
  STEP: check the new version name is served @ 07/22/25 19:58:54.898
  E0722 19:58:54.999929      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/22/25 19:58:55.598
  E0722 19:58:56.000557      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/22/25 19:58:56.236
  E0722 19:58:57.001384      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:58:58.001594      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 19:58:58.690346 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3708" for this suite. @ 07/22/25 19:58:58.697
• [6.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 07/22/25 19:58:58.704
  I0722 19:58:58.704478 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-pred @ 07/22/25 19:58:58.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:58:58.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:58:58.724
  I0722 19:58:58.725474 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0722 19:58:58.800762 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0722 19:58:58.804739 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-31-147 before test
  I0722 19:58:58.808133 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-6bwvp from ingress-nginx-kubernetes-worker started at 2025-07-22 19:36:29 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.808151 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:58:58.808158 21 predicates.go:957] calico-node-9tfhx from kube-system started at 2025-07-22 18:36:14 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.808165 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:58:58.808170 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-07-22 18:39:33 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.808175 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0722 19:58:58.808181 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-8ghhb from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:58:58.808186 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:58:58.808192 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 19:58:58.808197 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-73 before test
  I0722 19:58:58.811725 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-sz9hn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.811743 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:58:58.811750 21 predicates.go:957] calico-node-q2c6n from kube-system started at 2025-07-22 18:35:46 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.811755 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:58:58.811762 21 predicates.go:957] coredns-5d946bb58-zcb2f from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.811767 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0722 19:58:58.811772 21 predicates.go:957] kube-state-metrics-b84f44f45-l28nc from kube-system started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.811777 21 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0722 19:58:58.811782 21 predicates.go:957] metrics-server-v0.7.2-7d878b47f8-gh9ww from kube-system started at 2025-07-22 18:32:29 +0000 UTC (2 container statuses recorded)
  I0722 19:58:58.811788 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0722 19:58:58.811792 21 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0722 19:58:58.811798 21 predicates.go:957] dashboard-metrics-scraper-5cf87bc988-t8js5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.811803 21 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0722 19:58:58.811809 21 predicates.go:957] kubernetes-dashboard-6858576c98-ckql5 from kubernetes-dashboard started at 2025-07-22 18:32:29 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.811818 21 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0722 19:58:58.811823 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-kdz76 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:58:58.811828 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:58:58.811833 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0722 19:58:58.811838 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-7-234 before test
  I0722 19:58:58.815537 21 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qgccn from ingress-nginx-kubernetes-worker started at 2025-07-22 18:32:55 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.815560 21 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0722 19:58:58.815568 21 predicates.go:957] calico-node-hp9wd from kube-system started at 2025-07-22 18:35:32 +0000 UTC (1 container statuses recorded)
  I0722 19:58:58.815572 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0722 19:58:58.815578 21 predicates.go:957] sonobuoy-e2e-job-5e6356138b464fd4 from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:58:58.815584 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0722 19:58:58.815588 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:58:58.815594 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-fprks from sonobuoy started at 2025-07-22 18:39:35 +0000 UTC (2 container statuses recorded)
  I0722 19:58:58.815598 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0722 19:58:58.815603 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-31-147 @ 07/22/25 19:58:58.828
  STEP: verifying the node has the label node ip-172-31-68-73 @ 07/22/25 19:58:58.839
  STEP: verifying the node has the label node ip-172-31-7-234 @ 07/22/25 19:58:58.85
  I0722 19:58:58.910900 21 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-6bwvp requesting resource cpu=0m on Node ip-172-31-31-147
  I0722 19:58:58.910927 21 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-qgccn requesting resource cpu=0m on Node ip-172-31-7-234
  I0722 19:58:58.910933 21 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-sz9hn requesting resource cpu=0m on Node ip-172-31-68-73
  I0722 19:58:58.910938 21 predicates.go:372] Pod calico-node-9tfhx requesting resource cpu=250m on Node ip-172-31-31-147
  I0722 19:58:58.910943 21 predicates.go:372] Pod calico-node-hp9wd requesting resource cpu=250m on Node ip-172-31-7-234
  I0722 19:58:58.910948 21 predicates.go:372] Pod calico-node-q2c6n requesting resource cpu=250m on Node ip-172-31-68-73
  I0722 19:58:58.910953 21 predicates.go:372] Pod coredns-5d946bb58-zcb2f requesting resource cpu=100m on Node ip-172-31-68-73
  I0722 19:58:58.910958 21 predicates.go:372] Pod kube-state-metrics-b84f44f45-l28nc requesting resource cpu=0m on Node ip-172-31-68-73
  I0722 19:58:58.910963 21 predicates.go:372] Pod metrics-server-v0.7.2-7d878b47f8-gh9ww requesting resource cpu=5m on Node ip-172-31-68-73
  I0722 19:58:58.910968 21 predicates.go:372] Pod dashboard-metrics-scraper-5cf87bc988-t8js5 requesting resource cpu=0m on Node ip-172-31-68-73
  I0722 19:58:58.910973 21 predicates.go:372] Pod kubernetes-dashboard-6858576c98-ckql5 requesting resource cpu=0m on Node ip-172-31-68-73
  I0722 19:58:58.910978 21 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-31-147
  I0722 19:58:58.910983 21 predicates.go:372] Pod sonobuoy-e2e-job-5e6356138b464fd4 requesting resource cpu=0m on Node ip-172-31-7-234
  I0722 19:58:58.910988 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-8ghhb requesting resource cpu=0m on Node ip-172-31-31-147
  I0722 19:58:58.910993 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-fprks requesting resource cpu=0m on Node ip-172-31-7-234
  I0722 19:58:58.910999 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-02a83f93262c4255-kdz76 requesting resource cpu=0m on Node ip-172-31-68-73
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/22/25 19:58:58.911
  I0722 19:58:58.911038 21 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-68-73
  I0722 19:58:58.922451 21 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-7-234
  I0722 19:58:58.929100 21 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-31-147
  E0722 19:58:59.001692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:00.001794      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/22/25 19:59:00.954
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-171907d7-7a64-4f12-a358-647c6059d70a.1854ab26ffbf18cf], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8871/filler-pod-171907d7-7a64-4f12-a358-647c6059d70a to ip-172-31-31-147] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-171907d7-7a64-4f12-a358-647c6059d70a.1854ab271c3d27e2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-171907d7-7a64-4f12-a358-647c6059d70a.1854ab271d885153], Reason = [Created], Message = [Created container: filler-pod-171907d7-7a64-4f12-a358-647c6059d70a] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-171907d7-7a64-4f12-a358-647c6059d70a.1854ab27203e67af], Reason = [Started], Message = [Started container filler-pod-171907d7-7a64-4f12-a358-647c6059d70a] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c.1854ab26ff348089], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8871/filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c to ip-172-31-68-73] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c.1854ab271c268d96], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c.1854ab271d6b8cb0], Reason = [Created], Message = [Created container: filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c.1854ab272015aa3b], Reason = [Started], Message = [Started container filler-pod-6a60bbb1-4548-407e-a13f-5aad2dde4c3c] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd.1854ab26ff9ff0a6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8871/filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd to ip-172-31-7-234] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd.1854ab271c75a81c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd.1854ab271d9df4ab], Reason = [Created], Message = [Created container: filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd.1854ab27202f0786], Reason = [Started], Message = [Started container filler-pod-bf3402af-fa9a-4d67-9a54-2b26354d80dd] @ 07/22/25 19:59:00.958
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1854ab27785411e7], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/22/25 19:59:00.973
  E0722 19:59:01.002256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-31-147 @ 07/22/25 19:59:01.971
  STEP: verifying the node doesn't have the label node @ 07/22/25 19:59:01.983
  STEP: removing the label node off the node ip-172-31-68-73 @ 07/22/25 19:59:01.985
  STEP: verifying the node doesn't have the label node @ 07/22/25 19:59:01.998
  STEP: removing the label node off the node ip-172-31-7-234 @ 07/22/25 19:59:02.001
  E0722 19:59:02.003070      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label node @ 07/22/25 19:59:02.013
  I0722 19:59:02.015656 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8871" for this suite. @ 07/22/25 19:59:02.022
• [3.325 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 07/22/25 19:59:02.029
  I0722 19:59:02.029468 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 19:59:02.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 19:59:02.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 19:59:02.059
  I0722 19:59:02.076143 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0722 19:59:03.003346      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:04.003433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:05.003675      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:06.003827      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:07.004012      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:08.004206      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:09.004398      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:10.004433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:11.004591      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:12.004819      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:13.004965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:14.005189      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:15.005720      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:16.005840      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:17.005959      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:18.006195      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:19.006820      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:20.007661      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:21.008250      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:22.009255      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:23.010172      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:24.010230      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:25.011246      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:26.011345      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:27.012175      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:28.013027      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:29.013867      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:30.014075      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:31.014195      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:32.014893      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:33.015183      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:34.015407      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:35.016209      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:36.017035      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:37.017189      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:38.017271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:39.017368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:40.018314      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:41.019246      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:42.020245      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:43.021113      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:44.021303      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:45.021501      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:46.022208      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:47.023250      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:48.023492      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:49.023829      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:50.024015      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:51.024156      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:52.024188      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:53.024333      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:54.024629      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:55.024755      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:56.024859      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:57.025129      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:58.025254      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 19:59:59.025593      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:00.025836      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:01.026107      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:02.026205      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:00:02.081941 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/22/25 20:00:02.085
  I0722 20:00:02.085302 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/22/25 20:00:02.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:00:02.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:00:02.102
  I0722 20:00:02.119094 21 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0722 20:00:02.124136 21 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/22/25 20:00:02.172
  STEP: Removing a custom resource @ 07/22/25 20:00:02.179
  STEP: Removing a custom resource @ 07/22/25 20:00:02.186
  I0722 20:00:02.194041 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9163" for this suite. @ 07/22/25 20:00:02.197
  I0722 20:00:02.204942 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5631" for this suite. @ 07/22/25 20:00:02.298
• [60.277 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 07/22/25 20:00:02.306
  I0722 20:00:02.306211 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename kubectl @ 07/22/25 20:00:02.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:00:02.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:00:02.322
  STEP: validating api versions @ 07/22/25 20:00:02.323
  I0722 20:00:02.323542 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=kubectl-9013 api-versions'
  I0722 20:00:02.364242 21 builder.go:146] stderr: ""
  I0722 20:00:02.364293 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0722 20:00:02.364412 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9013" for this suite. @ 07/22/25 20:00:02.398
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/22/25 20:00:02.407
  I0722 20:00:02.407208 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/22/25 20:00:02.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:00:02.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:00:02.421
  I0722 20:00:02.422630 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 20:00:03.026608      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:04.026794      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:05.027586      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:00:05.469189 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7715" for this suite. @ 07/22/25 20:00:05.473
• [3.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 07/22/25 20:00:05.481
  I0722 20:00:05.481694 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 20:00:05.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:00:05.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:00:05.495
  STEP: Creating a test headless service @ 07/22/25 20:00:05.496
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9794 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9794;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9794 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9794;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9794.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9794.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9794.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9794.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9794.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9794.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9794.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9794.svc;check="$$(dig +notcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_udp@PTR;check="$$(dig +tcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_tcp@PTR;sleep 1; done
   @ 07/22/25 20:00:05.514
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9794 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9794;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9794 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9794;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9794.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9794.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9794.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9794.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9794.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9794.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9794.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9794.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9794.svc;check="$$(dig +notcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_udp@PTR;check="$$(dig +tcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_tcp@PTR;sleep 1; done
   @ 07/22/25 20:00:05.514
  STEP: creating a pod to probe DNS @ 07/22/25 20:00:05.514
  STEP: submitting the pod to kubernetes @ 07/22/25 20:00:05.514
  E0722 20:00:06.027684      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:07.028284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 20:00:07.536
  STEP: looking for the results for each expected name from probers @ 07/22/25 20:00:07.538
  I0722 20:00:07.542298 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.546464 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.549065 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9794 from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.552759 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9794 from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.556005 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.559692 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.563122 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.566227 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.581034 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.583945 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.586277 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9794 from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.589389 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9794 from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.592730 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.595324 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.598202 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.602678 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9794.svc from pod dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425: the server could not find the requested resource (get pods dns-test-5200da37-1edf-4cd2-87a3-e7708729f425)
  I0722 20:00:07.614921 21 dns_common.go:506] Lookups using dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9794 agnhost_tcp@dns-test-service.dns-9794 agnhost_udp@dns-test-service.dns-9794.svc agnhost_tcp@dns-test-service.dns-9794.svc agnhost_udp@_http._tcp.dns-test-service.dns-9794.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9794.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9794 jessie_tcp@dns-test-service.dns-9794 jessie_udp@dns-test-service.dns-9794.svc jessie_tcp@dns-test-service.dns-9794.svc jessie_udp@_http._tcp.dns-test-service.dns-9794.svc jessie_tcp@_http._tcp.dns-test-service.dns-9794.svc]

  I0722 20:00:07.628522 21 dns_common.go:514] Pod client logs for webserver: 
  I0722 20:00:07.635286 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 20:00:07.639619 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 20:00:08.029176      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:09.029220      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:10.030276      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:11.030426      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:12.030553      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:00:12.631234 21 dns_common.go:546] DNS probes using dns-9794/dns-test-5200da37-1edf-4cd2-87a3-e7708729f425 succeeded

  STEP: deleting the pod @ 07/22/25 20:00:12.631
  STEP: deleting the test service @ 07/22/25 20:00:12.649
  STEP: deleting the test headless service @ 07/22/25 20:00:12.672
  I0722 20:00:12.684225 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9794" for this suite. @ 07/22/25 20:00:12.687
• [7.214 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/22/25 20:00:12.695
  I0722 20:00:12.695729 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename configmap @ 07/22/25 20:00:12.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:00:12.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:00:12.708
  STEP: Creating configMap with name configmap-test-upd-0aecfc08-8cb6-4748-896e-ae4681f1a9de @ 07/22/25 20:00:12.789
  STEP: Creating the pod @ 07/22/25 20:00:12.794
  E0722 20:00:13.031579      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:14.031759      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-0aecfc08-8cb6-4748-896e-ae4681f1a9de @ 07/22/25 20:00:14.826
  STEP: waiting to observe update in volume @ 07/22/25 20:00:14.833
  E0722 20:00:15.032756      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:16.033010      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:17.033368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:18.033588      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:19.033822      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:20.033911      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:21.034073      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:22.034284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:23.034798      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:24.035000      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:25.035523      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:26.035623      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:27.036007      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:28.036236      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:29.036946      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:30.037143      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:31.037497      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:32.037661      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:33.038433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:34.038497      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:35.039182      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:36.039217      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:37.039912      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:38.040296      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:39.041277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:40.041439      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:41.041709      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:42.041888      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:43.042095      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:44.042378      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:45.043277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:46.043399      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:47.044107      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:48.044263      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:49.044908      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:50.045146      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:51.045491      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:52.045717      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:53.046321      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:54.046539      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:55.046834      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:56.046965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:57.047376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:58.048394      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:00:59.049271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:00.049464      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:01.050310      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:02.050503      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:03.050726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:04.051291      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:05.051928      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:06.052102      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:07.053017      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:08.053223      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:09.053321      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:10.053578      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:11.053698      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:12.054281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:13.054518      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:14.055284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:15.056259      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:16.056682      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:17.056909      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:18.057000      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:19.057036      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:20.057219      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:21.057907      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:22.058215      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:23.058272      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:23.127317 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1240" for this suite. @ 07/22/25 20:01:23.131
• [70.445 seconds]
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 07/22/25 20:01:23.14
  I0722 20:01:23.140630 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 20:01:23.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:01:23.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:01:23.155
  STEP: Creating ServiceAccount "e2e-sa-rdwkq"  @ 07/22/25 20:01:23.156
  I0722 20:01:23.160313 21 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-rdwkq"  @ 07/22/25 20:01:23.16
  I0722 20:01:23.167953 21 service_accounts.go:868] AutomountServiceAccountToken: true
  I0722 20:01:23.168035 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3523" for this suite. @ 07/22/25 20:01:23.232
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 07/22/25 20:01:23.24
  I0722 20:01:23.240437 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-probe @ 07/22/25 20:01:23.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:01:23.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:01:23.255
  STEP: Creating pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682 @ 07/22/25 20:01:23.257
  E0722 20:01:24.058396      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:25.058485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/22/25 20:01:25.272
  I0722 20:01:25.276065 21 container_probe.go:1749] Initial restart count of pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec is 0
  I0722 20:01:25.278784 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:26.058592      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:27.058655      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:27.284518 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:28.059220      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:29.060277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:29.289649 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:30.060593      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:31.060799      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:31.294571 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:32.060907      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:33.060992      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:33.299182 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:34.061074      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:35.061214      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:35.303906 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:36.062285      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:37.062504      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:37.308820 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:38.062614      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:39.062700      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:39.312609 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:40.062844      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:41.062981      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:41.317810 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:42.063615      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:43.063832      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:43.322875 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:44.064283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:45.064577      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:45.326972 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:46.064487      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:47.064642      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:47.332847 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:48.064809      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:49.065080      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:49.337388 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:50.065251      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:51.065434      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:51.340632 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:52.065476      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:53.065721      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:53.344464 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:54.065887      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:55.066009      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:55.349763 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:56.066211      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:57.066408      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:57.355615 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:01:58.067356      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:01:59.067475      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:01:59.359510 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:00.068288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:01.068381      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:01.363956 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:02.068482      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:03.069299      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:03.368287 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:04.070115      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:05.070237      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:05.372905 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:06.070338      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:07.070590      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:07.379010 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:08.071280      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:09.071469      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:09.383633 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:10.072497      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:11.072801      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:11.388169 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:12.072921      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:13.073194      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:13.392664 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:14.073412      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:15.073643      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:15.397465 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:16.074165      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:17.074283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:17.401671 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:18.074431      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:19.074519      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:19.406620 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:20.075484      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:21.075646      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:21.411139 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:22.075827      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:23.075919      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:23.415034 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:24.076885      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:25.076977      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:25.420395 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:26.077082      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:27.077264      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:27.425185 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  E0722 20:02:28.077497      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:29.078262      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:02:29.429709 21 container_probe.go:1759] Get pod test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec in namespace container-probe-2682
  I0722 20:02:29.429742 21 container_probe.go:1763] Restart count of pod container-probe-2682/test-grpc-e2916495-0dfb-4907-8df4-3197eae731ec is now 1 (1m4.153652832s elapsed)
  STEP: deleting the pod @ 07/22/25 20:02:29.429
  I0722 20:02:29.445620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2682" for this suite. @ 07/22/25 20:02:29.45
• [66.219 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 07/22/25 20:02:29.459
  I0722 20:02:29.459429 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename sched-preemption @ 07/22/25 20:02:29.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:02:29.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:02:29.474
  I0722 20:02:29.487136 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0722 20:02:30.078815      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:31.078914      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:32.079213      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:33.079309      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:34.079403      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:35.079683      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:36.080261      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:37.080433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:38.080563      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:39.080806      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:40.081554      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:41.081831      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:42.081932      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:43.082147      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:44.082906      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:45.083075      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:46.083250      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:47.084259      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:48.084418      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:49.084473      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:50.085455      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:51.085588      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:52.086281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:53.086419      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:54.087383      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:55.087570      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:56.087690      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:57.087753      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:58.087876      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:02:59.087937      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:00.088556      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:01.088631      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:02.089254      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:03.089344      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:04.090272      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:05.090755      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:06.090875      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:07.091119      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:08.091179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:09.091371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:10.091443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:11.091633      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:12.091893      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:13.092161      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:14.093262      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:15.093521      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:16.094248      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:17.094377      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:18.094991      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:19.095249      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:20.095965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:21.096162      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:22.097035      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:23.097195      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:24.098234      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:25.098471      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:26.098566      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:27.099239      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:28.100162      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:29.100376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:29.492700 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/22/25 20:03:29.497
  STEP: Adding a custom resource @ 07/22/25 20:03:29.497
  I0722 20:03:29.516302 21 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0722 20:03:29.520412 21 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/22/25 20:03:29.52
  I0722 20:03:29.536086 21 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0722 20:03:29.545184 21 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/22/25 20:03:29.545
  I0722 20:03:29.560789 21 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0722 20:03:29.567079 21 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/22/25 20:03:29.567
  E0722 20:03:30.100936      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:31.101199      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/22/25 20:03:31.596
  E0722 20:03:32.102282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:33.102400      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:34.103442      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:35.104393      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/22/25 20:03:35.674
  STEP: Removing a custom resource @ 07/22/25 20:03:35.685
  STEP: Removing a custom resource @ 07/22/25 20:03:35.696
  I0722 20:03:35.707321 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1718" for this suite. @ 07/22/25 20:03:35.709
• [66.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 07/22/25 20:03:35.718
  I0722 20:03:35.718729 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 20:03:35.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:03:35.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:03:35.736
  STEP: creating service endpoint-test2 in namespace services-5305 @ 07/22/25 20:03:35.737
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5305 to expose endpoints map[] @ 07/22/25 20:03:35.747
  I0722 20:03:35.752343 21 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0722 20:03:36.104696      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:36.762361 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5305 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5305 @ 07/22/25 20:03:36.762
  E0722 20:03:37.104815      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:38.104884      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5305 to expose endpoints map[pod1:[80]] @ 07/22/25 20:03:38.782
  I0722 20:03:38.795597 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5305 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/22/25 20:03:38.795
  I0722 20:03:38.795644 21 resource.go:361] Creating new exec pod
  E0722 20:03:39.105765      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:40.105894      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:41.106704      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:41.809243 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-5305 exec execpodkcwrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0722 20:03:41.926673 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.64) 80 port [tcp/http] succeeded!\n"
  I0722 20:03:41.926756 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:03:41.926980 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-5305 exec execpodkcwrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 80'
  I0722 20:03:42.027209 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 80\nConnection to 10.152.183.64 80 port [tcp/http] succeeded!\n"
  I0722 20:03:42.027271 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5305 @ 07/22/25 20:03:42.027
  E0722 20:03:42.107272      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:43.107357      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5305 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/22/25 20:03:44.04
  I0722 20:03:44.053624 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5305 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/22/25 20:03:44.053
  E0722 20:03:44.107623      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:45.053924 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-5305 exec execpodkcwrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0722 20:03:45.107810      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:45.141495 21 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.64) 80 port [tcp/http] succeeded!\n"
  I0722 20:03:45.141533 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:03:45.141611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-5305 exec execpodkcwrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 80'
  I0722 20:03:45.221820 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 80\nConnection to 10.152.183.64 80 port [tcp/http] succeeded!\n"
  I0722 20:03:45.221859 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5305 @ 07/22/25 20:03:45.221
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5305 to expose endpoints map[pod2:[80]] @ 07/22/25 20:03:45.232
  E0722 20:03:46.107894      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:46.254096 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5305 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/22/25 20:03:46.254
  E0722 20:03:47.107967      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:03:47.255178 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-5305 exec execpodkcwrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0722 20:03:47.337726 21 builder.go:146] stderr: "+ + nc -v -t -w 2 endpoint-test2 80echo hostName\n\nConnection to endpoint-test2 (10.152.183.64) 80 port [tcp/http] succeeded!\n"
  I0722 20:03:47.337765 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:03:47.337908 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-5305 exec execpodkcwrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 80'
  I0722 20:03:47.415298 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 80\nConnection to 10.152.183.64 80 port [tcp/http] succeeded!\n"
  I0722 20:03:47.415339 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5305 @ 07/22/25 20:03:47.415
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5305 to expose endpoints map[] @ 07/22/25 20:03:47.435
  I0722 20:03:47.443227 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5305 exposes endpoints map[]
  I0722 20:03:47.460386 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5305" for this suite. @ 07/22/25 20:03:47.463
• [11.750 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 07/22/25 20:03:47.469
  I0722 20:03:47.469510 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 20:03:47.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:03:47.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:03:47.488
  STEP: Discovering how many secrets are in namespace by default @ 07/22/25 20:03:47.491
  E0722 20:03:48.108032      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:49.108160      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:50.109198      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:51.109246      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:52.109344      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/22/25 20:03:52.495
  E0722 20:03:53.110263      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:54.110369      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:55.110735      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:56.110881      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:57.111015      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 20:03:57.5
  STEP: Ensuring resource quota status is calculated @ 07/22/25 20:03:57.506
  E0722 20:03:58.111179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:03:59.111388      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 07/22/25 20:03:59.51
  STEP: Ensuring resource quota status captures secret creation @ 07/22/25 20:03:59.522
  E0722 20:04:00.111432      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:01.111519      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 07/22/25 20:04:01.526
  STEP: Ensuring resource quota status released usage @ 07/22/25 20:04:01.533
  E0722 20:04:02.112486      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:03.112589      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:03.538691 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8235" for this suite. @ 07/22/25 20:04:03.543
• [16.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/22/25 20:04:03.551
  I0722 20:04:03.551737 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename chunking @ 07/22/25 20:04:03.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:03.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:03.566
  STEP: creating a large number of resources @ 07/22/25 20:04:03.568
  E0722 20:04:04.112594      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:05.112884      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:06.113889      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:07.114366      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:08.115075      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:09.115439      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:10.116455      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:11.117324      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:12.117819      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:13.118565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:14.118920      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:15.119943      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:16.120406      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:17.121128      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:18.121687      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:19.121919      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:20.122842      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:21.123778      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/22/25 20:04:21.258
  I0722 20:04:21.307121 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0722 20:04:21.358595 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0722 20:04:21.406729 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0722 20:04:21.457469 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0722 20:04:21.507756 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0722 20:04:21.557122 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0722 20:04:21.606641 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0722 20:04:21.658288 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0722 20:04:21.706345 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0722 20:04:21.757113 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0722 20:04:21.808852 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0722 20:04:21.857363 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0722 20:04:21.907509 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0722 20:04:21.957521 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0722 20:04:22.006684 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0722 20:04:22.057280 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0722 20:04:22.107504 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  E0722 20:04:22.124708      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:22.156454 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0722 20:04:22.206734 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0722 20:04:22.257340 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0722 20:04:22.306473 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0722 20:04:22.356885 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0722 20:04:22.408068 21 chunking.go:98] Retrieved 17/17 results with rv 43377 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0722 20:04:22.457286 21 chunking.go:98] Retrieved 9/17 results with rv 43377 and continue 
  I0722 20:04:22.508742 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0722 20:04:22.557794 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0722 20:04:22.607090 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0722 20:04:22.657992 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0722 20:04:22.708752 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0722 20:04:22.756959 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0722 20:04:22.807206 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0722 20:04:22.857076 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0722 20:04:22.907077 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0722 20:04:22.956458 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0722 20:04:23.008264 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0722 20:04:23.056904 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0722 20:04:23.107995 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  E0722 20:04:23.125160      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:23.158385 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0722 20:04:23.207634 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0722 20:04:23.258898 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0722 20:04:23.308093 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0722 20:04:23.358764 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0722 20:04:23.407642 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0722 20:04:23.458385 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0722 20:04:23.506093 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0722 20:04:23.558153 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0722 20:04:23.607247 21 chunking.go:98] Retrieved 17/17 results with rv 43379 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzNzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0722 20:04:23.656355 21 chunking.go:98] Retrieved 9/17 results with rv 43379 and continue 
  I0722 20:04:23.708165 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0722 20:04:23.757289 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0722 20:04:23.806650 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0722 20:04:23.857369 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0722 20:04:23.907737 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0722 20:04:23.956762 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0722 20:04:24.007442 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0722 20:04:24.057725 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0722 20:04:24.107151 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  E0722 20:04:24.125303      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:24.156763 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0722 20:04:24.208005 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0722 20:04:24.257162 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0722 20:04:24.306177 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0722 20:04:24.358437 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0722 20:04:24.406132 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0722 20:04:24.456884 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0722 20:04:24.507954 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0722 20:04:24.557090 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0722 20:04:24.606631 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0722 20:04:24.657823 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0722 20:04:24.706817 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0722 20:04:24.757730 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0722 20:04:24.807608 21 chunking.go:98] Retrieved 17/17 results with rv 43380 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0722 20:04:24.856558 21 chunking.go:98] Retrieved 9/17 results with rv 43380 and continue 
  STEP: retrieving those results all at once @ 07/22/25 20:04:24.856
  I0722 20:04:24.911209 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-136" for this suite. @ 07/22/25 20:04:24.958
• [21.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/22/25 20:04:25.009
  I0722 20:04:25.009309 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:04:25.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:25.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:25.023
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:04:25.025
  E0722 20:04:25.126142      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:26.126281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:27.127216      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:28.128120      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:04:29.047
  I0722 20:04:29.051720 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-49dfa43c-d252-45dd-97cb-08c2020582e4 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:04:29.061
  I0722 20:04:29.079573 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5278" for this suite. @ 07/22/25 20:04:29.083
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/22/25 20:04:29.09
  I0722 20:04:29.090648 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:04:29.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:29.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:29.102
  STEP: Creating configMap with name projected-configmap-test-volume-04b7d7e1-e2cd-4927-b9cf-edb7184e0b98 @ 07/22/25 20:04:29.105
  STEP: Creating a pod to test consume configMaps @ 07/22/25 20:04:29.11
  E0722 20:04:29.128669      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:30.129509      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:31.130300      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:32.130681      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:04:33.13
  E0722 20:04:33.131028      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:33.134213 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-projected-configmaps-9b466275-9d59-4dc8-9295-a20458a2911b container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 20:04:33.14
  I0722 20:04:33.160945 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9010" for this suite. @ 07/22/25 20:04:33.164
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/22/25 20:04:33.17
  I0722 20:04:33.170969 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename runtimeclass @ 07/22/25 20:04:33.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:33.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:33.185
  E0722 20:04:34.131438      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:35.131488      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:35.216780 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2012" for this suite. @ 07/22/25 20:04:35.22
• [2.057 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 07/22/25 20:04:35.227
  I0722 20:04:35.227978 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/22/25 20:04:35.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:35.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:35.243
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/22/25 20:04:35.245
  I0722 20:04:35.245703 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 20:04:36.132139      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:37.132552      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:38.132899      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:39.133890      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:40.134812      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/22/25 20:04:40.337
  I0722 20:04:40.338266 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 20:04:41.135692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:41.648821 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 20:04:42.135837      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:43.136192      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:44.136979      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:45.137288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:46.138061      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:46.617097 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9225" for this suite. @ 07/22/25 20:04:46.622
• [11.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 07/22/25 20:04:46.63
  I0722 20:04:46.630475 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 20:04:46.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:46.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:46.648
  I0722 20:04:46.664792 21 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0722 20:04:46.664817 21 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0722 20:04:46.670610 21 service_accounts.go:282] created pod pod-service-account-mountsa
  I0722 20:04:46.670627 21 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0722 20:04:46.677331 21 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0722 20:04:46.677347 21 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0722 20:04:46.683798 21 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0722 20:04:46.683816 21 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0722 20:04:46.691304 21 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0722 20:04:46.691336 21 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0722 20:04:46.700271 21 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0722 20:04:46.700304 21 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0722 20:04:46.706084 21 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0722 20:04:46.706263 21 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0722 20:04:46.713236 21 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0722 20:04:46.713272 21 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0722 20:04:46.718093 21 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0722 20:04:46.718155 21 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0722 20:04:46.718643 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5629" for this suite. @ 07/22/25 20:04:46.723
• [0.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/22/25 20:04:46.735
  I0722 20:04:46.735589 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename daemonsets @ 07/22/25 20:04:46.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:46.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:46.752
  I0722 20:04:46.835736 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/22/25 20:04:46.84
  I0722 20:04:46.929035 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:46.929245 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:46.935423 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 20:04:46.935458 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  E0722 20:04:47.138894      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:47.846705 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:47.846738 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:47.850614 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 20:04:47.850633 21 fixtures.go:131] Node ip-172-31-31-147 is running 0 daemon pod, expected 1
  E0722 20:04:48.138987      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:48.847258 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:48.847290 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:48.851756 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 20:04:48.851782 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/22/25 20:04:48.863
  STEP: Check that daemon pods images are updated. @ 07/22/25 20:04:48.947
  I0722 20:04:48.951654 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7q82b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0722 20:04:48.951684 21 daemon_set.go:1193] Wrong image for pod: daemon-set-qfw4t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0722 20:04:48.954804 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:48.954833 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0722 20:04:49.140025      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:49.952693 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7q82b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0722 20:04:49.957171 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:49.957204 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0722 20:04:50.140505      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:50.953076 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7q82b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0722 20:04:50.953108 21 daemon_set.go:1198] Pod daemon-set-khwpw is not available
  I0722 20:04:50.956607 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:50.956635 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0722 20:04:51.140876      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:51.952502 21 daemon_set.go:1198] Pod daemon-set-gj9kj is not available
  I0722 20:04:51.956721 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:51.957480 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/22/25 20:04:51.957
  I0722 20:04:51.961952 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:51.961976 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:52.052920 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0722 20:04:52.052957 21 fixtures.go:131] Node ip-172-31-7-234 is running 0 daemon pod, expected 1
  E0722 20:04:52.141294      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:52.962578 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-11-165 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:52.962618 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-29-40 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0722 20:04:52.966062 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0722 20:04:52.966083 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/22/25 20:04:52.985
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5553, will wait for the garbage collector to delete the pods @ 07/22/25 20:04:52.985
  I0722 20:04:53.045958 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.429345ms
  E0722 20:04:53.141692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:53.146761 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.802288ms
  E0722 20:04:54.142528      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:04:54.650200 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0722 20:04:54.650233 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0722 20:04:54.653651 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44260"},"items":null}

  I0722 20:04:54.656925 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44260"},"items":null}

  I0722 20:04:54.669779 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5553" for this suite. @ 07/22/25 20:04:54.673
• [7.946 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/22/25 20:04:54.685
  I0722 20:04:54.685291 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename container-runtime @ 07/22/25 20:04:54.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:54.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:54.702
  STEP: create the container @ 07/22/25 20:04:54.704
  W0722 20:04:54.712538      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/22/25 20:04:54.712
  E0722 20:04:55.143423      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:56.144148      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:57.145079      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/22/25 20:04:57.729
  STEP: the container should be terminated @ 07/22/25 20:04:57.732
  STEP: the termination message should be set @ 07/22/25 20:04:57.732
  I0722 20:04:57.732219 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/22/25 20:04:57.732
  I0722 20:04:57.750279 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1699" for this suite. @ 07/22/25 20:04:57.754
• [3.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/22/25 20:04:57.766
  I0722 20:04:57.767098 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename gc @ 07/22/25 20:04:57.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:04:57.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:04:57.784
  I0722 20:04:57.815073 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"f6a7719c-490a-420a-9704-f207f01e0733", Controller:(*bool)(0xc0057f9306), BlockOwnerDeletion:(*bool)(0xc0057f9307)}}
  I0722 20:04:57.821513 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b8617b05-dfaa-4a64-aa56-1d8583c09c5d", Controller:(*bool)(0xc0057f953e), BlockOwnerDeletion:(*bool)(0xc0057f953f)}}
  I0722 20:04:57.830739 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f095895d-561c-431b-8546-5a955ee28dba", Controller:(*bool)(0xc0057f974a), BlockOwnerDeletion:(*bool)(0xc0057f974b)}}
  E0722 20:04:58.145772      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:04:59.146406      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:00.146645      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:01.146720      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:02.147084      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:02.845287 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9949" for this suite. @ 07/22/25 20:05:02.849
• [5.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/22/25 20:05:02.856
  I0722 20:05:02.856065 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 20:05:02.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:02.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:02.871
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:05:02.873
  E0722 20:05:03.147668      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:04.148209      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:05.148973      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:06.149394      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:05:06.894
  I0722 20:05:06.896689 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-77fd582f-3101-4a34-9859-8fd12b6af4bb container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:05:06.904
  I0722 20:05:06.922504 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3961" for this suite. @ 07/22/25 20:05:06.926
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/22/25 20:05:06.934
  I0722 20:05:06.934298 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 20:05:06.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:06.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:06.95
  STEP: creating the pod @ 07/22/25 20:05:06.952
  STEP: waiting for pod running @ 07/22/25 20:05:06.961
  E0722 20:05:07.149920      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:08.150485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/22/25 20:05:08.971
  I0722 20:05:08.975573 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9132 PodName:var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:05:08.975599 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:05:08.975641 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9132/pods/var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/22/25 20:05:09.016
  I0722 20:05:09.021578 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9132 PodName:var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:05:09.021601 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:05:09.021645 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9132/pods/var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/22/25 20:05:09.049
  E0722 20:05:09.151422      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:09.562822 21 pod_client.go:173] Successfully updated pod "var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84"
  STEP: waiting for annotated pod running @ 07/22/25 20:05:09.562
  STEP: deleting the pod gracefully @ 07/22/25 20:05:09.566
  I0722 20:05:09.566456 21 delete.go:62] Deleting pod "var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84" in namespace "var-expansion-9132"
  I0722 20:05:09.575521 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-fa80e9a5-113e-4e63-9007-fc7223a69e84" to be fully deleted
  E0722 20:05:10.152291      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:11.153173      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:12.153371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:13.154002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:14.154376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:15.154496      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:16.155308      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:17.156101      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:18.156212      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:19.156424      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:20.156549      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:21.156777      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:22.157188      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:23.157301      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:24.158040      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:25.158519      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:26.159249      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:27.159430      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:28.160247      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:29.160368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:30.160624      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:31.161264      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:32.161979      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:33.162213      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:34.162724      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:35.163665      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:36.164194      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:37.164339      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:38.164538      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:39.164733      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:40.165545      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:41.165666      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:41.658168 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9132" for this suite. @ 07/22/25 20:05:41.662
• [34.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 07/22/25 20:05:41.669
  I0722 20:05:41.669086 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 20:05:41.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:41.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:41.685
  STEP: creating service in namespace services-7348 @ 07/22/25 20:05:41.687
  STEP: creating service affinity-nodeport in namespace services-7348 @ 07/22/25 20:05:41.687
  STEP: creating replication controller affinity-nodeport in namespace services-7348 @ 07/22/25 20:05:41.702
  I0722 20:05:41.713486      21 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7348, replica count: 3
  E0722 20:05:42.168964      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:43.167727      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:44.167805      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:44.765175      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0722 20:05:44.776368 21 resource.go:361] Creating new exec pod
  E0722 20:05:45.168079      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:46.168229      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:47.169151      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:47.795890 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7348 exec execpod-affinity8cgb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0722 20:05:47.880042 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.192) 80 port [tcp/http] succeeded!\n"
  I0722 20:05:47.880101 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:05:47.880177 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7348 exec execpod-affinity8cgb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.192 80'
  I0722 20:05:47.959902 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.192 80\nConnection to 10.152.183.192 80 port [tcp/http] succeeded!\n"
  I0722 20:05:47.959942 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:05:47.960027 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7348 exec execpod-affinity8cgb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.73 32408'
  I0722 20:05:48.039487 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.68.73 32408\n+ echo hostName\nConnection to 172.31.68.73 32408 port [tcp/*] succeeded!\n"
  I0722 20:05:48.039537 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:05:48.039615 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7348 exec execpod-affinity8cgb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.147 32408'
  I0722 20:05:48.117216 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.147 32408\nConnection to 172.31.31.147 32408 port [tcp/*] succeeded!\n"
  I0722 20:05:48.117257 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:05:48.117318 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-7348 exec execpod-affinity8cgb6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.147:32408/ ; done'
  E0722 20:05:48.169652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:48.248177 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.147:32408/\n"
  I0722 20:05:48.248233 21 builder.go:147] stdout: "\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25\naffinity-nodeport-dnm25"
  I0722 20:05:48.248245 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248253 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248260 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248267 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248273 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248281 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248290 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248295 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248301 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248307 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248313 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248325 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248412 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248420 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248430 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248436 21 service.go:242] Received response from host: affinity-nodeport-dnm25
  I0722 20:05:48.248526 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7348, will wait for the garbage collector to delete the pods @ 07/22/25 20:05:48.264
  I0722 20:05:48.326445 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 7.518858ms
  I0722 20:05:48.427563 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.113961ms
  E0722 20:05:49.170241      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:50.170568      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:51.170966      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:51.448601 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7348" for this suite. @ 07/22/25 20:05:51.452
• [9.791 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/22/25 20:05:51.46
  I0722 20:05:51.460212 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename watch @ 07/22/25 20:05:51.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:51.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:51.475
  STEP: creating a new configmap @ 07/22/25 20:05:51.48
  STEP: modifying the configmap once @ 07/22/25 20:05:51.485
  STEP: modifying the configmap a second time @ 07/22/25 20:05:51.492
  STEP: deleting the configmap @ 07/22/25 20:05:51.5
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/22/25 20:05:51.505
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/22/25 20:05:51.506
  I0722 20:05:51.506619 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4527  8e686292-224b-422a-9d89-ddb26917c32d 44693 0 2025-07-22 20:05:51 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-22 20:05:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:05:51.506723 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4527  8e686292-224b-422a-9d89-ddb26917c32d 44694 0 2025-07-22 20:05:51 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-22 20:05:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:05:51.506816 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4527" for this suite. @ 07/22/25 20:05:51.555
• [0.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/22/25 20:05:51.563
  I0722 20:05:51.563349 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 20:05:51.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:51.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:51.579
  STEP: Creating secret with name secret-test-8857c215-9c94-4aa2-b283-298a8a080285 @ 07/22/25 20:05:51.581
  STEP: Creating a pod to test consume secrets @ 07/22/25 20:05:51.587
  E0722 20:05:52.171104      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:53.171268      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:05:53.603
  I0722 20:05:53.606992 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-secrets-23566100-978e-40fc-8d3b-fa634611bb5e container secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 20:05:53.62
  I0722 20:05:53.639345 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1897" for this suite. @ 07/22/25 20:05:53.642
• [2.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/22/25 20:05:53.651
  I0722 20:05:53.651124 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 20:05:53.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:53.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:53.664
  STEP: creating a secret @ 07/22/25 20:05:53.666
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/22/25 20:05:53.672
  STEP: patching the secret @ 07/22/25 20:05:53.674
  STEP: deleting the secret using a LabelSelector @ 07/22/25 20:05:53.682
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/22/25 20:05:53.696
  I0722 20:05:53.700607 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8009" for this suite. @ 07/22/25 20:05:53.744
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/22/25 20:05:53.752
  I0722 20:05:53.752740 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename tables @ 07/22/25 20:05:53.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:53.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:53.765
  I0722 20:05:53.768889 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2866" for this suite. @ 07/22/25 20:05:53.844
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/22/25 20:05:53.854
  I0722 20:05:53.854458 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 20:05:53.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:53.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:53.868
  I0722 20:05:53.878494 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0722 20:05:54.172104      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:55.172528      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:56.172676      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:57.172759      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:05:58.172849      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:05:58.882920 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 20:05:58.882
  I0722 20:05:58.882993 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/22/25 20:05:58.89
  I0722 20:05:58.902459 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1aa78fb8-02c4-49ce-9883-d0b51e821d6f",
      ResourceVersion: (string) (len=5) "44813",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888811558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 20:05:58.906496 21 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9931dd5f-5d9a-4fd3-9d79-82ff17fe3835",
      ResourceVersion: (string) (len=5) "44815",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888811558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1aa78fb8-02c4-49ce-9883-d0b51e821d6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 61 61 37 38 66  62 38 2d 30 32 63 34 2d  |\"1aa78fb8-02c4-|
              00000120  34 39 63 65 2d 39 38 38  33 2d 64 30 62 35 31 65  |49ce-9883-d0b51e|
              00000130  38 32 31 64 36 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |821d6f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 20:05:58.906989 21 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0722 20:05:58.907267 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e9f1d38-3f9b-4365-a8d7-4ea3b9c5920c",
      ResourceVersion: (string) (len=5) "44814",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888811553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1aa78fb8-02c4-49ce-9883-d0b51e821d6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 61 61 37 38 66 62  |"uid\":\"1aa78fb|
              00000040  38 2d 30 32 63 34 2d 34  39 63 65 2d 39 38 38 33  |8-02c4-49ce-9883|
              00000050  2d 64 30 62 35 31 65 38  32 31 64 36 66 5c 22 7d  |-d0b51e821d6f\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 20:05:58.917506 21 deployment.go:68] Pod "test-cleanup-controller-x7sqs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-x7sqs",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80e355a8-1011-499c-af44-6e7db8cc4641",
      ResourceVersion: (string) (len=5) "44760",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888811553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "6e9f1d38-3f9b-4365-a8d7-4ea3b9c5920c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 65 39 66 31 64 33 38  |uid\":\"6e9f1d38|
              00000080  2d 33 66 39 62 2d 34 33  36 35 2d 61 38 64 37 2d  |-3f9b-4365-a8d7-|
              00000090  34 65 61 33 62 39 63 35  39 32 30 63 5c 22 7d 22  |4ea3b9c5920c\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 31 33 39 5c 22 7d  |2.168.183.139\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5dvz7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5dvz7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.147"
        }
      },
      PodIP: (string) (len=15) "192.168.183.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888811553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888811554,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://59d9992043b4f12243bf58af47c60a496ef1fdd43599fd88adf669c977523313",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5dvz7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 20:05:58.918734 21 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-dlt5x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-dlt5x",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-6216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e2de22e-9829-4dc5-9701-a740667b3030",
      ResourceVersion: (string) (len=5) "44818",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888811558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "9931dd5f-5d9a-4fd3-9d79-82ff17fe3835",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888811558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  33 31 64 64 35 66 2d 35  |d\":\"9931dd5f-5|
              00000090  64 39 61 2d 34 66 64 33  2d 39 64 37 39 2d 38 32  |d9a-4fd3-9d79-82|
              000000a0  66 66 31 37 66 65 33 38  33 35 5c 22 7d 22 3a 7b  |ff17fe3835\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srjcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srjcl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 20:05:58.919400 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6216" for this suite. @ 07/22/25 20:05:58.925
• [5.082 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/22/25 20:05:58.937
  I0722 20:05:58.937022 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:05:58.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:05:58.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:05:58.95
  STEP: Creating configMap with name projected-configmap-test-volume-4d49e14b-a204-498d-b546-6361c668303a @ 07/22/25 20:05:58.952
  STEP: Creating a pod to test consume configMaps @ 07/22/25 20:05:58.957
  E0722 20:05:59.173731      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:00.174477      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:06:01.075
  I0722 20:06:01.080100 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-projected-configmaps-14981efd-b7a7-4aae-90fd-b7e660937698 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 20:06:01.092
  I0722 20:06:01.111452 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5438" for this suite. @ 07/22/25 20:06:01.115
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/22/25 20:06:01.121
  I0722 20:06:01.121719 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename webhook @ 07/22/25 20:06:01.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:06:01.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:06:01.135
  STEP: Setting up server cert @ 07/22/25 20:06:01.152
  E0722 20:06:01.175474      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/22/25 20:06:01.347
  STEP: Deploying the webhook pod @ 07/22/25 20:06:01.355
  STEP: Wait for the deployment to be ready @ 07/22/25 20:06:01.367
  I0722 20:06:01.375840 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0722 20:06:02.175641      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:03.175739      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 20:06:03.387
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 20:06:03.398
  E0722 20:06:04.176450      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:06:04.399651 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/22/25 20:06:04.406
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 20:06:04.406
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/22/25 20:06:04.421
  E0722 20:06:05.177487      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/22/25 20:06:05.431
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 20:06:05.431
  E0722 20:06:06.177577      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/22/25 20:06:06.461
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 20:06:06.461
  E0722 20:06:07.177880      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:08.177981      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:09.178256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:10.178453      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:11.178514      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/22/25 20:06:11.493
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/22/25 20:06:11.493
  E0722 20:06:12.179285      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:13.179356      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:14.179479      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:15.179546      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:16.180066      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:06:16.576210 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7768" for this suite. @ 07/22/25 20:06:16.579
  STEP: Destroying namespace "webhook-markers-5881" for this suite. @ 07/22/25 20:06:16.586
• [15.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/22/25 20:06:16.593
  I0722 20:06:16.593699 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename init-container @ 07/22/25 20:06:16.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:06:16.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:06:16.608
  STEP: creating the pod @ 07/22/25 20:06:16.609
  I0722 20:06:16.609748 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0722 20:06:17.180194      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:18.180316      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:19.180393      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:20.181434      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:06:20.525016 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8414" for this suite. @ 07/22/25 20:06:20.529
• [3.941 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/22/25 20:06:20.535
  I0722 20:06:20.535096 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 20:06:20.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:06:20.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:06:20.55
  STEP: Creating a pod to test substitution in container's command @ 07/22/25 20:06:20.552
  E0722 20:06:21.181882      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:22.182381      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:06:22.57
  I0722 20:06:22.573648 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod var-expansion-d14e0682-042c-4525-bc14-974b4305e108 container dapi-container: <nil>
  STEP: delete the pod @ 07/22/25 20:06:22.581
  I0722 20:06:22.601795 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9695" for this suite. @ 07/22/25 20:06:22.605
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 07/22/25 20:06:22.613
  I0722 20:06:22.613721 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 20:06:22.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:06:22.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:06:22.628
  STEP: Creating a ResourceQuota with best effort scope @ 07/22/25 20:06:22.631
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 20:06:22.634
  E0722 20:06:23.182514      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:24.182590      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/22/25 20:06:24.64
  STEP: Ensuring ResourceQuota status is calculated @ 07/22/25 20:06:24.645
  E0722 20:06:25.183676      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:26.184382      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/22/25 20:06:26.649
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/22/25 20:06:26.664
  E0722 20:06:27.185002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:28.185286      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/22/25 20:06:28.669
  E0722 20:06:29.186034      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:30.186113      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/22/25 20:06:30.673
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 20:06:30.69
  E0722 20:06:31.186359      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:32.186419      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/22/25 20:06:32.696
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/22/25 20:06:32.707
  E0722 20:06:33.187429      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:34.187498      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/22/25 20:06:34.711
  E0722 20:06:35.188405      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:36.188506      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/22/25 20:06:36.716
  STEP: Ensuring resource quota status released the pod usage @ 07/22/25 20:06:36.727
  E0722 20:06:37.188594      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:38.189279      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:06:38.732844 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-103" for this suite. @ 07/22/25 20:06:38.737
• [16.129 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/22/25 20:06:38.742
  I0722 20:06:38.742730 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename watch @ 07/22/25 20:06:38.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:06:38.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:06:38.757
  STEP: creating a watch on configmaps with label A @ 07/22/25 20:06:38.759
  STEP: creating a watch on configmaps with label B @ 07/22/25 20:06:38.763
  STEP: creating a watch on configmaps with label A or B @ 07/22/25 20:06:38.864
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/22/25 20:06:38.867
  I0722 20:06:38.871837 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45187 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:06:38.871984 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45187 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/22/25 20:06:38.872
  I0722 20:06:38.881923 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45188 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:06:38.881996 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45188 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/22/25 20:06:38.882
  I0722 20:06:38.891524 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45189 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:06:38.891727 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45189 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/22/25 20:06:38.891
  I0722 20:06:38.897129 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45190 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:06:38.897163 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1464  2f175a8a-12fb-4c36-9e21-7f00404bf4b3 45190 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/22/25 20:06:38.897
  I0722 20:06:38.903415 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1464  8d6d0604-841c-45be-b425-965a2640a0aa 45191 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:06:38.903478 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1464  8d6d0604-841c-45be-b425-965a2640a0aa 45191 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0722 20:06:39.189792      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:40.190593      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:41.190691      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:42.190799      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:43.190965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:44.191182      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:45.191587      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:46.192255      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:47.192441      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:48.192632      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/22/25 20:06:48.904
  I0722 20:06:48.912945 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1464  8d6d0604-841c-45be-b425-965a2640a0aa 45223 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0722 20:06:48.913008 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1464  8d6d0604-841c-45be-b425-965a2640a0aa 45223 0 2025-07-22 20:06:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-22 20:06:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0722 20:06:49.193368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:50.193446      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:51.193582      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:52.194456      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:53.195371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:54.195600      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:55.196556      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:56.196643      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:57.197592      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:06:58.197876      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:06:58.913333 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1464" for this suite. @ 07/22/25 20:06:58.919
• [20.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/22/25 20:06:58.927
  I0722 20:06:58.927242 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/22/25 20:06:58.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:06:58.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:06:58.944
  STEP: creating a target pod @ 07/22/25 20:06:58.946
  E0722 20:06:59.198666      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:00.199694      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/22/25 20:07:00.963
  E0722 20:07:01.200270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:02.201236      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/22/25 20:07:02.979
  I0722 20:07:02.979335 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6564 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:07:02.979350 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:07:02.979389 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6564/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0722 20:07:03.011563 21 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/22/25 20:07:03.017
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/22/25 20:07:03.021
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/22/25 20:07:03.032
  I0722 20:07:03.036193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6564" for this suite. @ 07/22/25 20:07:03.039
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/22/25 20:07:03.046
  I0722 20:07:03.046526 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pv @ 07/22/25 20:07:03.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:03.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:03.062
  STEP: Creating initial PV and PVC @ 07/22/25 20:07:03.064
  I0722 20:07:03.064445 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9563" @ 07/22/25 20:07:03.082
  STEP: Listing PVCs in namespace "pv-9563" @ 07/22/25 20:07:03.085
  STEP: Reading "pvc-lpdwq" Status @ 07/22/25 20:07:03.09
  STEP: Reading "pv-9563-ztmlk" Status @ 07/22/25 20:07:03.094
  STEP: Patching "pvc-lpdwq" Status @ 07/22/25 20:07:03.097
  STEP: Patching "pv-9563-ztmlk" Status @ 07/22/25 20:07:03.101
  STEP: Updating "pvc-lpdwq" Status @ 07/22/25 20:07:03.108
  STEP: Updating "pv-9563-ztmlk" Status @ 07/22/25 20:07:03.115
  I0722 20:07:03.149289 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0722 20:07:03.149322 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-lpdwq"
  I0722 20:07:03.154804 21 pv.go:193] Deleting PersistentVolume "pv-9563-ztmlk"
  I0722 20:07:03.161473 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9563" for this suite. @ 07/22/25 20:07:03.165
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 07/22/25 20:07:03.172
  I0722 20:07:03.172818 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 20:07:03.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:03.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:03.187
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1097.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-1097.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/22/25 20:07:03.188
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1097.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1097.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/22/25 20:07:03.188
  STEP: creating a pod to probe /etc/hosts @ 07/22/25 20:07:03.188
  STEP: submitting the pod to kubernetes @ 07/22/25 20:07:03.188
  E0722 20:07:03.201905      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:04.202104      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:05.202746      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 20:07:05.209
  STEP: looking for the results for each expected name from probers @ 07/22/25 20:07:05.212
  I0722 20:07:05.230859 21 dns_common.go:546] DNS probes using dns-1097/dns-test-652ec111-eec6-4ae4-ab89-2af8a79d50e8 succeeded

  STEP: deleting the pod @ 07/22/25 20:07:05.23
  I0722 20:07:05.245437 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1097" for this suite. @ 07/22/25 20:07:05.248
• [2.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/22/25 20:07:05.255
  I0722 20:07:05.255504 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:07:05.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:05.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:05.268
  STEP: Creating projection with secret that has name projected-secret-test-3bf49798-d299-47ef-a4bb-c431bd6d263f @ 07/22/25 20:07:05.27
  STEP: Creating a pod to test consume secrets @ 07/22/25 20:07:05.276
  E0722 20:07:06.202841      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:07.203038      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:08.203251      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:09.203344      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:07:09.301
  I0722 20:07:09.304607 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-projected-secrets-c112b4fe-fad5-428e-b4f2-6320bf91cfbb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/22/25 20:07:09.311
  I0722 20:07:09.329157 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9587" for this suite. @ 07/22/25 20:07:09.334
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/22/25 20:07:09.34
  I0722 20:07:09.340728 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename disruption @ 07/22/25 20:07:09.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:09.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:09.356
  STEP: creating the pdb @ 07/22/25 20:07:09.358
  STEP: Waiting for the pdb to be processed @ 07/22/25 20:07:09.363
  E0722 20:07:10.203745      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:11.203845      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/22/25 20:07:11.368
  STEP: Waiting for the pdb to be processed @ 07/22/25 20:07:11.376
  E0722 20:07:12.204002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:13.204307      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 07/22/25 20:07:13.382
  STEP: Waiting for the pdb to be processed @ 07/22/25 20:07:13.392
  STEP: Waiting for the pdb to be deleted @ 07/22/25 20:07:13.402
  I0722 20:07:13.408888 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2564" for this suite. @ 07/22/25 20:07:13.412
• [4.080 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/22/25 20:07:13.42
  I0722 20:07:13.420991 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename field-validation @ 07/22/25 20:07:13.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:13.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:13.434
  STEP: apply creating a deployment @ 07/22/25 20:07:13.44
  I0722 20:07:13.450603 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8163" for this suite. @ 07/22/25 20:07:13.513
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/22/25 20:07:13.52
  I0722 20:07:13.520478 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:07:13.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:13.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:13.535
  STEP: Creating the pod @ 07/22/25 20:07:13.536
  E0722 20:07:14.204401      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:15.204595      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:07:16.079611 21 pod_client.go:173] Successfully updated pod "labelsupdateeced7d54-b157-485f-a6bb-e9b9509c095a"
  E0722 20:07:16.205525      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:17.205428      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:07:18.097905 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2345" for this suite. @ 07/22/25 20:07:18.102
• [4.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/22/25 20:07:18.108
  I0722 20:07:18.108961 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 20:07:18.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:18.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:18.126
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/22/25 20:07:18.128
  E0722 20:07:18.205677      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:19.205809      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:20.206204      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:21.206288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:07:22.149
  I0722 20:07:22.153739 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-2ad5f2a7-f5b5-4bb1-a17a-40dde42b0b13 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 20:07:22.159
  I0722 20:07:22.178487 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6585" for this suite. @ 07/22/25 20:07:22.182
• [4.081 seconds]
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/22/25 20:07:22.189
  I0722 20:07:22.189783 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename hostport @ 07/22/25 20:07:22.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:22.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:22.205
  E0722 20:07:22.206241      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/22/25 20:07:22.283
  E0722 20:07:23.206864      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:24.207031      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.31.147 on the node which pod1 resides and expect scheduled @ 07/22/25 20:07:24.3
  E0722 20:07:25.207588      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:26.208273      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.31.147 but use UDP protocol on the node which pod2 resides @ 07/22/25 20:07:26.314
  E0722 20:07:27.208365      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:28.208439      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:29.209208      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:30.210250      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:31.210609      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:32.210732      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:33.211212      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:34.211317      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:35.211884      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:36.211945      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:37.212082      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:38.212316      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:39.212527      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:40.212612      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/22/25 20:07:40.366
  I0722 20:07:40.367022 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.31.147 http://127.0.0.1:54323/hostname] Namespace:hostport-5492 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:07:40.367036 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:07:40.367083 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5492/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.31.147+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.31.147, port: 54323 @ 07/22/25 20:07:40.407
  I0722 20:07:40.407339 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.31.147:54323/hostname] Namespace:hostport-5492 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:07:40.407355 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:07:40.407404 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5492/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.31.147%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.31.147, port: 54323 UDP @ 07/22/25 20:07:40.449
  I0722 20:07:40.449275 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.31.147 54323] Namespace:hostport-5492 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:07:40.449296 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:07:40.449343 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5492/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.31.147+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0722 20:07:41.212713      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:42.212940      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:43.213116      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:44.213187      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:45.213404      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:07:45.499004 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5492" for this suite. @ 07/22/25 20:07:45.503
• [23.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 07/22/25 20:07:45.511
  I0722 20:07:45.511412 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 20:07:45.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:07:45.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:07:45.528
  STEP: Creating service test in namespace statefulset-703 @ 07/22/25 20:07:45.529
  I0722 20:07:45.545225 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0722 20:07:46.214014      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:47.214258      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:48.214349      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:49.214425      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:50.214548      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:51.214730      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:52.214999      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:53.215233      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:54.215333      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:55.215446      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:07:55.546614 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/22/25 20:07:55.552
  I0722 20:07:55.572092 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 20:07:55.572119 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0722 20:07:56.215553      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:57.215673      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:58.215780      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:07:59.215939      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:00.216538      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:01.216621      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:02.216752      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:03.216835      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:04.216945      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:05.217023      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:08:05.567021 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 20:08:05.567063 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/22/25 20:08:05.574
  STEP: Delete all of the StatefulSets @ 07/22/25 20:08:05.577
  STEP: Verify that StatefulSets have been deleted @ 07/22/25 20:08:05.586
  I0722 20:08:05.589191 21 statefulset.go:138] Deleting all statefulset in ns statefulset-703
  I0722 20:08:05.598193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-703" for this suite. @ 07/22/25 20:08:05.606
• [20.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/22/25 20:08:05.615
  I0722 20:08:05.615453 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 20:08:05.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:08:05.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:08:05.633
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:08:05.636
  E0722 20:08:06.217248      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:07.217325      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:08.217443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:09.217534      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:08:09.658
  I0722 20:08:09.662225 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-46592029-8195-4b16-ac71-3c95044f0305 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:08:09.669
  I0722 20:08:09.687732 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-724" for this suite. @ 07/22/25 20:08:09.691
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/22/25 20:08:09.7
  I0722 20:08:09.700342 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:08:09.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:08:09.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:08:09.714
  STEP: Creating configMap with name cm-test-opt-del-ef97f9e6-38d7-45f7-bfc8-d317b9d2a681 @ 07/22/25 20:08:09.792
  STEP: Creating configMap with name cm-test-opt-upd-4bae0482-4ad3-4dfa-b04c-90b0e39677f4 @ 07/22/25 20:08:09.797
  STEP: Creating the pod @ 07/22/25 20:08:09.803
  E0722 20:08:10.218592      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:11.218699      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-ef97f9e6-38d7-45f7-bfc8-d317b9d2a681 @ 07/22/25 20:08:11.845
  STEP: Updating configmap cm-test-opt-upd-4bae0482-4ad3-4dfa-b04c-90b0e39677f4 @ 07/22/25 20:08:11.851
  STEP: Creating configMap with name cm-test-opt-create-4c856852-37b3-4243-933e-1062512a5542 @ 07/22/25 20:08:11.857
  STEP: waiting to observe update in volume @ 07/22/25 20:08:11.861
  E0722 20:08:12.219259      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:13.219383      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:14.220178      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:15.220523      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:16.221160      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:17.221414      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:18.221476      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:19.221705      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:20.222286      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:21.222428      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:22.222543      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:23.222629      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:24.222695      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:25.223675      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:26.224519      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:27.224642      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:28.225652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:29.225751      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:30.226025      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:31.226181      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:32.227215      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:33.227270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:34.228349      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:35.228421      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:36.229472      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:37.229592      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:38.230263      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:39.230421      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:40.230829      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:41.231039      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:42.231607      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:43.231811      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:44.231877      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:45.232532      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:46.233483      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:47.234347      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:48.234470      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:49.234541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:50.235583      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:51.236273      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:52.236678      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:53.237328      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:54.238192      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:55.238551      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:56.239270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:57.239350      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:58.239611      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:08:59.240458      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:00.241156      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:01.241349      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:02.241597      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:03.241787      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:04.242171      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:05.242596      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:06.242720      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:07.242957      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:08.243010      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:09.243220      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:10.243902      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:11.244017      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:12.244950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:13.245097      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:14.245209      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:15.245723      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:16.246138      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:17.246317      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:18.246989      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:19.247100      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:20.247833      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:21.247922      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:22.248349      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:23.248454      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:24.249243      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:25.249346      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:26.249786      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:27.249882      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:28.250165      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:29.250263      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:30.251173      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:31.251407      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:32.252008      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:33.252217      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:34.252565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:35.252647      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:36.252797      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:37.253385      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:38.253958      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:39.254377      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:40.254415      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:09:40.254474 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5564" for this suite. @ 07/22/25 20:09:40.259
• [90.567 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/22/25 20:09:40.267
  I0722 20:09:40.267242 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename projected @ 07/22/25 20:09:40.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:09:40.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:09:40.281
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:09:40.283
  E0722 20:09:41.254700      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:42.254923      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:09:42.409
  I0722 20:09:42.412568 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod downwardapi-volume-fb987f0c-2e54-4af0-a3d8-a49fe8b94870 container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:09:42.42
  I0722 20:09:42.438957 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5024" for this suite. @ 07/22/25 20:09:42.442
• [2.182 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/22/25 20:09:42.449
  I0722 20:09:42.449477 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename subpath @ 07/22/25 20:09:42.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:09:42.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:09:42.466
  STEP: Setting up data @ 07/22/25 20:09:42.467
  STEP: Creating pod pod-subpath-test-secret-knqn @ 07/22/25 20:09:42.476
  STEP: Creating a pod to test atomic-volume-subpath @ 07/22/25 20:09:42.477
  E0722 20:09:43.255917      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:44.256153      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:45.256677      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:46.256756      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:47.257525      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:48.257613      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:49.258199      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:50.258619      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:51.259022      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:52.259189      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:53.259302      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:54.259374      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:55.259496      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:56.259578      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:57.260276      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:58.260410      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:09:59.260668      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:00.261622      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:01.261762      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:02.261889      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:03.262095      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:04.262266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:05.262899      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:06.263115      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:10:06.545
  I0722 20:10:06.548767 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod pod-subpath-test-secret-knqn container test-container-subpath-secret-knqn: <nil>
  STEP: delete the pod @ 07/22/25 20:10:06.554
  STEP: Deleting pod pod-subpath-test-secret-knqn @ 07/22/25 20:10:06.57
  I0722 20:10:06.570926 21 delete.go:62] Deleting pod "pod-subpath-test-secret-knqn" in namespace "subpath-3667"
  I0722 20:10:06.574271 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3667" for this suite. @ 07/22/25 20:10:06.578
• [24.136 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/22/25 20:10:06.586
  I0722 20:10:06.586011 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 20:10:06.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:10:06.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:10:06.601
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/22/25 20:10:06.603
  E0722 20:10:07.263338      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:08.263541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:09.263644      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:10.263794      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:10:10.626
  I0722 20:10:10.629653 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-fabfb936-fe0f-4998-8f63-c6318fe54398 container test-container: <nil>
  STEP: delete the pod @ 07/22/25 20:10:10.637
  I0722 20:10:10.655914 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7291" for this suite. @ 07/22/25 20:10:10.659
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/22/25 20:10:10.665
  I0722 20:10:10.665952 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename endpointslice @ 07/22/25 20:10:10.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:10:10.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:10:10.682
  STEP: getting /apis @ 07/22/25 20:10:10.683
  STEP: getting /apis/discovery.k8s.io @ 07/22/25 20:10:10.685
  STEP: getting /apis/discovery.k8s.iov1 @ 07/22/25 20:10:10.685
  STEP: creating @ 07/22/25 20:10:10.686
  STEP: getting @ 07/22/25 20:10:10.7
  STEP: listing @ 07/22/25 20:10:10.702
  STEP: watching @ 07/22/25 20:10:10.705
  I0722 20:10:10.705079 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/22/25 20:10:10.705
  STEP: cluster-wide watching @ 07/22/25 20:10:10.709
  I0722 20:10:10.709193 21 endpointslice.go:459] starting watch
  STEP: patching @ 07/22/25 20:10:10.709
  STEP: updating @ 07/22/25 20:10:10.715
  I0722 20:10:10.724514 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0722 20:10:10.724545 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/22/25 20:10:10.724
  STEP: deleting a collection @ 07/22/25 20:10:10.735
  I0722 20:10:10.751007 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4530" for this suite. @ 07/22/25 20:10:10.76
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/22/25 20:10:10.766
  I0722 20:10:10.766938 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename var-expansion @ 07/22/25 20:10:10.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:10:10.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:10:10.782
  STEP: creating the pod with failed condition @ 07/22/25 20:10:10.783
  E0722 20:10:11.264587      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:12.264822      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:13.264847      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:14.265089      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:15.265282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:16.265376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:17.266295      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:18.266438      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:19.267366      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:20.267424      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:21.268066      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:22.268216      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:23.269059      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:24.269233      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:25.269299      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:26.269443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:27.270437      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:28.270357      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:29.271287      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:30.271370      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:31.271493      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:32.271587      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:33.271664      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:34.271734      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:35.272434      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:36.272504      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:37.273272      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:38.273343      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:39.273470      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:40.273643      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:41.274258      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:42.274406      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:43.275281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:44.275393      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:45.275550      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:46.275663      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:47.275783      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:48.276500      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:49.277031      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:50.277146      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:51.277745      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:52.277814      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:53.278300      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:54.279270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:55.279656      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:56.279735      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:57.279951      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:58.280284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:10:59.280192      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:00.280492      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:01.280588      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:02.281339      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:03.282100      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:04.282199      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:05.282643      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:06.282832      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:07.283881      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:08.284088      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:09.284845      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:10.285669      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:11.286240      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:12.286485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:13.286557      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:14.286719      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:15.287633      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:16.287718      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:17.288249      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:18.289245      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:19.290174      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:20.290674      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:21.290829      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:22.291009      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:23.291856      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:24.292065      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:25.292240      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:26.292454      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:27.293168      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:28.293351      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:29.293868      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:30.294703      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:31.295161      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:32.295261      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:33.295320      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:34.295495      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:35.295762      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:36.295947      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:37.296636      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:38.296732      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:39.297408      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:40.297500      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:41.297890      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:42.297984      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:43.298631      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:44.299357      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:45.300256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:46.301258      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:47.301563      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:48.302247      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:49.303202      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:50.303456      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:51.303996      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:52.304223      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:53.304517      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:54.304709      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:55.305739      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:56.305900      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:57.305952      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:58.306152      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:11:59.307084      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:00.308035      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:01.308895      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:02.309244      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:03.309903      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:04.310072      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:05.310224      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:06.310448      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:07.311174      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:08.311390      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:09.312249      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:10.312457      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/22/25 20:12:10.796
  I0722 20:12:11.310278 21 pod_client.go:173] Successfully updated pod "var-expansion-a7c8781d-fe01-4a51-9d77-de050377526f"
  STEP: waiting for pod running @ 07/22/25 20:12:11.31
  E0722 20:12:11.312636      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:12.312816      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:13.312910      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/22/25 20:12:13.317
  I0722 20:12:13.317439 21 delete.go:62] Deleting pod "var-expansion-a7c8781d-fe01-4a51-9d77-de050377526f" in namespace "var-expansion-6676"
  I0722 20:12:13.325699 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-a7c8781d-fe01-4a51-9d77-de050377526f" to be fully deleted
  E0722 20:12:14.313031      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:15.313702      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:16.314210      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:17.315297      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:18.315404      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:19.315460      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:20.315683      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:21.315767      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:22.316245      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:23.316457      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:24.317204      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:25.317868      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:26.317943      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:27.318059      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:28.318217      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:29.318280      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:30.319266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:31.319333      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:32.320268      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:33.320361      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:34.321211      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:35.322277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:36.322921      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:37.323021      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:38.323231      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:39.323313      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:40.323694      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:41.323752      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:42.323865      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:43.323942      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:44.324225      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:45.324500      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:12:45.413505 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6676" for this suite. @ 07/22/25 20:12:45.417
• [154.657 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/22/25 20:12:45.424
  I0722 20:12:45.424302 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 20:12:45.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:12:45.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:12:45.439
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:12:45.441
  E0722 20:12:46.324599      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:47.324674      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:48.324773      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:49.324873      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:12:49.467
  I0722 20:12:49.471249 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-7dff4a8d-39ca-4034-a116-d8c4dc90c81a container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:12:49.486
  I0722 20:12:49.504518 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1894" for this suite. @ 07/22/25 20:12:49.507
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/22/25 20:12:49.513
  I0722 20:12:49.513328 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename replication-controller @ 07/22/25 20:12:49.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:12:49.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:12:49.53
  STEP: Given a ReplicationController is created @ 07/22/25 20:12:49.531
  STEP: When the matched label of one of its pods change @ 07/22/25 20:12:49.54
  I0722 20:12:49.543728 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0722 20:12:50.325721      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:51.326285      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:52.326347      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:53.326474      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:54.326538      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:12:54.549084 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/22/25 20:12:54.559
  E0722 20:12:55.327127      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:12:55.566975 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-44" for this suite. @ 07/22/25 20:12:55.571
• [6.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/22/25 20:12:55.578
  I0722 20:12:55.578888 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 20:12:55.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:12:55.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:12:55.595
  STEP: creating the pod @ 07/22/25 20:12:55.597
  STEP: setting up watch @ 07/22/25 20:12:55.597
  STEP: submitting the pod to kubernetes @ 07/22/25 20:12:55.701
  STEP: verifying the pod is in kubernetes @ 07/22/25 20:12:55.712
  STEP: verifying pod creation was observed @ 07/22/25 20:12:55.715
  E0722 20:12:56.327599      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:12:57.328273      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/22/25 20:12:57.724
  STEP: verifying pod deletion was observed @ 07/22/25 20:12:57.733
  E0722 20:12:58.328508      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:12:59.079403 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9660" for this suite. @ 07/22/25 20:12:59.082
• [3.512 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 07/22/25 20:12:59.09
  I0722 20:12:59.090665 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename dns @ 07/22/25 20:12:59.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:12:59.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:12:59.103
  STEP: Creating a test headless service @ 07/22/25 20:12:59.105
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9139.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9139.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9139.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9139.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_udp@PTR;check="$$(dig +tcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_tcp@PTR;sleep 1; done
   @ 07/22/25 20:12:59.119
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9139.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9139.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9139.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9139.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9139.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_udp@PTR;check="$$(dig +tcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_tcp@PTR;sleep 1; done
   @ 07/22/25 20:12:59.119
  STEP: creating a pod to probe DNS @ 07/22/25 20:12:59.119
  STEP: submitting the pod to kubernetes @ 07/22/25 20:12:59.119
  E0722 20:12:59.328859      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:00.329796      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/22/25 20:13:01.144
  STEP: looking for the results for each expected name from probers @ 07/22/25 20:13:01.147
  I0722 20:13:01.152470 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.155526 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.159279 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.164544 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.186219 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.189195 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.192884 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.196176 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local from pod dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1: the server could not find the requested resource (get pods dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1)
  I0722 20:13:01.214963 21 dns_common.go:506] Lookups using dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1 failed for: [agnhost_udp@dns-test-service.dns-9139.svc.cluster.local agnhost_tcp@dns-test-service.dns-9139.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local jessie_udp@dns-test-service.dns-9139.svc.cluster.local jessie_tcp@dns-test-service.dns-9139.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9139.svc.cluster.local]

  I0722 20:13:01.221150 21 dns_common.go:514] Pod client logs for webserver: 
  I0722 20:13:01.229098 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0722 20:13:01.233958 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E0722 20:13:01.330257      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:02.330417      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:03.330630      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:04.330803      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:05.331732      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:06.205417 21 dns_common.go:546] DNS probes using dns-9139/dns-test-486bb95a-9c9a-4055-97c0-1fff7e6bf6f1 succeeded

  STEP: deleting the pod @ 07/22/25 20:13:06.205
  STEP: deleting the test service @ 07/22/25 20:13:06.221
  STEP: deleting the test headless service @ 07/22/25 20:13:06.25
  I0722 20:13:06.258688 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9139" for this suite. @ 07/22/25 20:13:06.261
• [7.176 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/22/25 20:13:06.266
  I0722 20:13:06.266519 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename secrets @ 07/22/25 20:13:06.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:06.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:06.282
  STEP: Creating secret with name secret-test-99c73865-cc2b-41e7-9e6f-21026738339f @ 07/22/25 20:13:06.309
  STEP: Creating a pod to test consume secrets @ 07/22/25 20:13:06.313
  E0722 20:13:06.332204      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:07.332443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:13:08.329
  I0722 20:13:08.332229 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-secrets-09464688-3c35-4666-aaeb-901d6f9de881 container secret-volume-test: <nil>
  E0722 20:13:08.332400      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/22/25 20:13:08.338
  I0722 20:13:08.354462 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9736" for this suite. @ 07/22/25 20:13:08.357
  STEP: Destroying namespace "secret-namespace-3629" for this suite. @ 07/22/25 20:13:08.363
• [2.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/22/25 20:13:08.369
  I0722 20:13:08.369738 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename namespaces @ 07/22/25 20:13:08.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:08.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:08.384
  STEP: Creating namespace "e2e-ns-kwmsw" @ 07/22/25 20:13:08.385
  I0722 20:13:08.400875 21 namespace.go:412] Namespace "e2e-ns-kwmsw-5342" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kwmsw-5342" @ 07/22/25 20:13:08.4
  I0722 20:13:08.409864 21 namespace.go:435] Namespace "e2e-ns-kwmsw-5342" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kwmsw-5342" @ 07/22/25 20:13:08.409
  I0722 20:13:08.416752 21 namespace.go:464] Namespace "e2e-ns-kwmsw-5342" has []v1.FinalizerName{"kubernetes"}
  I0722 20:13:08.416843 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6464" for this suite. @ 07/22/25 20:13:08.458
  STEP: Destroying namespace "e2e-ns-kwmsw-5342" for this suite. @ 07/22/25 20:13:08.464
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/22/25 20:13:08.471
  I0722 20:13:08.471273 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename lease-test @ 07/22/25 20:13:08.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:08.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:08.487
  I0722 20:13:08.538765 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3715" for this suite. @ 07/22/25 20:13:08.559
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/22/25 20:13:08.565
  I0722 20:13:08.565603 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 20:13:08.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:08.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:08.578
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:13:08.58
  E0722 20:13:09.332698      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:10.333719      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:11.334676      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:12.334898      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:13:12.604
  I0722 20:13:12.608005 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-1ce06898-16a8-4d3b-a275-60950489577a container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:13:12.613
  I0722 20:13:12.632027 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6585" for this suite. @ 07/22/25 20:13:12.636
• [4.078 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 07/22/25 20:13:12.643
  I0722 20:13:12.643910 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 20:13:12.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:12.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:12.658
  STEP: Counting existing ResourceQuota @ 07/22/25 20:13:12.66
  E0722 20:13:13.335146      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:14.335442      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:15.335524      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:16.335633      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:17.336515      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 20:13:17.665
  STEP: Ensuring resource quota status is calculated @ 07/22/25 20:13:17.669
  E0722 20:13:18.336758      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:19.336839      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/22/25 20:13:19.674
  STEP: Ensuring resource quota status captures replication controller creation @ 07/22/25 20:13:19.689
  E0722 20:13:20.337041      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:21.337211      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/22/25 20:13:21.693
  STEP: Ensuring resource quota status released usage @ 07/22/25 20:13:21.699
  E0722 20:13:22.338258      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:23.338331      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:23.705590 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9206" for this suite. @ 07/22/25 20:13:23.71
• [11.076 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/22/25 20:13:23.719
  I0722 20:13:23.719601 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename crd-webhook @ 07/22/25 20:13:23.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:23.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:23.734
  STEP: Setting up server cert @ 07/22/25 20:13:23.735
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/22/25 20:13:23.94
  STEP: Deploying the custom resource conversion webhook pod @ 07/22/25 20:13:23.946
  STEP: Wait for the deployment to be ready @ 07/22/25 20:13:23.96
  I0722 20:13:23.969457 21 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0722 20:13:24.339009      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:25.339641      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/22/25 20:13:25.982
  STEP: Verifying the service has paired with the endpoint @ 07/22/25 20:13:25.994
  E0722 20:13:26.340016      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:26.994679 21 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0722 20:13:27.003255 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  E0722 20:13:27.340936      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:28.341087      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:29.341233      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/22/25 20:13:29.553
  STEP: v2 custom resource should be converted @ 07/22/25 20:13:29.559
  I0722 20:13:30.109921 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8960" for this suite. @ 07/22/25 20:13:30.112
• [6.402 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 07/22/25 20:13:30.121
  I0722 20:13:30.121736 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 20:13:30.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:30.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:30.135
  STEP: Creating a Serviceaccount "e2e-sa-zmnrs" in namespace "svcaccounts-710" @ 07/22/25 20:13:30.136
  STEP: Creating a ServiceaccountToken "e2e-sa-zmnrs" in namespace "svcaccounts-710" @ 07/22/25 20:13:30.142
  STEP: Creating a TokenReview for "e2e-sa-zmnrs" in namespace "svcaccounts-710" @ 07/22/25 20:13:30.147
  I0722 20:13:30.149159 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-710" for this suite. @ 07/22/25 20:13:30.214
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/22/25 20:13:30.222
  I0722 20:13:30.222931 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename downward-api @ 07/22/25 20:13:30.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:30.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:30.236
  STEP: Creating a pod to test downward API volume plugin @ 07/22/25 20:13:30.238
  E0722 20:13:30.341645      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:31.341796      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:32.342835      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:33.342991      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:13:34.256
  I0722 20:13:34.259323 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod downwardapi-volume-64c829cd-fa56-4d93-94f0-ff3096c6a2ed container client-container: <nil>
  STEP: delete the pod @ 07/22/25 20:13:34.266
  I0722 20:13:34.278549 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3156" for this suite. @ 07/22/25 20:13:34.281
• [4.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/22/25 20:13:34.288
  I0722 20:13:34.288779 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename ingress @ 07/22/25 20:13:34.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:34.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:34.302
  STEP: getting /apis @ 07/22/25 20:13:34.304
  STEP: getting /apis/networking.k8s.io @ 07/22/25 20:13:34.306
  STEP: getting /apis/networking.k8s.iov1 @ 07/22/25 20:13:34.307
  STEP: creating @ 07/22/25 20:13:34.307
  STEP: getting @ 07/22/25 20:13:34.322
  STEP: listing @ 07/22/25 20:13:34.325
  STEP: watching @ 07/22/25 20:13:34.335
  I0722 20:13:34.335124 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/22/25 20:13:34.335
  E0722 20:13:34.343035      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: cluster-wide watching @ 07/22/25 20:13:34.436
  I0722 20:13:34.436312 21 ingress.go:198] starting watch
  STEP: patching @ 07/22/25 20:13:34.437
  STEP: updating @ 07/22/25 20:13:34.443
  I0722 20:13:34.452790 21 ingress.go:221] waiting for watch events with expected annotations
  I0722 20:13:34.452822 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/22/25 20:13:34.452
  STEP: updating /status @ 07/22/25 20:13:34.465
  STEP: get /status @ 07/22/25 20:13:34.475
  STEP: deleting @ 07/22/25 20:13:34.48
  STEP: deleting a collection @ 07/22/25 20:13:34.492
  I0722 20:13:34.507960 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7061" for this suite. @ 07/22/25 20:13:34.513
• [0.232 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 07/22/25 20:13:34.521
  I0722 20:13:34.521027 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename services @ 07/22/25 20:13:34.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:34.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:34.535
  STEP: creating service multiprotocol-test in namespace services-1786 @ 07/22/25 20:13:34.537
  STEP: creating pod pod1 in namespace services-1786 @ 07/22/25 20:13:34.546
  STEP: Creating pod pod1 in namespace services-1786 @ 07/22/25 20:13:34.546
  E0722 20:13:35.343733      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:36.344279      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1786 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/22/25 20:13:36.571
  I0722 20:13:36.582349 21 service.go:4553] successfully validated that service multiprotocol-test in namespace services-1786 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/22/25 20:13:36.582
  I0722 20:13:36.582393 21 resource.go:361] Creating new exec pod
  E0722 20:13:37.344382      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:38.344594      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:38.593546 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  I0722 20:13:38.684015 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.125 80\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  I0722 20:13:38.684072 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:13:38.684136 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0722 20:13:39.345634      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:40.345858      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:40.763282 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.125 80\n"
  I0722 20:13:40.763320 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/22/25 20:13:40.763
  I0722 20:13:40.773977 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  I0722 20:13:40.860354 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.125 80\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  I0722 20:13:40.860386 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0722 20:13:40.860463 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0722 20:13:41.345932      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:42.346193      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:42.940965 21 builder.go:146] stderr: "+ + echo hostName\nnc -v -u -w 2 10.152.183.125 80\n"
  I0722 20:13:42.941009 21 builder.go:147] stdout: ""
  I0722 20:13:42.941085 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0722 20:13:43.346784      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:44.346901      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:45.022103 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.152.183.125 80\n+ echo hostName\n"
  I0722 20:13:45.022146 21 builder.go:147] stdout: ""
  I0722 20:13:45.022209 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0722 20:13:45.346973      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:46.347070      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:47.106158 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.125 80\n"
  I0722 20:13:47.106204 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/22/25 20:13:47.106
  I0722 20:13:47.115677 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0722 20:13:47.347174      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:48.347205      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:49.203351 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.152.183.125 80\n+ echo hostName\n"
  I0722 20:13:49.203389 21 builder.go:147] stdout: "pod1"
  I0722 20:13:49.203486 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  E0722 20:13:49.347274      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:50.347348      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:51.296334 21 builder.go:135] rc: 1
  I0722 20:13:51.296396 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.152.183.125 80
  echo hostName
  nc: connect to 10.152.183.125 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0722 20:13:51.296463 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  E0722 20:13:51.347819      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:52.348210      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:53.349271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:53.376949 21 builder.go:135] rc: 1
  I0722 20:13:53.377003 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.125 80
  nc: connect to 10.152.183.125 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0722 20:13:53.377136 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  E0722 20:13:54.350287      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:55.350641      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:13:55.455785 21 builder.go:135] rc: 1
  I0722 20:13:55.455840 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2689688415 --namespace=services-1786 exec execpodjpvrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.125 80
  nc: connect to 10.152.183.125 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0722 20:13:55.456015 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1786" for this suite. @ 07/22/25 20:13:55.461
• [20.950 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 07/22/25 20:13:55.47
  I0722 20:13:55.470720 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename statefulset @ 07/22/25 20:13:55.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:13:55.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:13:55.484
  STEP: Creating service test in namespace statefulset-2615 @ 07/22/25 20:13:55.486
  STEP: Creating a new StatefulSet @ 07/22/25 20:13:55.492
  I0722 20:13:55.502874 21 wait.go:40] Found 0 stateful pods, waiting for 3
  E0722 20:13:56.350858      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:57.350996      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:58.351187      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:13:59.351254      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:00.351406      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:01.351695      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:02.351791      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:03.351956      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:04.352128      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:05.352874      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:14:05.505779 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 20:14:05.505817 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 20:14:05.505825 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/22/25 20:14:05.514
  I0722 20:14:05.524073 21 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 07/22/25 20:14:05.524
  E0722 20:14:06.353135      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:07.353292      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:08.353510      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:09.353608      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:10.354668      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:11.354798      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:12.354931      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:13.355097      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:14.355267      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:15.356167      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/22/25 20:14:15.533
  STEP: Performing a canary update @ 07/22/25 20:14:15.533
  I0722 20:14:15.542585 21 statefulset.go:2510] Updating stateful set ss2
  I0722 20:14:15.552431 21 wait.go:74] Waiting for Pod statefulset-2615/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0722 20:14:16.356223      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:17.356405      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:18.356520      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:19.356621      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:20.356691      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:21.356772      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:22.356987      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:23.357201      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:24.357433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:25.357542      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/22/25 20:14:25.551
  I0722 20:14:25.587462 21 wait.go:40] Found 2 stateful pods, waiting for 3
  E0722 20:14:26.358208      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:27.358274      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:28.358391      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:29.358470      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:30.358592      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:31.358665      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:32.358807      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:33.359271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:34.359384      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:35.359506      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:14:35.586154 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0722 20:14:35.586180 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0722 20:14:35.586188 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/22/25 20:14:35.593
  I0722 20:14:35.602698 21 statefulset.go:2510] Updating stateful set ss2
  I0722 20:14:35.611581 21 wait.go:74] Waiting for Pod statefulset-2615/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0722 20:14:36.360309      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:37.361267      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:38.361366      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:39.361513      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:40.361597      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:41.361753      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:42.361966      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:43.362252      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:44.362462      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:45.362591      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:14:45.620490 21 statefulset.go:2510] Updating stateful set ss2
  I0722 20:14:45.630132 21 wait.go:56] Waiting for StatefulSet statefulset-2615/ss2 to complete update
  I0722 20:14:45.630366 21 wait.go:63] Waiting for Pod statefulset-2615/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0722 20:14:46.362789      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:47.362893      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:48.363297      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:49.363518      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:50.363565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:51.363752      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:52.363976      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:53.364119      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:54.364257      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:55.364318      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:14:55.629960 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2615
  I0722 20:14:55.634294 21 rest.go:152] Scaling statefulset ss2 to 0
  E0722 20:14:56.364649      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:57.365318      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:58.365653      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:14:59.365541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:00.365631      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:01.366242      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:02.366428      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:03.366654      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:04.366771      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:05.367737      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:15:05.649224 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0722 20:15:05.652808 21 rest.go:90] Deleting statefulset ss2
  I0722 20:15:05.667736 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2615" for this suite. @ 07/22/25 20:15:05.672
• [70.207 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/22/25 20:15:05.678
  I0722 20:15:05.678183 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pods @ 07/22/25 20:15:05.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:15:05.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:15:05.693
  E0722 20:15:06.368234      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:07.369255      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:08.370282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:09.370411      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:15:09.738
  I0722 20:15:09.741675 21 output.go:207] Trying to get logs from node ip-172-31-7-234 pod client-envvars-013703dc-a634-4fa8-b741-85adaec83729 container env3cont: <nil>
  STEP: delete the pod @ 07/22/25 20:15:09.756
  I0722 20:15:09.775547 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9053" for this suite. @ 07/22/25 20:15:09.778
• [4.108 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/22/25 20:15:09.785
  I0722 20:15:09.785797 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename svcaccounts @ 07/22/25 20:15:09.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:15:09.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:15:09.801
  E0722 20:15:10.370553      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:11.371281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/22/25 20:15:11.832
  I0722 20:15:11.832406 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5338 pod-service-account-5013a417-1693-470f-8d72-2427bdc38d1d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/22/25 20:15:11.912
  I0722 20:15:11.912166 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5338 pod-service-account-5013a417-1693-470f-8d72-2427bdc38d1d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/22/25 20:15:11.986
  I0722 20:15:11.986727 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5338 pod-service-account-5013a417-1693-470f-8d72-2427bdc38d1d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0722 20:15:12.068712 21 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-5338"
  I0722 20:15:12.070087 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5338" for this suite. @ 07/22/25 20:15:12.074
• [2.296 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/22/25 20:15:12.081
  I0722 20:15:12.081940 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 20:15:12.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:15:12.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:15:12.097
  STEP: Creating a suspended cronjob @ 07/22/25 20:15:12.098
  STEP: Ensuring no jobs are scheduled @ 07/22/25 20:15:12.102
  E0722 20:15:12.371758      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:13.372099      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:14.372130      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:15.372283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:16.373067      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:17.373310      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:18.374365      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:19.374563      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:20.374607      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:21.374712      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:22.375485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:23.375605      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:24.376194      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:25.376390      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:26.376746      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:27.376920      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:28.377992      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:29.378101      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:30.378832      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:31.378902      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:32.379498      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:33.379573      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:34.380158      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:35.380762      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:36.381210      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:37.381305      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:38.382281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:39.382492      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:40.382609      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:41.382704      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:42.383295      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:43.383506      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:44.383680      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:45.383880      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:46.384847      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:47.384974      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:48.385895      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:49.386135      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:50.387156      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:51.387833      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:52.388270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:53.388351      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:54.388685      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:55.388764      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:56.389202      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:57.389302      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:58.390285      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:15:59.390382      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:00.391287      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:01.391384      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:02.391954      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:03.392166      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:04.392295      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:05.392443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:06.392585      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:07.392797      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:08.393022      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:09.393198      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:10.393779      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:11.393989      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:12.395039      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:13.395275      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:14.395865      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:15.395944      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:16.396585      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:17.396667      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:18.397204      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:19.397266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:20.397660      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:21.397756      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:22.397789      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:23.397880      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:24.397914      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:25.398737      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:26.398800      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:27.398903      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:28.399282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:29.399368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:30.400138      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:31.400241      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:32.400772      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:33.400870      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:34.401492      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:35.401628      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:36.402269      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:37.402356      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:38.402426      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:39.402673      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:40.402761      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:41.402851      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:42.403570      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:43.403670      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:44.404507      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:45.404660      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:46.405344      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:47.405493      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:48.406488      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:49.406599      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:50.407420      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:51.407595      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:52.407978      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:53.408072      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:54.408806      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:55.408870      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:56.409142      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:57.409213      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:58.409444      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:16:59.409494      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:00.410261      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:01.410360      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:02.411323      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:03.411440      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:04.412155      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:05.412299      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:06.412342      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:07.412485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:08.413417      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:09.413613      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:10.413987      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:11.414179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:12.414443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:13.414652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:14.415495      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:15.415604      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:16.416002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:17.416145      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:18.417077      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:19.417214      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:20.417457      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:21.418156      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:22.418240      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:23.418389      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:24.419247      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:25.419786      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:26.419863      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:27.420215      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:28.420339      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:29.420608      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:30.420702      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:31.421267      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:32.421470      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:33.422279      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:34.422466      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:35.422545      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:36.422759      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:37.422973      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:38.423147      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:39.423238      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:40.423340      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:41.423450      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:42.423583      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:43.423818      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:44.423892      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:45.424631      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:46.424725      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:47.425601      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:48.425847      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:49.426208      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:50.426430      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:51.427293      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:52.427373      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:53.427476      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:54.427547      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:55.427790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:56.428640      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:57.428738      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:58.428806      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:17:59.429215      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:00.429790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:01.430265      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:02.430358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:03.431202      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:04.431293      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:05.431394      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:06.431588      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:07.432220      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:08.432433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:09.433203      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:10.433361      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:11.433522      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:12.434371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:13.434649      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:14.434805      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:15.435644      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:16.435805      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:17.435960      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:18.436179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:19.436418      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:20.437443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:21.437533      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:22.437616      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:23.437740      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:24.437821      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:25.438273      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:26.438340      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:27.438461      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:28.438539      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:29.439277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:30.439345      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:31.439404      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:32.439515      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:33.439697      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:34.439766      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:35.440790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:36.440873      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:37.441097      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:38.441299      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:39.441413      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:40.441549      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:41.442302      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:42.442529      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:43.443270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:44.443501      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:45.443789      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:46.443937      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:47.444175      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:48.444248      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:49.444356      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:50.444458      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:51.444533      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:52.444711      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:53.444827      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:54.444898      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:55.445807      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:56.446013      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:57.447060      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:58.447358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:18:59.447224      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:00.447793      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:01.448265      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:02.449228      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:03.450231      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:04.451257      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:05.451479      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:06.451670      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:07.452178      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:08.452317      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:09.452601      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:10.452760      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:11.453813      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:12.453949      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:13.454114      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:14.454303      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:15.454545      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:16.454563      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:17.455238      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:18.455437      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:19.456247      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:20.456316      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:21.456971      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:22.457187      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:23.458293      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:24.458383      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:25.459260      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:26.459368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:27.459489      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:28.460242      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:29.460342      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:30.460529      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:31.461243      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:32.461346      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:33.461531      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:34.461716      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:35.461794      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:36.461974      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:37.462353      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:38.462535      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:39.463397      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:40.463625      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:41.464568      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:42.464764      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:43.465376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:44.465556      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:45.465752      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:46.465938      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:47.465999      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:48.466213      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:49.467288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:50.467379      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:51.467540      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:52.467636      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:53.468255      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:54.468349      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:55.468716      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:56.468802      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:57.469245      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:58.469341      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:19:59.469454      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:00.469565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:01.469664      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:02.470245      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:03.470536      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:04.471302      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:05.471388      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:06.471578      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:07.471678      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:08.471872      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:09.472764      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:10.472876      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:11.473175      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/22/25 20:20:12.102
  STEP: Removing cronjob @ 07/22/25 20:20:12.108
  I0722 20:20:12.116404 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7992" for this suite. @ 07/22/25 20:20:12.121
• [300.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/22/25 20:20:12.128
  I0722 20:20:12.128108 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename cronjob @ 07/22/25 20:20:12.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:20:12.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:20:12.151
  STEP: Creating a ReplaceConcurrent cronjob @ 07/22/25 20:20:12.153
  STEP: Ensuring a job is scheduled @ 07/22/25 20:20:12.158
  E0722 20:20:12.473291      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:13.473430      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:14.474282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:15.474380      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:16.474944      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:17.475038      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:18.475282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:19.475372      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:20.475534      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:21.475749      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:22.476757      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:23.476841      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:24.477452      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:25.477574      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:26.478266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:27.478339      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:28.478455      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:29.478525      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:30.478633      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:31.478700      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:32.479634      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:33.479726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:34.480812      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:35.480906      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:36.481667      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:37.481882      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:38.482320      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:39.482542      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:40.483581      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:41.483669      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:42.484394      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:43.484631      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:44.485196      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:45.485328      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:46.485774      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:47.485953      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:48.486868      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:49.486947      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:50.487087      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:51.487226      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:52.487991      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:53.488191      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:54.488953      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:55.489813      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:56.490663      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:57.490874      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:58.491177      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:20:59.491142      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/22/25 20:21:00.163
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/22/25 20:21:00.172
  STEP: Ensuring the job is replaced with a new one @ 07/22/25 20:21:00.175
  E0722 20:21:00.491768      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:01.491970      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:02.493065      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:03.493280      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:04.493347      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:05.493518      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:06.493578      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:07.493854      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:08.494904      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:09.495397      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:10.496221      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:11.496289      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:12.497002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:13.497216      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:14.497295      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:15.497376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:16.497945      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:17.498281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:18.499017      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:19.499247      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:20.500038      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:21.500221      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:22.500336      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:23.500476      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:24.501280      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:25.501371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:26.502387      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:27.502492      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:28.503024      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:29.503205      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:30.503787      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:31.504283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:32.505152      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:33.505372      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:34.505912      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:35.506074      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:36.506150      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:37.506224      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:38.506790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:39.506950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:40.507284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:41.507334      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:42.508081      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:43.508283      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:44.508757      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:45.509790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:46.510387      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:47.510512      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:48.511276      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:49.511381      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:50.511580      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:51.511667      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:52.511790      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:53.511886      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:54.512281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:55.512381      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:56.513411      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:57.513652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:58.513774      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:21:59.513905      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/22/25 20:22:00.179
  I0722 20:22:00.186116 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7799" for this suite. @ 07/22/25 20:22:00.191
• [108.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/22/25 20:22:00.203
  I0722 20:22:00.203387 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename pod-network-test @ 07/22/25 20:22:00.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:22:00.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:22:00.219
  STEP: Performing setup for networking test in namespace pod-network-test-6421 @ 07/22/25 20:22:00.221
  STEP: creating a selector @ 07/22/25 20:22:00.221
  STEP: Creating the service pods in kubernetes @ 07/22/25 20:22:00.221
  I0722 20:22:00.221753 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0722 20:22:00.514774      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:01.514964      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:02.515037      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:03.515269      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:04.516207      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:05.516915      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:06.516977      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:07.517226      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:08.517980      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:09.518192      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:10.518750      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:11.518824      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:12.519263      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:13.519341      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/22/25 20:22:14.377
  E0722 20:22:14.519976      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:15.520142      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:16.393532 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0722 20:22:16.393562 21 networking.go:42] Breadth first check of 192.168.183.138 on host 172.31.31.147...
  I0722 20:22:16.396658 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.31:9080/dial?request=hostname&protocol=http&host=192.168.183.138&port=8083&tries=1'] Namespace:pod-network-test-6421 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:22:16.396684 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:22:16.396724 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6421/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.183.138%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 20:22:16.446485 21 utils.go:356] Waiting for responses: map[]
  I0722 20:22:16.446518 21 utils.go:360] reached 192.168.183.138 after 0/1 tries
  I0722 20:22:16.446527 21 networking.go:42] Breadth first check of 192.168.231.50 on host 172.31.68.73...
  I0722 20:22:16.451438 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.31:9080/dial?request=hostname&protocol=http&host=192.168.231.50&port=8083&tries=1'] Namespace:pod-network-test-6421 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:22:16.451459 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:22:16.451504 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6421/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.231.50%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0722 20:22:16.485137 21 utils.go:356] Waiting for responses: map[]
  I0722 20:22:16.485191 21 utils.go:360] reached 192.168.231.50 after 0/1 tries
  I0722 20:22:16.485208 21 networking.go:42] Breadth first check of 192.168.12.47 on host 172.31.7.234...
  I0722 20:22:16.489185 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.31:9080/dial?request=hostname&protocol=http&host=192.168.12.47&port=8083&tries=1'] Namespace:pod-network-test-6421 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0722 20:22:16.489209 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0722 20:22:16.489253 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6421/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.12.47%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0722 20:22:16.520711      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:16.520752 21 utils.go:356] Waiting for responses: map[]
  I0722 20:22:16.520790 21 utils.go:360] reached 192.168.12.47 after 0/1 tries
  I0722 20:22:16.520799 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0722 20:22:16.521011 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6421" for this suite. @ 07/22/25 20:22:16.525
• [16.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/22/25 20:22:16.532
  I0722 20:22:16.532569 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename containers @ 07/22/25 20:22:16.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:22:16.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:22:16.546
  STEP: Creating a pod to test override all @ 07/22/25 20:22:16.547
  E0722 20:22:17.521271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:18.521366      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:19.521627      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:20.521741      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:22:20.573
  I0722 20:22:20.576551 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod client-containers-e0f56287-dd40-4e69-a606-9bf2032865d6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/22/25 20:22:20.591
  I0722 20:22:20.611605 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8269" for this suite. @ 07/22/25 20:22:20.615
• [4.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/22/25 20:22:20.622
  I0722 20:22:20.622615 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 20:22:20.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:22:20.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:22:20.636
  STEP: creating a Deployment @ 07/22/25 20:22:20.641
  STEP: waiting for Deployment to be created @ 07/22/25 20:22:20.646
  STEP: waiting for all Replicas to be Ready @ 07/22/25 20:22:20.647
  I0722 20:22:20.648428 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.648447 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.666560 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.666582 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.703748 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.703781 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.740222 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0722 20:22:20.740254 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0722 20:22:21.521860      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:21.981411 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0722 20:22:21.981442 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0722 20:22:22.293640 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/22/25 20:22:22.293
  I0722 20:22:22.302734 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/22/25 20:22:22.302
  I0722 20:22:22.303660 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303717 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303777 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303783 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303790 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303796 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303866 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303872 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 0
  I0722 20:22:22.303880 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:22.303886 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:22.303906 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.303912 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.303937 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.303945 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.328668 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.328696 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.353545 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.353579 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:22.370211 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:22.370241 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:22.381524 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:22.381552 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  E0722 20:22:22.522806      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:23.254834 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:23.254873 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:23.281564 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  STEP: listing Deployments @ 07/22/25 20:22:23.281
  I0722 20:22:23.285152 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/22/25 20:22:23.285
  I0722 20:22:23.295922 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/22/25 20:22:23.295
  I0722 20:22:23.300827 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 20:22:23.312626 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 20:22:23.340490 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 20:22:23.360528 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0722 20:22:23.523793      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:23.985709 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 20:22:24.268272 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 20:22:24.292414 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0722 20:22:24.309661 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0722 20:22:24.524159      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:24.998930 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/22/25 20:22:25.036
  STEP: fetching the DeploymentStatus @ 07/22/25 20:22:25.051
  I0722 20:22:25.058422 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:25.058444 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:25.058453 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:25.058554 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 1
  I0722 20:22:25.058567 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:25.058575 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 3
  I0722 20:22:25.058636 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:25.058658 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 2
  I0722 20:22:25.058667 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8207 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/22/25 20:22:25.058
  I0722 20:22:25.072096 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072328 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072399 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072485 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072498 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072513 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072556 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072680 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072688 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072953 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072965 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.072972 21 deployment.go:475] observed event type MODIFIED
  I0722 20:22:25.076937 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0722 20:22:25.084130 21 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8207",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9ce913e-fc46-4e80-8940-fe52ac609abb",
      ResourceVersion: (string) (len=5) "49221",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812540,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "4ef4dd4a-8cf8-4cbb-b142-756632a9caf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 65 66 34  64 64 34 61 2d 38 63 66  |":\"4ef4dd4a-8cf|
              00000130  38 2d 34 63 62 62 2d 62  31 34 32 2d 37 35 36 36  |8-4cbb-b142-7566|
              00000140  33 32 61 39 63 61 66 30  5c 22 7d 22 3a 7b 7d 7d  |32a9caf0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0722 20:22:25.087522 21 deployment.go:669] pod: "test-deployment-564597bcc-v5hzq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-564597bcc-v5hzq",
      GenerateName: (string) (len=26) "test-deployment-564597bcc-",
      Namespace: (string) (len=15) "deployment-8207",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edb486fb-b9e7-4688-b93f-4a7324d87d96",
      ResourceVersion: (string) (len=5) "49294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812540,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812543,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-564597bcc",
          UID: (types.UID) (len=36) "a9ce913e-fc46-4e80-8940-fe52ac609abb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 39 63 65 39 31 33 65  |uid\":\"a9ce913e|
              000000a0  2d 66 63 34 36 2d 34 65  38 30 2d 38 39 34 30 2d  |-fc46-4e80-8940-|
              000000b0  66 65 35 32 61 63 36 30  39 61 62 62 5c 22 7d 22  |fe52ac609abb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=689) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000100  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000110  2c 22 6b 3a 7b 5c 22 74  79 70 65 5c 22 3a 5c 22  |,"k:{\"type\":\"|
              00000120  50 6f 64 52 65 61 64 79  54 6f 53 74 61 72 74 43  |PodReadyToStartC|
              00000130  6f 6e 74 61 69 6e 65 72  73 5c 22 7d 22 3a 7b 22  |ontainers\"}":{"|
              00000140  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              00000150  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              00000160  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000170  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000180  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000190  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              000001a0  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              000001b0  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              000001c0  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              000001d0  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              000001e0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000001f0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              00000200  79 70 65 22 3a 7b 7d 7d  7d 2c 22 66 3a 63 6f 6e  |ype":{}}},"f:con|
              00000210  74 61 69 6e 65 72 53 74  61 74 75 73 65 73 22 3a  |tainerStatuses":|
              00000220  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 22 3a 7b 7d  |{},"f:hostIP":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 73 22 3a 7b 7d 2c  |,"f:hostIPs":{},|
              00000240  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              00000250  70 6f 64 49 50 22 3a 7b  7d 2c 22 66 3a 70 6f 64  |podIP":{},"f:pod|
              00000260  49 50 73 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 6b 3a  |IPs":{".":{},"k:|
              00000270  7b 5c 22 69 70 5c 22 3a  5c 22 31 39 32 2e 31 36  |{\"ip\":\"192.16|
              00000280  38 2e 31 32 2e 39 5c 22  7d 22 3a 7b 22 2e 22 3a  |8.12.9\"}":{".":|
              00000290  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002a0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002b0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jl7gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jl7gp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=6) "Failed",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=12) "192.168.12.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.12.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812540,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 2,
              Signal: (int32) 0,
              Reason: (string) (len=5) "Error",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888812541,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888812544,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://83679f5cd4f7ba2443dcd69679c294029638640c26bf548bb219580d2a12bc93"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://83679f5cd4f7ba2443dcd69679c294029638640c26bf548bb219580d2a12bc93",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jl7gp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0722 20:22:25.088680 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8207" for this suite. @ 07/22/25 20:22:25.097
• [4.480 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 07/22/25 20:22:25.103
  I0722 20:22:25.103128 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename resourcequota @ 07/22/25 20:22:25.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:22:25.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:22:25.116
  E0722 20:22:25.524774      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:26.524892      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:27.525748      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:28.525804      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:29.526136      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:30.526493      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:31.527418      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:32.528420      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:33.528523      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:34.529275      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:35.530261      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:36.531324      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:37.531495      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:38.531611      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:39.532510      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:40.532633      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:41.532736      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/22/25 20:22:42.123
  E0722 20:22:42.532823      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:43.532931      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:44.533282      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:45.533442      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:46.534028      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/22/25 20:22:47.128
  STEP: Ensuring resource quota status is calculated @ 07/22/25 20:22:47.135
  E0722 20:22:47.534819      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:48.534944      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/22/25 20:22:49.14
  STEP: Ensuring resource quota status captures configMap creation @ 07/22/25 20:22:49.152
  E0722 20:22:49.535702      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:50.535857      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/22/25 20:22:51.159
  STEP: Ensuring resource quota status released usage @ 07/22/25 20:22:51.165
  E0722 20:22:51.536074      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:52.536293      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:53.169938 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8402" for this suite. @ 07/22/25 20:22:53.174
• [28.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/22/25 20:22:53.181
  I0722 20:22:53.181609 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename deployment @ 07/22/25 20:22:53.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:22:53.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:22:53.196
  I0722 20:22:53.206597 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0722 20:22:53.537011      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:54.538033      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:55.538963      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:56.539069      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:57.539277      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:22:58.210556 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/22/25 20:22:58.21
  I0722 20:22:58.210625 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0722 20:22:58.539570      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:22:59.539495      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:00.215401 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0722 20:23:00.225371 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0722 20:23:00.540285      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:01.541345      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:02.233502 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0722 20:23:02.240842 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0722 20:23:02.247274 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0722 20:23:02.256713 21 deployment.go:314] Updating deployment test-rollover-deployment
  I0722 20:23:02.256749 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0722 20:23:02.541433      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:03.541503      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:04.264776 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0722 20:23:04.272903 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0722 20:23:04.278876 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 20:23:04.278923 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 20:23:04.542358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:05.542577      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:06.286537 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 20:23:06.286593 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 20:23:06.542671      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:07.542890      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:08.288651 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 20:23:08.288712 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 20:23:08.543891      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:09.544126      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:10.286864 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 20:23:10.286923 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 20:23:10.544232      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:11.544327      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:12.285674 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0722 20:23:12.285736 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 22, 20, 23, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 22, 20, 23, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0722 20:23:12.545213      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:13.545328      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0722 20:23:14.286877 21 deployment.go:95] 
  I0722 20:23:14.286921 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0722 20:23:14.297019 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a5a4363-7a07-4e91-a1fd-1ad0c1331eb7",
      ResourceVersion: (string) (len=5) "49630",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812580,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0722 20:23:14.388356 21 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e567e546-5d1b-480f-8759-8f44d471821b",
      ResourceVersion: (string) (len=5) "49620",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0a5a4363-7a07-4e91-a1fd-1ad0c1331eb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 35 61 34 33  36 33 2d 37 61 30 37 2d  |\"0a5a4363-7a07-|
              00000120  34 65 39 31 2d 61 31 66  64 2d 31 61 64 30 63 31  |4e91-a1fd-1ad0c1|
              00000130  33 33 31 65 62 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |331eb7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 20:23:14.388874 21 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0722 20:23:14.389131 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78cf0529-8a7c-4e3b-b4fd-79827b7ed939",
      ResourceVersion: (string) (len=5) "49629",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812573,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0a5a4363-7a07-4e91-a1fd-1ad0c1331eb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 61 35 61 34 33 36 33  2d 37 61 30 37 2d 34 65  |0a5a4363-7a07-4e|
              000000c0  39 31 2d 61 31 66 64 2d  31 61 64 30 63 31 33 33  |91-a1fd-1ad0c133|
              000000d0  31 65 62 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1eb7\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 20:23:14.389807 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "637bd9e2-1405-477b-a230-6e171c22dc21",
      ResourceVersion: (string) (len=5) "49579",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812580,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0a5a4363-7a07-4e91-a1fd-1ad0c1331eb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 35 61 34 33  36 33 2d 37 61 30 37 2d  |\"0a5a4363-7a07-|
              00000120  34 65 39 31 2d 61 31 66  64 2d 31 61 64 30 63 31  |4e91-a1fd-1ad0c1|
              00000130  33 33 31 65 62 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |331eb7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0722 20:23:14.394879 21 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-fb5dc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-fb5dc",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55eeef38-ea40-4240-8955-fdb8a8810e11",
      ResourceVersion: (string) (len=5) "49596",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "e567e546-5d1b-480f-8759-8f44d471821b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  36 37 65 35 34 36 2d 35  |d\":\"e567e546-5|
              00000090  64 31 62 2d 34 38 30 66  2d 38 37 35 39 2d 38 66  |d1b-480f-8759-8f|
              000000a0  34 34 64 34 37 31 38 32  31 62 5c 22 7d 22 3a 7b  |44d471821b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 35 32 5c 22 7d 22 3a  |2.168.12.52\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmj9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmj9h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-7-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888812582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.234"
        }
      },
      PodIP: (string) (len=13) "192.168.12.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888812582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888812582,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://bec7395f3e193d15336cad85c1ca8397c9b379fd81669178514c191c7eae6b3f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tmj9h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0722 20:23:14.396121 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6587" for this suite. @ 07/22/25 20:23:14.399
• [21.225 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/22/25 20:23:14.406
  I0722 20:23:14.406539 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-2689688415
  STEP: Building a namespace api object, basename emptydir @ 07/22/25 20:23:14.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/22/25 20:23:14.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/22/25 20:23:14.421
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/22/25 20:23:14.422
  E0722 20:23:14.546216      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0722 20:23:15.546839      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/22/25 20:23:16.441
  I0722 20:23:16.444874 21 output.go:207] Trying to get logs from node ip-172-31-31-147 pod pod-6932ac6f-4c10-44b8-8c13-451d768afb7b container test-container: <nil>
  STEP: delete the pod @ 07/22/25 20:23:16.451
  I0722 20:23:16.467890 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9584" for this suite. @ 07/22/25 20:23:16.472
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0722 20:23:16.480762 21 suites.go:34] Running AfterSuite actions on node 1
  I0722 20:23:16.480802 21 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.028 seconds]
------------------------------

Ran 411 of 6625 Specs in 6211.174 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6214 Skipped
PASS

Ginkgo ran 1 suite in 1h43m31.981400133s
Test Suite Passed
